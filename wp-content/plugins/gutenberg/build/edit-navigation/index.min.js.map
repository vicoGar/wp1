{"version":3,"file":"./build/edit-navigation/index.min.js","mappings":"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","sources":["webpack://wp/./node_modules/classnames/index.js","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"blockLibrary\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/./packages/edit-navigation/build-module/constants/@wordpress/edit-navigation/src/constants/index.js","webpack://wp/./packages/edit-navigation/build-module/store/@wordpress/edit-navigation/src/store/reducer.js","webpack://wp/./packages/edit-navigation/build-module/store/@wordpress/edit-navigation/src/store/utils.js","webpack://wp/external window \"lodash\"","webpack://wp/./packages/edit-navigation/build-module/store/@wordpress/edit-navigation/src/store/transform.js","webpack://wp/./packages/edit-navigation/build-module/store/@wordpress/edit-navigation/src/store/resolvers.js","webpack://wp/./packages/edit-navigation/build-module/store/@wordpress/edit-navigation/src/store/selectors.js","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/./packages/edit-navigation/build-module/store/@wordpress/edit-navigation/src/store/constants.js","webpack://wp/./packages/edit-navigation/build-module/store/@wordpress/edit-navigation/src/store/actions.js","webpack://wp/./packages/edit-navigation/build-module/store/@wordpress/edit-navigation/src/store/index.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://wp/external window [\"wp\",\"hooks\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"blockEditor\"]","webpack://wp/./packages/edit-navigation/build-module/filters/@wordpress/edit-navigation/src/filters/add-navigation-editor-custom-appender.js","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/chevron-down.js","webpack://wp/./packages/edit-navigation/build-module/hooks/@wordpress/edit-navigation/src/hooks/use-menu-entity.js","webpack://wp/./packages/edit-navigation/build-module/hooks/@wordpress/edit-navigation/src/hooks/use-menu-entity-prop.js","webpack://wp/./packages/edit-navigation/build-module/hooks/@wordpress/edit-navigation/src/hooks/use-navigation-editor.js","webpack://wp/external window [\"wp\",\"dom\"]","webpack://wp/./packages/edit-navigation/build-module/hooks/@wordpress/edit-navigation/src/hooks/use-selected-menu-id.js","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/./packages/edit-navigation/build-module/hooks/@wordpress/edit-navigation/src/hooks/use-menu-locations.js","webpack://wp/./packages/edit-navigation/build-module/hooks/@wordpress/edit-navigation/src/hooks/use-navigation-editor-root-block.js","webpack://wp/./packages/edit-navigation/build-module/hooks/@wordpress/edit-navigation/src/hooks/index.js","webpack://wp/./packages/edit-navigation/build-module/components/block-placeholder/@wordpress/edit-navigation/src/components/block-placeholder/use-navigation-entities.js","webpack://wp/./packages/edit-navigation/build-module/components/block-placeholder/@wordpress/edit-navigation/src/components/block-placeholder/index.js","webpack://wp/./packages/edit-navigation/build-module/filters/@wordpress/edit-navigation/src/filters/add-navigation-editor-placeholder.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/check.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/star-filled.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/star-empty.js","webpack://wp/external window [\"wp\",\"viewport\"]","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/close-small.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/reducer.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/actions.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/selectors.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/constants.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/index.js","webpack://wp/external window [\"wp\",\"plugins\"]","webpack://wp/./packages/interface/build-module/components/complementary-area-context/@wordpress/interface/src/components/complementary-area-context/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-toggle/@wordpress/interface/src/components/complementary-area-toggle/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-header/@wordpress/interface/src/components/complementary-area-header/index.js","webpack://wp/./packages/interface/build-module/components/action-item/@wordpress/interface/src/components/action-item/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-more-menu-item/@wordpress/interface/src/components/complementary-area-more-menu-item/index.js","webpack://wp/./packages/interface/build-module/components/pinned-items/@wordpress/interface/src/components/pinned-items/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area/@wordpress/interface/src/components/complementary-area/index.js","webpack://wp/./packages/interface/build-module/components/interface-skeleton/@wordpress/interface/src/components/interface-skeleton/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/more-vertical.js","webpack://wp/./packages/interface/build-module/components/more-menu-dropdown/@wordpress/interface/src/components/more-menu-dropdown/index.js","webpack://wp/external window [\"wp\",\"htmlEntities\"]","webpack://wp/./packages/edit-navigation/build-module/components/name-display/@wordpress/edit-navigation/src/components/name-display/index.js","webpack://wp/./packages/edit-navigation/build-module/filters/@wordpress/edit-navigation/src/filters/add-menu-name-editor.js","webpack://wp/./packages/edit-navigation/build-module/filters/@wordpress/edit-navigation/src/filters/disable-inserting-non-navigation-blocks.js","webpack://wp/./packages/edit-navigation/build-module/filters/@wordpress/edit-navigation/src/filters/remove-edit-unsupported-features.js","webpack://wp/./packages/edit-navigation/build-module/filters/@wordpress/edit-navigation/src/filters/remove-settings-unsupported-features.js","webpack://wp/external window [\"wp\",\"keyboardShortcuts\"]","webpack://wp/./packages/edit-navigation/build-module/components/add-menu/@wordpress/edit-navigation/src/components/add-menu/index.js","webpack://wp/./packages/edit-navigation/build-module/components/menu-switcher/@wordpress/edit-navigation/src/components/menu-switcher/index.js","webpack://wp/./packages/edit-navigation/build-module/components/layout/@wordpress/edit-navigation/src/components/layout/unselected-menu-state.js","webpack://wp/./packages/edit-navigation/build-module/components/error-boundary/@wordpress/edit-navigation/src/components/error-boundary/index.js","webpack://wp/./packages/edit-navigation/build-module/components/layout/@wordpress/edit-navigation/src/components/layout/shortcuts.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/cog.js","webpack://wp/./packages/edit-navigation/build-module/components/sidebar/@wordpress/edit-navigation/src/components/sidebar/sidebar-header.js","webpack://wp/./packages/edit-navigation/build-module/components/name-editor/@wordpress/edit-navigation/src/components/name-editor/index.js","webpack://wp/./packages/edit-navigation/build-module/components/sidebar/@wordpress/edit-navigation/src/components/sidebar/auto-add-pages.js","webpack://wp/./packages/edit-navigation/build-module/components/sidebar/@wordpress/edit-navigation/src/components/sidebar/menu-settings.js","webpack://wp/./packages/edit-navigation/build-module/components/sidebar/@wordpress/edit-navigation/src/components/sidebar/manage-locations.js","webpack://wp/./packages/edit-navigation/build-module/components/sidebar/@wordpress/edit-navigation/src/components/sidebar/delete-menu.js","webpack://wp/./packages/edit-navigation/build-module/components/sidebar/@wordpress/edit-navigation/src/components/sidebar/index.js","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/menu-actions.js","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/new-button.js","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/save-button.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/undo.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/redo.js","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/undo-button.js","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/redo-button.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/plus.js","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/inserter-toggle.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/external.js","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/tools-more-menu-group.js","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/more-menu.js","webpack://wp/./packages/edit-navigation/build-module/components/header/@wordpress/edit-navigation/src/components/header/index.js","webpack://wp/./packages/edit-navigation/build-module/components/notices/@wordpress/edit-navigation/src/components/notices/index.js","webpack://wp/./packages/edit-navigation/build-module/components/editor/@wordpress/edit-navigation/src/components/editor/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/close.js","webpack://wp/./packages/edit-navigation/build-module/components/inserter-sidebar/@wordpress/edit-navigation/src/components/inserter-sidebar/index.js","webpack://wp/./packages/edit-navigation/build-module/components/layout/@wordpress/edit-navigation/src/components/layout/unsaved-changes-warning.js","webpack://wp/./packages/edit-navigation/build-module/components/layout/@wordpress/edit-navigation/src/components/layout/index.js","webpack://wp/./packages/edit-navigation/build-module/hooks/@wordpress/edit-navigation/src/hooks/use-menu-notifications.js","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/./packages/edit-navigation/build-module/utils/@wordpress/edit-navigation/src/utils/index.js","webpack://wp/./packages/edit-navigation/build-module/@wordpress/edit-navigation/src/index.js","webpack://wp/./packages/edit-navigation/build-module/filters/@wordpress/edit-navigation/src/filters/index.js"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockLibrary\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * \"Kind\" of the menu post.\n *\n * @type {string}\n */\nexport const MENU_KIND = 'root';\n\n/**\n * \"post type\" of the menu post.\n *\n * @type {string}\n */\nexport const MENU_POST_TYPE = 'menu';\n\n/**\n * \"Kind\" of the navigation post.\n *\n * @type {string}\n */\nexport const NAVIGATION_POST_KIND = 'root';\n\n/**\n * \"post type\" of the navigation post.\n *\n * @type {string}\n */\nexport const NAVIGATION_POST_POST_TYPE = 'navigationPost';\n\n/**\n * The scope name of the editor's complementary area.\n *\n * @type {string}\n */\nexport const SIDEBAR_SCOPE = 'core/edit-navigation';\n\n/**\n * The identifier of the editor's menu complementary area.\n *\n * @type {string}\n */\nexport const SIDEBAR_MENU = 'edit-navigation/menu';\n\n/**\n * The identifier of the editor's block complementary area.\n *\n * @type {string}\n */\nexport const SIDEBAR_BLOCK = 'edit-navigation/block-inspector';\n\n/**\n * The string identifier for the menu item's \"target\" attribute indicating\n * the menu item link should open in a new tab.\n *\n * @type {string}\n */\nexport const NEW_TAB_TARGET_ATTRIBUTE = '_blank';\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer keeping track of selected menu ID.\n *\n * @param {number} state  Current state.\n * @param {Object} action Dispatched action.\n * @return {Object} Updated state.\n */\nexport function selectedMenuId( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_SELECTED_MENU_ID':\n\t\t\treturn action.menuId;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer tracking whether the inserter is open.\n *\n * @param {boolean|Object} state        Current state.\n * @param {Object}         action       Dispatched action.\n * @param {string}         action.type  String indicating action type.\n * @param {boolean}        action.value Flag indicating whether the panel should be open/close.\n */\nfunction blockInserterPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value;\n\t}\n\treturn state;\n}\n\nexport default combineReducers( {\n\tselectedMenuId,\n\tblockInserterPanel,\n} );\n","/**\n * A WP nav_menu_item object.\n * For more documentation on the individual fields present on a menu item please see:\n * https://core.trac.wordpress.org/browser/tags/5.7.1/src/wp-includes/nav-menu.php#L789\n *\n * Changes made here should also be mirrored in packages/block-library/src/navigation/map-menu-items-to-blocks.js.\n *\n * @typedef WPNavMenuItem\n *\n * @property {Object} title       stores the raw and rendered versions of the title/label for this menu item.\n * @property {Array}  xfn         the XFN relationships expressed in the link of this menu item.\n * @property {Array}  classes     the HTML class attributes for this menu item.\n * @property {string} attr_title  the HTML title attribute for this menu item.\n * @property {string} object      The type of object originally represented, such as 'category', 'post', or 'attachment'.\n * @property {string} object_id   The DB ID of the original object this menu item represents, e.g. ID for posts and term_id for categories.\n * @property {string} description The description of this menu item.\n * @property {string} url         The URL to which this menu item points.\n * @property {string} type        The family of objects originally represented, such as 'post_type' or 'taxonomy'.\n * @property {string} target      The target attribute of the link element for this menu item.\n */\n\n/**\n * Builds an ID for a new navigation post.\n *\n * @param {number} menuId Menu id.\n * @return {string} An ID.\n */\nexport const buildNavigationPostId = ( menuId ) =>\n\t`navigation-post-${ menuId }`;\n\n/**\n * Builds a query to resolve menu items.\n *\n * @param {number} menuId Menu id.\n * @return {Object} Query.\n */\nexport function menuItemsQuery( menuId ) {\n\treturn { menus: menuId, per_page: -1 };\n}\n\n/**\n * Get the internal record id from block.\n *\n * @typedef  {Object} Attributes\n * @property {string}     __internalRecordId The internal record id.\n * @typedef  {Object} Block\n * @property {Attributes} attributes         The attributes of the block.\n *\n * @param    {Block}      block              The block.\n * @return {string} The internal record id.\n */\nexport function getRecordIdFromBlock( block ) {\n\treturn block.attributes.__internalRecordId;\n}\n\n/**\n * Add internal record id to block's attributes.\n *\n * @param {Block}  block    The block.\n * @param {string} recordId The record id.\n * @return {Block} The updated block.\n */\nexport function addRecordIdToBlock( block, recordId ) {\n\treturn {\n\t\t...block,\n\t\tattributes: {\n\t\t\t...( block.attributes || {} ),\n\t\t\t__internalRecordId: recordId,\n\t\t},\n\t};\n}\n\n/**\n * Checks if a given block should be persisted as a menu item.\n *\n * @param {Object} block Block to check.\n * @return {boolean} True if a given block should be persisted as a menu item, false otherwise.\n */\nexport const isBlockSupportedInNav = ( block ) =>\n\t[ 'core/navigation-link', 'core/navigation-submenu' ].includes(\n\t\tblock.name\n\t);\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","/**\n * External dependencies\n */\nimport { get, omit, sortBy, zip } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { serialize, createBlock, parse } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { NEW_TAB_TARGET_ATTRIBUTE } from '../constants';\nimport {\n\taddRecordIdToBlock,\n\tgetRecordIdFromBlock,\n\tisBlockSupportedInNav,\n} from './utils';\n\n/**\n * A WP nav_menu_item object.\n * For more documentation on the individual fields present on a menu item please see:\n * https://core.trac.wordpress.org/browser/tags/5.7.1/src/wp-includes/nav-menu.php#L789\n *\n * Changes made here should also be mirrored in packages/edit-navigation/src/store/utils.js.\n *\n * @typedef WPNavMenuItem\n *\n * @property {Object} title       stores the raw and rendered versions of the title/label for this menu item.\n * @property {Array}  xfn         the XFN relationships expressed in the link of this menu item.\n * @property {Array}  classes     the HTML class attributes for this menu item.\n * @property {string} attr_title  the HTML title attribute for this menu item.\n * @property {string} object      The type of object originally represented, such as 'category', 'post', or 'attachment'.\n * @property {string} object_id   The DB ID of the original object this menu item represents, e.g. ID for posts and term_id for categories.\n * @property {string} description The description of this menu item.\n * @property {string} url         The URL to which this menu item points.\n * @property {string} type        The family of objects originally represented, such as 'post_type' or 'taxonomy'.\n * @property {string} target      The target attribute of the link element for this menu item.\n */\n\nexport function blockToMenuItem(\n\tblock,\n\tmenuItem,\n\tparentId,\n\tblockPosition,\n\tmenuId\n) {\n\tmenuItem = omit( menuItem, 'menus', 'meta', '_links' );\n\tmenuItem.content = get( menuItem.content, 'raw', menuItem.content );\n\n\tlet attributes;\n\n\tif ( isBlockSupportedInNav( block ) ) {\n\t\tattributes = blockAttributesToMenuItem( block.attributes );\n\t} else {\n\t\tattributes = {\n\t\t\ttype: 'block',\n\t\t\tcontent: serialize( block ),\n\t\t};\n\t}\n\n\treturn {\n\t\t...menuItem,\n\t\t...attributes,\n\t\tcontent: attributes.content || '',\n\t\tid: getRecordIdFromBlock( block ),\n\t\tmenu_order: blockPosition + 1,\n\t\tmenus: menuId,\n\t\tparent: ! parentId ? 0 : parentId,\n\t\tstatus: 'publish',\n\t};\n}\n\n/**\n * Convert block attributes to menu item fields.\n *\n * Note that nav_menu_item has defaults provided in Core so in the case of undefined Block attributes\n * we need only include a subset of values in the knowledge that the defaults will be provided in Core.\n *\n * See: https://core.trac.wordpress.org/browser/tags/5.7.1/src/wp-includes/nav-menu.php#L438.\n *\n * @param {Object}  blockAttributes               the block attributes of the block to be converted into menu item fields.\n * @param {string}  blockAttributes.label         the visual name of the block shown in the UI.\n * @param {string}  blockAttributes.url           the URL for the link.\n * @param {string}  blockAttributes.description   a link description.\n * @param {string}  blockAttributes.rel           the XFN relationship expressed in the link of this menu item.\n * @param {string}  blockAttributes.className     the custom CSS classname attributes for this block.\n * @param {string}  blockAttributes.title         the HTML title attribute for the block's link.\n * @param {string}  blockAttributes.type          the type of variation of the block used (eg: 'Post', 'Custom', 'Category'...etc).\n * @param {number}  blockAttributes.id            the ID of the entity optionally associated with the block's link (eg: the Post ID).\n * @param {string}  blockAttributes.kind          the family of objects originally represented, such as 'post-type' or 'taxonomy'.\n * @param {boolean} blockAttributes.opensInNewTab whether or not the block's link should open in a new tab.\n * @return {WPNavMenuItem} the menu item (converted from block attributes).\n */\nexport const blockAttributesToMenuItem = ( {\n\tlabel = '',\n\turl = '',\n\tdescription,\n\trel,\n\tclassName,\n\ttitle: blockTitleAttr,\n\ttype,\n\tid,\n\tkind,\n\topensInNewTab,\n} ) => {\n\t// For historical reasons, the `core/navigation-link` variation type is `tag`\n\t// whereas WP Core expects `post_tag` as the `object` type.\n\t// To avoid writing a block migration we perform a conversion here.\n\t// See also inverse equivalent in `menuItemToBlockAttributes`.\n\tif ( type && type === 'tag' ) {\n\t\ttype = 'post_tag';\n\t}\n\n\treturn {\n\t\ttitle: label,\n\t\turl,\n\t\t...( description?.length && {\n\t\t\tdescription,\n\t\t} ),\n\t\t...( rel?.length && {\n\t\t\txfn: rel?.trim().split( ' ' ),\n\t\t} ),\n\t\t...( className?.length && {\n\t\t\tclasses: className?.trim().split( ' ' ),\n\t\t} ),\n\t\t...( blockTitleAttr?.length && {\n\t\t\tattr_title: blockTitleAttr,\n\t\t} ),\n\t\t...( type?.length && {\n\t\t\tobject: type,\n\t\t} ),\n\t\t...( kind?.length && {\n\t\t\ttype: kind?.replace( '-', '_' ),\n\t\t} ),\n\t\t// Only assign object_id if it's a entity type (ie: not \"custom\").\n\t\t...( id &&\n\t\t\t'custom' !== type && {\n\t\t\t\tobject_id: id,\n\t\t\t} ),\n\t\ttarget: opensInNewTab ? NEW_TAB_TARGET_ATTRIBUTE : '',\n\t};\n};\n\n/**\n * Convert a flat menu item structure to a nested blocks structure.\n *\n * @param {Object[]} menuItems An array of menu items.\n *\n * @return {WPBlock[]} An array of blocks.\n */\nexport function menuItemsToBlocks( menuItems ) {\n\tif ( ! menuItems ) {\n\t\treturn null;\n\t}\n\n\tconst menuTree = createDataTree( menuItems );\n\n\treturn mapMenuItemsToBlocks( menuTree );\n}\n\n/**\n * A recursive function that maps menu item nodes to blocks.\n *\n * @param {WPNavMenuItem[]} menuItems An array of WPNavMenuItem items.\n * @return {Object} Object containing innerBlocks and mapping.\n */\nfunction mapMenuItemsToBlocks( menuItems ) {\n\t// The menuItem should be in menu_order sort order.\n\tconst sortedItems = sortBy( menuItems, 'menu_order' );\n\n\tconst blocks = sortedItems.map( ( menuItem ) => {\n\t\tif ( menuItem.type === 'block' ) {\n\t\t\tconst [ block ] = parse( menuItem.content.raw );\n\n\t\t\tif ( ! block ) {\n\t\t\t\treturn createBlock( 'core/freeform', {\n\t\t\t\t\tcontent: menuItem.content,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn block;\n\t\t}\n\t\tconst attributes = menuItemToBlockAttributes( menuItem );\n\n\t\t// If there are children recurse to build those nested blocks.\n\t\tconst nestedBlocks = menuItem.children?.length\n\t\t\t? mapMenuItemsToBlocks( menuItem.children )\n\t\t\t: [];\n\n\t\t// Create a submenu block when there are inner blocks, or just a link\n\t\t// for a standalone item.\n\t\tconst itemBlockName = nestedBlocks?.length\n\t\t\t? 'core/navigation-submenu'\n\t\t\t: 'core/navigation-link';\n\n\t\t// Create block with nested \"innerBlocks\".\n\t\treturn createBlock( itemBlockName, attributes, nestedBlocks );\n\t} );\n\n\treturn zip( blocks, sortedItems ).map( ( [ block, menuItem ] ) =>\n\t\taddRecordIdToBlock( block, menuItem.id )\n\t);\n}\n\n// A few parameters are using snake case, let's embrace that for convenience:\n/* eslint-disable camelcase */\n/**\n * Convert block attributes to menu item.\n *\n * @param {WPNavMenuItem} menuItem the menu item to be converted to block attributes.\n * @return {Object} the block attributes converted from the WPNavMenuItem item.\n */\nexport function menuItemToBlockAttributes( {\n\ttitle: menuItemTitleField,\n\txfn,\n\tclasses,\n\tattr_title,\n\tobject,\n\tobject_id,\n\tdescription,\n\turl,\n\ttype: menuItemTypeField,\n\ttarget,\n} ) {\n\t// For historical reasons, the `core/navigation-link` variation type is `tag`\n\t// whereas WP Core expects `post_tag` as the `object` type.\n\t// To avoid writing a block migration we perform a conversion here.\n\t// See also inverse equivalent in `blockAttributesToMenuItem`.\n\tif ( object && object === 'post_tag' ) {\n\t\tobject = 'tag';\n\t}\n\n\treturn {\n\t\tlabel: menuItemTitleField?.rendered || '',\n\t\t...( object?.length && {\n\t\t\ttype: object,\n\t\t} ),\n\t\tkind: menuItemTypeField?.replace( '_', '-' ) || 'custom',\n\t\turl: url || '',\n\t\t...( xfn?.length &&\n\t\t\txfn.join( ' ' ).trim() && {\n\t\t\t\trel: xfn.join( ' ' ).trim(),\n\t\t\t} ),\n\t\t...( classes?.length &&\n\t\t\tclasses.join( ' ' ).trim() && {\n\t\t\t\tclassName: classes.join( ' ' ).trim(),\n\t\t\t} ),\n\t\t...( attr_title?.length && {\n\t\t\ttitle: attr_title,\n\t\t} ),\n\t\t...( object_id &&\n\t\t\t'custom' !== object && {\n\t\t\t\tid: object_id,\n\t\t\t} ),\n\t\t...( description?.length && {\n\t\t\tdescription,\n\t\t} ),\n\t\t...( target === NEW_TAB_TARGET_ATTRIBUTE && {\n\t\t\topensInNewTab: true,\n\t\t} ),\n\t};\n}\n/* eslint-enable camelcase */\n\n/**\n * Creates a nested, hierarchical tree representation from unstructured data that\n * has an inherent relationship defined between individual items.\n *\n * For example, by default, each element in the dataset should have an `id` and\n * `parent` property where the `parent` property indicates a relationship between\n * the current item and another item with a matching `id` properties.\n *\n * This is useful for building linked lists of data from flat data structures.\n *\n * @param {Array}  dataset  linked data to be rearranged into a hierarchical tree based on relational fields.\n * @param {string} id       the property which uniquely identifies each entry within the array.\n * @param {*}      relation the property which identifies how the current item is related to other items in the data (if at all).\n * @return {Array} a nested array of parent/child relationships\n */\nfunction createDataTree( dataset, id = 'id', relation = 'parent' ) {\n\tconst hashTable = Object.create( null );\n\tconst dataTree = [];\n\n\tfor ( const data of dataset ) {\n\t\thashTable[ data[ id ] ] = {\n\t\t\t...data,\n\t\t\tchildren: [],\n\t\t};\n\t}\n\tfor ( const data of dataset ) {\n\t\tif ( data[ relation ] ) {\n\t\t\thashTable[ data[ relation ] ] = hashTable[ data[ relation ] ] || {};\n\t\t\thashTable[ data[ relation ] ].children =\n\t\t\t\thashTable[ data[ relation ] ].children || [];\n\t\t\thashTable[ data[ relation ] ].children.push(\n\t\t\t\thashTable[ data[ id ] ]\n\t\t\t);\n\t\t} else {\n\t\t\tdataTree.push( hashTable[ data[ id ] ] );\n\t\t}\n\t}\n\n\treturn dataTree;\n}\n","/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { NAVIGATION_POST_KIND, NAVIGATION_POST_POST_TYPE } from '../constants';\nimport { buildNavigationPostId, menuItemsQuery } from './utils';\nimport { menuItemsToBlocks } from './transform';\n\n/**\n * Creates a \"stub\" navigation post reflecting the contents of menu with id=menuId. The\n * post is meant as a convenient to only exists in runtime and should never be saved. It\n * enables a convenient way of editing the navigation by using a regular post editor.\n *\n * Fetches all menu items, converts them into blocks, and hydrates a new post with them.\n *\n * @param {number} menuId The id of menu to create a post from\n * @return {void}\n */\nexport const getNavigationPostForMenu = ( menuId ) => async ( {\n\tregistry,\n\tdispatch,\n} ) => {\n\tif ( ! menuId ) {\n\t\treturn;\n\t}\n\n\tconst stubPost = createStubPost( menuId );\n\t// Persist an empty post to warm up the state\n\tdispatch( persistPost( stubPost ) );\n\n\t// Dispatch startResolution to skip the execution of the real getEntityRecord resolver - it would\n\t// issue an http request and fail.\n\tconst args = [\n\t\tNAVIGATION_POST_KIND,\n\t\tNAVIGATION_POST_POST_TYPE,\n\t\tstubPost.id,\n\t];\n\tregistry.dispatch( coreStore ).startResolution( 'getEntityRecord', args );\n\n\t// Now let's create a proper one hydrated using actual menu items\n\tconst menuItems = await registry\n\t\t.resolveSelect( coreStore )\n\t\t.getMenuItems( menuItemsQuery( menuId ) );\n\n\tconst navigationBlock = createNavigationBlock( menuItems );\n\t// Persist the actual post containing the navigation block\n\tconst builtPost = createStubPost( menuId, navigationBlock );\n\tdispatch( persistPost( builtPost ) );\n\n\t// Dispatch finishResolution to conclude startResolution dispatched earlier\n\tregistry.dispatch( coreStore ).finishResolution( 'getEntityRecord', args );\n};\n\nconst createStubPost = ( menuId, navigationBlock = null ) => {\n\tconst id = buildNavigationPostId( menuId );\n\treturn {\n\t\tid,\n\t\tslug: id,\n\t\tstatus: 'draft',\n\t\ttype: 'page',\n\t\tblocks: navigationBlock ? [ navigationBlock ] : [],\n\t\tmeta: {\n\t\t\tmenuId,\n\t\t},\n\t};\n};\n\nconst persistPost = ( post ) => ( { registry } ) => {\n\tregistry\n\t\t.dispatch( coreStore )\n\t\t.receiveEntityRecords(\n\t\t\tNAVIGATION_POST_KIND,\n\t\t\tNAVIGATION_POST_POST_TYPE,\n\t\t\tpost,\n\t\t\t{ id: post.id },\n\t\t\tfalse\n\t\t);\n};\n\n/**\n * Converts an adjacency list of menuItems into a navigation block.\n *\n * @param {Array} menuItems a list of menu items\n * @return {Object} Navigation block\n */\nfunction createNavigationBlock( menuItems ) {\n\tconst innerBlocks = menuItemsToBlocks( menuItems );\n\n\treturn createBlock(\n\t\t'core/navigation',\n\t\t{\n\t\t\torientation: 'vertical',\n\t\t},\n\t\tinnerBlocks\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { NAVIGATION_POST_KIND, NAVIGATION_POST_POST_TYPE } from '../constants';\nimport { buildNavigationPostId } from './utils';\n\n/**\n * Returns the selected menu ID.\n *\n * @param {Object} state Global application state.\n * @return {number} The selected menu ID.\n */\nexport function getSelectedMenuId( state ) {\n\treturn state.selectedMenuId ?? null;\n}\n\n/**\n * Returns a \"stub\" navigation post reflecting the contents of menu with id=menuId. The\n * post is meant as a convenient to only exists in runtime and should never be saved. It\n * enables a convenient way of editing the navigation by using a regular post editor.\n *\n * Related resolver fetches all menu items, converts them into blocks, and hydrates a new post with them.\n *\n * @param {number} menuId The id of menu to create a post from.\n * @return {null|Object} Post once the resolver fetches it, otherwise null\n */\nexport const getNavigationPostForMenu = createRegistrySelector(\n\t( select ) => ( state, menuId ) => {\n\t\t// When the record is unavailable, calling getEditedEntityRecord triggers a http\n\t\t// request via it's related resolver. Let's return nothing until getNavigationPostForMenu\n\t\t// resolver marks the record as resolved.\n\t\tif ( ! hasResolvedNavigationPost( state, menuId ) ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn select( coreStore ).getEditedEntityRecord(\n\t\t\tNAVIGATION_POST_KIND,\n\t\t\tNAVIGATION_POST_POST_TYPE,\n\t\t\tbuildNavigationPostId( menuId )\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the navigation post related to menuId was already resolved.\n *\n * @param {number} menuId The id of menu.\n * @return {boolean} True if the navigation post related to menuId was already resolved, false otherwise.\n */\nexport const hasResolvedNavigationPost = createRegistrySelector(\n\t( select ) => ( state, menuId ) => {\n\t\treturn select( coreStore ).hasFinishedResolution( 'getEntityRecord', [\n\t\t\tNAVIGATION_POST_KIND,\n\t\t\tNAVIGATION_POST_POST_TYPE,\n\t\t\tbuildNavigationPostId( menuId ),\n\t\t] );\n\t}\n);\n\n/**\n * Returns true if the inserter is opened.\n *\n * @param {Object} state Global application state.\n * @return {boolean} Whether the inserter is opened.\n */\nexport function isInserterOpened( state = false ) {\n\treturn !! state?.blockInserterPanel;\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","/**\n * Module Constants\n */\nexport const STORE_NAME = 'core/edit-navigation';\n","/**\n * External dependencies\n */\nimport { difference, zip } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreDataStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './constants';\nimport {\n\taddRecordIdToBlock,\n\tgetRecordIdFromBlock,\n\tisBlockSupportedInNav,\n} from './utils';\nimport { blockToMenuItem, menuItemToBlockAttributes } from './transform';\nimport { NAVIGATION_POST_KIND, NAVIGATION_POST_POST_TYPE } from '../constants';\n\n/**\n * Returns an action object used to select menu.\n *\n * @param {number} menuId The menu ID.\n * @return {Object} Action object.\n */\nexport function setSelectedMenuId( menuId ) {\n\treturn {\n\t\ttype: 'SET_SELECTED_MENU_ID',\n\t\tmenuId,\n\t};\n}\n\n/**\n * Converts all the blocks into menu items and submits a batch request to save everything at once.\n *\n * @param {Object} post A navigation post to process\n * @return {Function} An action creator\n */\nexport const saveNavigationPost = ( post ) => async ( {\n\tregistry,\n\tdispatch,\n} ) => {\n\tconst lock = await registry\n\t\t.dispatch( coreDataStore )\n\t\t.__unstableAcquireStoreLock( STORE_NAME, [ 'savingMenu' ], {\n\t\t\texclusive: true,\n\t\t} );\n\ttry {\n\t\tconst menuId = post.meta.menuId;\n\n\t\t// Save menu\n\t\tawait registry\n\t\t\t.dispatch( coreDataStore )\n\t\t\t.saveEditedEntityRecord( 'root', 'menu', menuId );\n\n\t\tconst error = registry\n\t\t\t.select( coreDataStore )\n\t\t\t.getLastEntitySaveError( 'root', 'menu', menuId );\n\n\t\tif ( error ) {\n\t\t\tthrow new Error( error.message );\n\t\t}\n\n\t\t// Save menu items\n\t\tconst updatedBlocks = await dispatch(\n\t\t\tbatchSaveMenuItems( post.blocks[ 0 ], menuId )\n\t\t);\n\n\t\t// Clear \"stub\" navigation post edits to avoid a false \"dirty\" state.\n\t\tregistry\n\t\t\t.dispatch( coreDataStore )\n\t\t\t.receiveEntityRecords(\n\t\t\t\tNAVIGATION_POST_KIND,\n\t\t\t\tNAVIGATION_POST_POST_TYPE,\n\t\t\t\tpost,\n\t\t\t\tundefined\n\t\t\t);\n\n\t\tconst updatedPost = {\n\t\t\t...post,\n\t\t\tblocks: [ updatedBlocks ],\n\t\t};\n\t\tregistry\n\t\t\t.dispatch( coreDataStore )\n\t\t\t.receiveEntityRecords(\n\t\t\t\tNAVIGATION_POST_KIND,\n\t\t\t\tNAVIGATION_POST_POST_TYPE,\n\t\t\t\tupdatedPost,\n\t\t\t\tundefined\n\t\t\t);\n\n\t\tregistry\n\t\t\t.dispatch( noticesStore )\n\t\t\t.createSuccessNotice( __( 'Navigation saved.' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t} catch ( saveError ) {\n\t\tconst errorMessage = saveError\n\t\t\t? sprintf(\n\t\t\t\t\t/* translators: %s: The text of an error message (potentially untranslated). */\n\t\t\t\t\t__( \"Unable to save: '%s'\" ),\n\t\t\t\t\tsaveError.message\n\t\t\t  )\n\t\t\t: __( 'Unable to save: An error ocurred.' );\n\t\tregistry.dispatch( noticesStore ).createErrorNotice( errorMessage, {\n\t\t\ttype: 'snackbar',\n\t\t} );\n\t} finally {\n\t\tregistry.dispatch( coreDataStore ).__unstableReleaseStoreLock( lock );\n\t}\n};\n\n/**\n * Executes appropriate insert, update, and delete operations to turn the current\n * menu (with id=menuId) into one represented by the passed navigation block.\n *\n * @param {Object} navigationBlock The navigation block representing the desired state of the menu.\n * @param {number} menuId          Menu Id to process.\n * @return {Function} An action creator\n */\nconst batchSaveMenuItems = ( navigationBlock, menuId ) => async ( {\n\tdispatch,\n\tregistry,\n} ) => {\n\t// Make sure all the existing menu items are available before proceeding\n\tconst oldMenuItems = await registry\n\t\t.resolveSelect( coreDataStore )\n\t\t.getMenuItems( { menus: menuId, per_page: -1 } );\n\n\t// Insert placeholders for new menu items to have an ID to work with.\n\t// We need that in case these new items have any children. If so,\n\t// we need to provide a parent id that we don't have yet.\n\tconst navBlockWithRecordIds = await dispatch(\n\t\tbatchInsertPlaceholderMenuItems( navigationBlock )\n\t);\n\n\t// Update menu items. This is separate from deleting, because there\n\t// are no consistency guarantees and we don't want to delete something\n\t// that was a parent node before another node takes it place.\n\tconst navBlockAfterUpdates = await dispatch(\n\t\tbatchUpdateMenuItems( navBlockWithRecordIds, menuId )\n\t);\n\n\t// Delete menu items\n\tconst deletedIds = difference(\n\t\toldMenuItems.map( ( { id } ) => id ),\n\t\tblocksTreeToList( navBlockAfterUpdates ).map( getRecordIdFromBlock )\n\t);\n\tawait dispatch( batchDeleteMenuItems( deletedIds ) );\n\n\treturn navBlockAfterUpdates;\n};\n\n/**\n * Creates a menu item for every block that doesn't have an associated menuItem.\n * Sends a batch request with one POST /wp/v2/menu-items for every created menu item.\n *\n * @param {Object} navigationBlock A navigation block to find created menu items in.\n * @return {Function} An action creator\n */\nconst batchInsertPlaceholderMenuItems = ( navigationBlock ) => async ( {\n\tregistry,\n} ) => {\n\tconst blocksWithoutRecordId = blocksTreeToList( navigationBlock ).filter(\n\t\t( block ) =>\n\t\t\tisBlockSupportedInNav( block ) && ! getRecordIdFromBlock( block )\n\t);\n\n\tconst tasks = blocksWithoutRecordId.map( () => ( { saveEntityRecord } ) =>\n\t\tsaveEntityRecord( 'root', 'menuItem', {\n\t\t\ttitle: __( 'Menu item' ),\n\t\t\turl: '#placeholder',\n\t\t\tmenu_order: 1,\n\t\t} )\n\t);\n\n\tconst results = await registry\n\t\t.dispatch( coreDataStore )\n\t\t.__experimentalBatch( tasks );\n\n\t// Return an updated navigation block with all the IDs in\n\tconst blockToResult = new Map( zip( blocksWithoutRecordId, results ) );\n\treturn mapBlocksTree( navigationBlock, ( block ) => {\n\t\tif ( ! blockToResult.has( block ) ) {\n\t\t\treturn block;\n\t\t}\n\t\treturn addRecordIdToBlock( block, blockToResult.get( block ).id );\n\t} );\n};\n\n/**\n * Updates every menu item where a related block has changed.\n * Sends a batch request with one PUT /wp/v2/menu-items for every updated menu item.\n *\n * @param {Object} navigationBlock A navigation block to find updated menu items in.\n * @param {number} menuId          Menu ID.\n * @return {Function} An action creator\n */\nconst batchUpdateMenuItems = ( navigationBlock, menuId ) => async ( {\n\tregistry,\n} ) => {\n\tconst allMenuItems = blocksTreeToAnnotatedList( navigationBlock );\n\tconst unsupportedMenuItems = allMenuItems\n\t\t.filter( ( { block } ) => ! isBlockSupportedInNav( block ) )\n\t\t.map( ( { block } ) => block.name );\n\tif ( unsupportedMenuItems.length ) {\n\t\twindow.console.warn(\n\t\t\tsprintf(\n\t\t\t\t// translators: %s: Name of block (i.e. core/legacy-widget)\n\t\t\t\t__(\n\t\t\t\t\t'The following blocks haven\\'t been saved because they are not supported: \"%s\".'\n\t\t\t\t),\n\t\t\t\tunsupportedMenuItems.join( '\", \"' )\n\t\t\t)\n\t\t);\n\t}\n\tconst updatedMenuItems = allMenuItems\n\t\t// Filter out unsupported blocks\n\t\t.filter( ( { block } ) => isBlockSupportedInNav( block ) )\n\t\t// Transform the blocks into menu items\n\t\t.map( ( { block, parentBlock, childIndex } ) =>\n\t\t\tblockToMenuItem(\n\t\t\t\tblock,\n\t\t\t\tregistry\n\t\t\t\t\t.select( coreDataStore )\n\t\t\t\t\t.getMenuItem( getRecordIdFromBlock( block ) ),\n\t\t\t\tgetRecordIdFromBlock( parentBlock ),\n\t\t\t\tchildIndex,\n\t\t\t\tmenuId\n\t\t\t)\n\t\t)\n\t\t// Filter out menu items without any edits\n\t\t.filter( ( menuItem ) => {\n\t\t\t// Update an existing entity record.\n\t\t\tregistry\n\t\t\t\t.dispatch( coreDataStore )\n\t\t\t\t.editEntityRecord( 'root', 'menuItem', menuItem.id, menuItem, {\n\t\t\t\t\tundoIgnore: true,\n\t\t\t\t} );\n\n\t\t\treturn registry\n\t\t\t\t.select( coreDataStore )\n\t\t\t\t.hasEditsForEntityRecord( 'root', 'menuItem', menuItem.id );\n\t\t} );\n\n\t// Map the edited menu items to batch tasks\n\tconst tasks = updatedMenuItems.map(\n\t\t( menuItem ) => ( { saveEditedEntityRecord } ) =>\n\t\t\tsaveEditedEntityRecord( 'root', 'menuItem', menuItem.id )\n\t);\n\n\tawait registry.dispatch( coreDataStore ).__experimentalBatch( tasks );\n\n\t// Throw on failure. @TODO failures should be thrown in core-data\n\tupdatedMenuItems.forEach( ( menuItem ) => {\n\t\tconst failure = registry\n\t\t\t.select( coreDataStore )\n\t\t\t.getLastEntitySaveError( 'root', 'menuItem', menuItem.id );\n\t\tif ( failure ) {\n\t\t\tthrow new Error( failure.message );\n\t\t}\n\t} );\n\n\t// Return an updated navigation block reflecting the changes persisted in the batch update.\n\treturn mapBlocksTree( navigationBlock, ( block ) => {\n\t\tif ( ! isBlockSupportedInNav( block ) ) {\n\t\t\treturn block;\n\t\t}\n\t\tconst updatedMenuItem = registry\n\t\t\t.select( coreDataStore )\n\t\t\t.getMenuItem( getRecordIdFromBlock( block ) );\n\n\t\treturn addRecordIdToBlock(\n\t\t\t{\n\t\t\t\t...block,\n\t\t\t\tattributes: menuItemToBlockAttributes( updatedMenuItem ),\n\t\t\t},\n\t\t\tupdatedMenuItem.id\n\t\t);\n\t} );\n};\n\n/**\n * Deletes multiple menu items.\n * Sends a batch request with one DELETE /wp/v2/menu-items for every deleted menu item.\n *\n * @param {Object} deletedIds A list of menu item ids to delete\n * @return {Function} An action creator\n */\nconst batchDeleteMenuItems = ( deletedIds ) => async ( { registry } ) => {\n\tconst deleteBatch = deletedIds.map(\n\t\t( id ) => async ( { deleteEntityRecord } ) => {\n\t\t\tconst success = await deleteEntityRecord( 'root', 'menuItem', id, {\n\t\t\t\tforce: true,\n\t\t\t} );\n\t\t\t// @TODO failures should be thrown in core-data\n\t\t\tif ( ! success ) {\n\t\t\t\tthrow new Error( id );\n\t\t\t}\n\t\t\treturn success;\n\t\t}\n\t);\n\n\treturn await registry\n\t\t.dispatch( coreDataStore )\n\t\t.__experimentalBatch( deleteBatch );\n};\n\n/**\n * Turns a recursive list of blocks into a flat list of blocks annotated with\n * their child index and parent block.\n *\n * @param {Object} parentBlock A parent block to flatten\n * @return {Object} A flat list of blocks, annotated by their index and parent ID, consisting\n * \t\t\t\t\t\t\t    of all the input blocks and all the inner blocks in the tree.\n */\nfunction blocksTreeToAnnotatedList( parentBlock ) {\n\treturn ( parentBlock.innerBlocks || [] ).flatMap( ( innerBlock, index ) =>\n\t\t[ { block: innerBlock, parentBlock, childIndex: index } ].concat(\n\t\t\tblocksTreeToAnnotatedList( innerBlock )\n\t\t)\n\t);\n}\n\nfunction blocksTreeToList( parentBlock ) {\n\treturn blocksTreeToAnnotatedList( parentBlock ).map(\n\t\t( { block } ) => block\n\t);\n}\n\n/**\n * Maps one tree of blocks into another tree by invoking a callback on every node.\n *\n * @param {Object}   block       The root of the mapped tree.\n * @param {Function} callback    The callback to invoke.\n * @param {Object}   parentBlock Internal. The current parent block.\n * @param {number}   idx         Internal. The current child index.\n * @return {Object} A mapped tree.\n */\nfunction mapBlocksTree( block, callback, parentBlock = null, idx = 0 ) {\n\treturn {\n\t\t...callback( block, parentBlock, idx ),\n\t\tinnerBlocks: ( block.innerBlocks || [] ).map( ( innerBlock, index ) =>\n\t\t\tmapBlocksTree( innerBlock, callback, block, index )\n\t\t),\n\t};\n}\n\n/**\n * Returns an action object used to open/close the inserter.\n *\n * @param {boolean|Object} value                Whether the inserter should be\n *                                              opened (true) or closed (false).\n *                                              To specify an insertion point,\n *                                              use an object.\n * @param {string}         value.rootClientId   The root client ID to insert at.\n * @param {number}         value.insertionIndex The index to insert at.\n *\n * @return {Object} Action object.\n */\nexport function setIsInserterOpened( value ) {\n\treturn {\n\t\ttype: 'SET_IS_INSERTER_OPENED',\n\t\tvalue,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as resolvers from './resolvers';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { STORE_NAME } from './constants';\n\n/**\n * Block editor data store configuration.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#registerStore\n *\n * @type {Object}\n */\nconst storeConfig = {\n\treducer,\n\tselectors,\n\tresolvers,\n\tactions,\n\tpersist: [ 'selectedMenuId' ],\n};\n\n/**\n * Store definition for the edit navigation namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig );\n\n// Once we build a more generic persistence plugin that works across types of stores\n// we'd be able to replace this with a register call.\nregisterStore( STORE_NAME, storeConfig );\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport {\n\tInnerBlocks,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\n\nfunction CustomAppender() {\n\treturn <InnerBlocks.ButtonBlockAppender isToggle />;\n}\n\nfunction EnhancedNavigationBlock( { blockEdit: BlockEdit, ...props } ) {\n\tconst clientId = props.clientId;\n\tconst {\n\t\tnoBlockSelected,\n\t\tisSelected,\n\t\tisImmediateParentOfSelectedBlock,\n\t\tselectedBlockHasDescendants,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetClientIdsOfDescendants,\n\t\t\t\thasSelectedInnerBlock,\n\t\t\t\tgetSelectedBlockClientId,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst _isImmediateParentOfSelectedBlock = hasSelectedInnerBlock(\n\t\t\t\tclientId,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tconst selectedBlockId = getSelectedBlockClientId();\n\t\t\tconst _selectedBlockHasDescendants = !! getClientIdsOfDescendants( [\n\t\t\t\tselectedBlockId,\n\t\t\t] )?.length;\n\n\t\t\treturn {\n\t\t\t\tisSelected: selectedBlockId === clientId,\n\t\t\t\tnoBlockSelected: ! selectedBlockId,\n\t\t\t\tisImmediateParentOfSelectedBlock: _isImmediateParentOfSelectedBlock,\n\t\t\t\tselectedBlockHasDescendants: _selectedBlockHasDescendants,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst customAppender =\n\t\tnoBlockSelected ||\n\t\tisSelected ||\n\t\t( isImmediateParentOfSelectedBlock && ! selectedBlockHasDescendants )\n\t\t\t? CustomAppender\n\t\t\t: false;\n\n\treturn <BlockEdit { ...props } customAppender={ customAppender } />;\n}\n\nconst addNavigationEditorCustomAppender = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tif ( props.name !== 'core/navigation' ) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n\t\t// Use a separate component so that `useSelect` only run on the navigation block.\n\t\treturn <EnhancedNavigationBlock blockEdit={ BlockEdit } { ...props } />;\n\t},\n\t'withNavigationEditorCustomAppender'\n);\n\nexport default () =>\n\taddFilter(\n\t\t'editor.BlockEdit',\n\t\t'core/edit-navigation/with-navigation-editor-custom-appender',\n\t\taddNavigationEditorCustomAppender\n\t);\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronDown = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M17.5 11.6L12 16l-5.5-4.4.9-1.2L12 14l4.5-3.6 1 1.2z\" />\n\t</SVG>\n);\n\nexport default chevronDown;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n/**\n * Internal dependencies\n */\nimport { MENU_KIND, MENU_POST_TYPE } from '../constants';\n\nexport default function useMenuEntity( menuId ) {\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\n\tconst menuEntityData = [ MENU_KIND, MENU_POST_TYPE, menuId ];\n\tconst { editedMenu, hasLoadedEditedMenu } = useSelect(\n\t\t( select ) => {\n\t\t\treturn {\n\t\t\t\teditedMenu:\n\t\t\t\t\tmenuId &&\n\t\t\t\t\tselect( coreStore ).getEditedEntityRecord(\n\t\t\t\t\t\t...menuEntityData\n\t\t\t\t\t),\n\t\t\t\thasLoadedEditedMenu: select(\n\t\t\t\t\tcoreStore\n\t\t\t\t).hasFinishedResolution( 'getEditedEntityRecord', [\n\t\t\t\t\t...menuEntityData,\n\t\t\t\t] ),\n\t\t\t};\n\t\t},\n\t\t[ menuId ]\n\t);\n\n\treturn {\n\t\teditedMenu,\n\t\tmenuEntityData,\n\t\teditMenuEntityRecord: editEntityRecord,\n\t\thasLoadedEditedMenu,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { useEntityProp } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { MENU_KIND, MENU_POST_TYPE } from '../constants';\n\n/**\n * Returns the value and setter for the specified\n * property of the menu.\n *\n * @param {string} prop   A Property name.\n * @param {string} menuId A menu ID.\n *\n * @return {[*, Function]} A tuple where the first item is the\n *                         property value and the second is the\n *                         setter.\n */\nexport default function useMenuEntityProp( prop, menuId ) {\n\treturn useEntityProp( MENU_KIND, MENU_POST_TYPE, prop, menuId );\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState, useEffect } from '@wordpress/element';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editNavigationStore } from '../store';\nimport { useSelectedMenuId } from './index';\nimport useMenuEntity from './use-menu-entity';\n\nconst getMenusData = ( select ) => {\n\tconst selectors = select( 'core' );\n\tconst params = { per_page: -1 };\n\treturn {\n\t\tmenus: selectors.getMenus( params ),\n\t\thasLoadedMenus: selectors.hasFinishedResolution( 'getMenus', [\n\t\t\tparams,\n\t\t] ),\n\t};\n};\nexport default function useNavigationEditor() {\n\tconst { deleteMenu: _deleteMenu } = useDispatch( coreStore );\n\tconst [ selectedMenuId, setSelectedMenuId ] = useSelectedMenuId();\n\tconst [ hasFinishedInitialLoad, setHasFinishedInitialLoad ] = useState(\n\t\tfalse\n\t);\n\tconst { editedMenu, hasLoadedEditedMenu } = useMenuEntity( selectedMenuId );\n\tconst { menus, hasLoadedMenus } = useSelect( getMenusData, [] );\n\n\t/**\n\t * If the Menu being edited has been requested from API and it has\n\t * no values then it has been deleted so reset the selected menu ID.\n\t */\n\tuseEffect( () => {\n\t\tif ( hasLoadedEditedMenu && ! Object.keys( editedMenu )?.length ) {\n\t\t\tsetSelectedMenuId( null );\n\t\t}\n\t}, [ hasLoadedEditedMenu, editedMenu ] );\n\n\tconst { createErrorNotice, createInfoNotice } = useDispatch( noticesStore );\n\tconst isMenuBeingDeleted = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).isDeletingEntityRecord(\n\t\t\t\t'root',\n\t\t\t\t'menu',\n\t\t\t\tselectedMenuId\n\t\t\t),\n\t\t[ selectedMenuId ]\n\t);\n\tconst selectedMenuName =\n\t\tmenus?.find( ( { id } ) => id === selectedMenuId )?.name || '';\n\n\tuseEffect( () => {\n\t\tif ( hasLoadedMenus ) {\n\t\t\tsetHasFinishedInitialLoad( true );\n\t\t}\n\t}, [ hasLoadedMenus ] );\n\n\tconst navigationPost = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! selectedMenuId ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn select( editNavigationStore ).getNavigationPostForMenu(\n\t\t\t\tselectedMenuId\n\t\t\t);\n\t\t},\n\t\t[ selectedMenuId ]\n\t);\n\n\tconst deleteMenu = async () => {\n\t\tconst didDeleteMenu = await _deleteMenu( selectedMenuId, {\n\t\t\tforce: true,\n\t\t} );\n\t\tif ( didDeleteMenu ) {\n\t\t\tsetSelectedMenuId( null );\n\t\t\tcreateInfoNotice(\n\t\t\t\tsprintf(\n\t\t\t\t\t// translators: %s: the name of a menu.\n\t\t\t\t\t__( '\"%s\" menu has been deleted' ),\n\t\t\t\t\tselectedMenuName\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tisDismissible: true,\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tcreateErrorNotice( __( 'Menu deletion unsuccessful' ) );\n\t\t}\n\t};\n\n\treturn {\n\t\tmenus,\n\t\thasLoadedMenus,\n\t\thasFinishedInitialLoad,\n\t\tselectedMenuId,\n\t\tnavigationPost,\n\t\tisMenuBeingDeleted,\n\t\tselectMenu: setSelectedMenuId,\n\t\tdeleteMenu,\n\t\tisMenuSelected: !! selectedMenuId,\n\t};\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"dom\"];","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editNavigationStore } from '../store';\n\n/**\n * Returns selected menu ID and the setter.\n *\n * @return {[number, Function]} A tuple where first item is the\n *                              selected menu ID and second is\n *                              the setter.\n */\nexport default function useSelectedMenuId() {\n\tconst selectedMenuId = useSelect(\n\t\t( select ) => select( editNavigationStore ).getSelectedMenuId(),\n\t\t[]\n\t);\n\tconst { setSelectedMenuId } = useDispatch( editNavigationStore );\n\n\treturn [ selectedMenuId, setSelectedMenuId ];\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","/**\n * WordPress dependencies\n */\nimport { useState, useEffect, useMemo, useCallback } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * External dependencies\n */\nimport { merge } from 'lodash';\n/**\n * Internal dependencies\n */\nimport { useMenuEntity, useSelectedMenuId } from './index';\n\nconst locationsForMenuId = ( menuLocationsByName, id ) =>\n\tObject.values( menuLocationsByName )\n\t\t.filter( ( { menu } ) => menu === id )\n\t\t.map( ( { name } ) => name );\n\nexport default function useMenuLocations() {\n\tconst [ menuLocationsByName, setMenuLocationsByName ] = useState( null );\n\n\tconst [ menuId ] = useSelectedMenuId();\n\tconst { editMenuEntityRecord, menuEntityData } = useMenuEntity( menuId );\n\tuseEffect( () => {\n\t\tlet isMounted = true;\n\n\t\tconst fetchMenuLocationsByName = async () => {\n\t\t\tconst newMenuLocationsByName = await apiFetch( {\n\t\t\t\tmethod: 'GET',\n\t\t\t\tpath: '/wp/v2/menu-locations',\n\t\t\t} );\n\n\t\t\tif ( isMounted ) {\n\t\t\t\tsetMenuLocationsByName( newMenuLocationsByName );\n\t\t\t}\n\t\t};\n\n\t\tfetchMenuLocationsByName();\n\t\treturn () => ( isMounted = false );\n\t}, [] );\n\n\tconst assignMenuToLocation = useCallback(\n\t\tasync ( locationName, newMenuId ) => {\n\t\t\tconst oldMenuId = menuLocationsByName[ locationName ].menu;\n\n\t\t\tconst newMenuLocationsByName = merge( menuLocationsByName, {\n\t\t\t\t[ locationName ]: { menu: newMenuId },\n\t\t\t} );\n\n\t\t\tsetMenuLocationsByName( newMenuLocationsByName );\n\n\t\t\tconst activeMenuId = newMenuId || oldMenuId;\n\t\t\teditMenuEntityRecord( ...menuEntityData, {\n\t\t\t\tlocations: locationsForMenuId(\n\t\t\t\t\tnewMenuLocationsByName,\n\t\t\t\t\tactiveMenuId\n\t\t\t\t),\n\t\t\t} );\n\t\t},\n\t\t[ menuLocationsByName ]\n\t);\n\n\tconst toggleMenuLocationAssignment = ( locationName, newMenuId ) => {\n\t\tconst idToSet =\n\t\t\tmenuLocationsByName[ locationName ].menu === newMenuId\n\t\t\t\t? 0\n\t\t\t\t: newMenuId;\n\t\tassignMenuToLocation( locationName, idToSet );\n\t};\n\n\tconst menuLocations = useMemo(\n\t\t() => Object.values( menuLocationsByName || {} ),\n\t\t[ menuLocationsByName ]\n\t);\n\n\treturn {\n\t\tmenuLocations,\n\t\tassignMenuToLocation,\n\t\ttoggleMenuLocationAssignment,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\n\nconst useNavigationEditorRootBlock = () => {\n\treturn useSelect( ( select ) => {\n\t\tconst { getBlockOrder } = select( blockEditorStore );\n\n\t\tconst lockedNavigationBlock = getBlockOrder()[ 0 ];\n\n\t\treturn {\n\t\t\tnavBlockClientId: lockedNavigationBlock,\n\t\t\tlastNavBlockItemIndex: getBlockOrder( lockedNavigationBlock )\n\t\t\t\t.length,\n\t\t};\n\t}, [] );\n};\n\nexport default useNavigationEditorRootBlock;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createContext } from '@wordpress/element';\n\nexport const untitledMenu = __( '(untitled menu)' );\nexport const IsMenuNameControlFocusedContext = createContext();\n\nexport { default as useMenuEntity } from './use-menu-entity';\nexport { default as useMenuEntityProp } from './use-menu-entity-prop';\nexport { default as useNavigationEditor } from './use-navigation-editor';\nexport { default as useMenuNotifications } from './use-menu-notifications';\nexport { default as useSelectedMenuId } from './use-selected-menu-id';\nexport { default as useMenuLocations } from './use-menu-locations';\nexport { default as useNavigationEditorRootBlock } from './use-navigation-editor-root-block';\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * @typedef {Object} NavigationEntitiesData\n * @property {Array|undefined} pages                - a collection of WP Post entity objects of post type \"Page\".\n * @property {boolean}         isResolvingPages     - indicates whether the request to fetch pages is currently resolving.\n * @property {boolean}         hasResolvedPages     - indicates whether the request to fetch pages has finished resolving.\n * @property {Array|undefined} menus                - a collection of Menu entity objects.\n * @property {boolean}         isResolvingMenus     - indicates whether the request to fetch menus is currently resolving.\n * @property {boolean}         hasResolvedMenus     - indicates whether the request to fetch menus has finished resolving.\n * @property {Array|undefined} menusItems           - a collection of Menu Item entity objects for the current menuId.\n * @property {boolean}         hasResolvedMenuItems - indicates whether the request to fetch menuItems has finished resolving.\n * @property {boolean}         hasPages             - indicates whether there is currently any data for pages.\n * @property {boolean}         hasMenus             - indicates whether there is currently any data for menus.\n */\n\n/**\n * Manages fetching and resolution state for all entities required\n * for the Navigation block.\n *\n * @param {number} menuId the menu for which to retrieve menuItem data.\n * @return { NavigationEntitiesData } the entity data.\n */\nexport default function useNavigationEntities( menuId ) {\n\treturn {\n\t\t...usePageEntities(),\n\t\t...useMenuEntities(),\n\t\t...useMenuItemEntities( menuId ),\n\t};\n}\n\nfunction useMenuEntities() {\n\tconst { menus, isResolvingMenus, hasResolvedMenus } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMenus, isResolving, hasFinishedResolution } = select(\n\t\t\t\tcoreStore\n\t\t\t);\n\n\t\t\tconst menusParameters = [ { per_page: -1 } ];\n\n\t\t\treturn {\n\t\t\t\tmenus: getMenus( ...menusParameters ),\n\t\t\t\tisResolvingMenus: isResolving( 'getMenus', menusParameters ),\n\t\t\t\thasResolvedMenus: hasFinishedResolution(\n\t\t\t\t\t'getMenus',\n\t\t\t\t\tmenusParameters\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\treturn {\n\t\tmenus,\n\t\tisResolvingMenus,\n\t\thasResolvedMenus,\n\t\thasMenus: !! ( hasResolvedMenus && menus?.length ),\n\t};\n}\n\nfunction useMenuItemEntities( menuId ) {\n\tconst { menuItems, hasResolvedMenuItems } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMenuItems, hasFinishedResolution } = select( coreStore );\n\n\t\t\tconst hasSelectedMenu = menuId !== undefined;\n\t\t\tconst menuItemsParameters = hasSelectedMenu\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenus: menuId,\n\t\t\t\t\t\t\tper_page: -1,\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: undefined;\n\n\t\t\treturn {\n\t\t\t\tmenuItems: hasSelectedMenu\n\t\t\t\t\t? getMenuItems( ...menuItemsParameters )\n\t\t\t\t\t: undefined,\n\t\t\t\thasResolvedMenuItems: hasSelectedMenu\n\t\t\t\t\t? hasFinishedResolution(\n\t\t\t\t\t\t\t'getMenuItems',\n\t\t\t\t\t\t\tmenuItemsParameters\n\t\t\t\t\t  )\n\t\t\t\t\t: false,\n\t\t\t};\n\t\t},\n\t\t[ menuId ]\n\t);\n\n\treturn {\n\t\tmenuItems,\n\t\thasResolvedMenuItems,\n\t};\n}\n\nfunction usePageEntities() {\n\tconst { pages, isResolvingPages, hasResolvedPages } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEntityRecords,\n\t\t\t\tisResolving,\n\t\t\t\thasFinishedResolution,\n\t\t\t} = select( coreStore );\n\n\t\t\tconst pagesParameters = [\n\t\t\t\t'postType',\n\t\t\t\t'page',\n\t\t\t\t{\n\t\t\t\t\tparent: 0,\n\t\t\t\t\torder: 'asc',\n\t\t\t\t\torderby: 'id',\n\t\t\t\t\tper_page: -1,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\treturn {\n\t\t\t\tpages: getEntityRecords( ...pagesParameters ) || null,\n\t\t\t\tisResolvingPages: isResolving(\n\t\t\t\t\t'getEntityRecords',\n\t\t\t\t\tpagesParameters\n\t\t\t\t),\n\t\t\t\thasResolvedPages: hasFinishedResolution(\n\t\t\t\t\t'getEntityRecords',\n\t\t\t\t\tpagesParameters\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\treturn {\n\t\tpages,\n\t\tisResolvingPages,\n\t\thasResolvedPages,\n\t\thasPages: !! ( hasResolvedPages && pages?.length ),\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tPlaceholder,\n\tButton,\n\tDropdownMenu,\n\tMenuGroup,\n\tMenuItem,\n\tSpinner,\n} from '@wordpress/components';\nimport {\n\tforwardRef,\n\tuseCallback,\n\tuseState,\n\tuseEffect,\n} from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { chevronDown } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { useMenuEntityProp, useSelectedMenuId } from '../../hooks';\nimport useNavigationEntities from './use-navigation-entities';\nimport { menuItemsToBlocks } from '../../store/transform';\n\n/**\n * Convert pages to blocks.\n *\n * @param {Object[]} pages An array of pages.\n *\n * @return {WPBlock[]} An array of blocks.\n */\nfunction convertPagesToBlocks( pages ) {\n\tif ( ! pages?.length ) {\n\t\treturn null;\n\t}\n\n\treturn pages.map( ( { title, type, link: url, id } ) =>\n\t\tcreateBlock( 'core/navigation-link', {\n\t\t\ttype,\n\t\t\tid,\n\t\t\turl,\n\t\t\tlabel: ! title.rendered ? __( '(no title)' ) : title.rendered,\n\t\t\topensInNewTab: false,\n\t\t} )\n\t);\n}\n\nconst TOGGLE_PROPS = { variant: 'tertiary' };\nconst POPOVER_PROPS = { position: 'bottom center' };\n\nfunction BlockPlaceholder( { onCreate }, ref ) {\n\tconst [ selectedMenu, setSelectedMenu ] = useState();\n\tconst [ isCreatingFromMenu, setIsCreatingFromMenu ] = useState( false );\n\n\tconst [ selectedMenuId ] = useSelectedMenuId();\n\tconst [ menuName ] = useMenuEntityProp( 'name', selectedMenuId );\n\n\tconst {\n\t\tisResolvingPages,\n\t\tmenus,\n\t\tisResolvingMenus,\n\t\tmenuItems,\n\t\thasResolvedMenuItems,\n\t\tpages,\n\t\thasPages,\n\t\thasMenus,\n\t} = useNavigationEntities( selectedMenu );\n\n\tconst isLoading = isResolvingPages || isResolvingMenus;\n\n\tconst createFromMenu = useCallback( () => {\n\t\tconst { innerBlocks: blocks } = menuItemsToBlocks( menuItems );\n\t\tconst selectNavigationBlock = true;\n\t\tonCreate( blocks, selectNavigationBlock );\n\t}, [ menuItems, menuItemsToBlocks, onCreate ] );\n\n\tconst onCreateFromMenu = () => {\n\t\t// If we have menu items, create the block right away.\n\t\tif ( hasResolvedMenuItems ) {\n\t\t\tcreateFromMenu();\n\t\t\treturn;\n\t\t}\n\n\t\t// Otherwise, create the block when resolution finishes.\n\t\tsetIsCreatingFromMenu( true );\n\t};\n\n\tconst onCreateEmptyMenu = () => {\n\t\tonCreate( [] );\n\t};\n\n\tconst onCreateAllPages = () => {\n\t\tconst blocks = convertPagesToBlocks( pages );\n\t\tconst selectNavigationBlock = true;\n\t\tonCreate( blocks, selectNavigationBlock );\n\t};\n\n\tuseEffect( () => {\n\t\t// If the user selected a menu but we had to wait for menu items to\n\t\t// finish resolving, then create the block once resolution finishes.\n\t\tif ( isCreatingFromMenu && hasResolvedMenuItems ) {\n\t\t\tcreateFromMenu();\n\t\t\tsetIsCreatingFromMenu( false );\n\t\t}\n\t}, [ isCreatingFromMenu, hasResolvedMenuItems ] );\n\n\tconst selectableMenus = menus?.filter(\n\t\t( menu ) => menu.id !== selectedMenuId\n\t);\n\n\tconst hasSelectableMenus = !! selectableMenus?.length;\n\n\treturn (\n\t\t<Placeholder\n\t\t\tclassName=\"edit-navigation-block-placeholder\"\n\t\t\tlabel={ menuName }\n\t\t\tinstructions={ __(\n\t\t\t\t'This menu is empty. You can start blank and choose what to add,' +\n\t\t\t\t\t' add your existing pages, or add the content of another menu.'\n\t\t\t) }\n\t\t>\n\t\t\t<div className=\"edit-navigation-block-placeholder__controls\">\n\t\t\t\t{ isLoading && (\n\t\t\t\t\t<div ref={ ref }>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ ! isLoading && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\tclassName=\"edit-navigation-block-placeholder__actions\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ onCreateEmptyMenu }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Start blank' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{ hasPages ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant={ hasMenus ? 'tertiary' : 'primary' }\n\t\t\t\t\t\t\t\tonClick={ onCreateAllPages }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Add all pages' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : undefined }\n\t\t\t\t\t\t{ hasSelectableMenus ? (\n\t\t\t\t\t\t\t<DropdownMenu\n\t\t\t\t\t\t\t\ttext={ __( 'Copy existing menu' ) }\n\t\t\t\t\t\t\t\ticon={ chevronDown }\n\t\t\t\t\t\t\t\ttoggleProps={ TOGGLE_PROPS }\n\t\t\t\t\t\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ ( { onClose } ) => (\n\t\t\t\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t\t\t\t{ selectableMenus.map( ( menu ) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedMenu(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmenu.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCreateFromMenu();\n\t\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={ menu.id }\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ menu.name }\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t) : undefined }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</Placeholder>\n\t);\n}\n\nexport default forwardRef( BlockPlaceholder );\n","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockPlaceholder from '../components/block-placeholder';\n\nconst addNavigationEditorPlaceholder = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tif ( props.name !== 'core/navigation' ) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\t\treturn (\n\t\t\t<BlockEdit { ...props } customPlaceholder={ BlockPlaceholder } />\n\t\t);\n\t},\n\t'withNavigationEditorPlaceholder'\n);\n\nexport default () =>\n\taddFilter(\n\t\t'editor.BlockEdit',\n\t\t'core/edit-navigation/with-navigation-editor-placeholder',\n\t\taddNavigationEditorPlaceholder\n\t);\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst check = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M16.7 7.1l-6.3 8.5-3.3-2.5-.9 1.2 4.5 3.4L17.9 8z\" />\n\t</SVG>\n);\n\nexport default check;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst starFilled = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M11.776 4.454a.25.25 0 01.448 0l2.069 4.192a.25.25 0 00.188.137l4.626.672a.25.25 0 01.139.426l-3.348 3.263a.25.25 0 00-.072.222l.79 4.607a.25.25 0 01-.362.263l-4.138-2.175a.25.25 0 00-.232 0l-4.138 2.175a.25.25 0 01-.363-.263l.79-4.607a.25.25 0 00-.071-.222L4.754 9.881a.25.25 0 01.139-.426l4.626-.672a.25.25 0 00.188-.137l2.069-4.192z\" />\n\t</SVG>\n);\n\nexport default starFilled;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst starEmpty = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M9.706 8.646a.25.25 0 01-.188.137l-4.626.672a.25.25 0 00-.139.427l3.348 3.262a.25.25 0 01.072.222l-.79 4.607a.25.25 0 00.362.264l4.138-2.176a.25.25 0 01.233 0l4.137 2.175a.25.25 0 00.363-.263l-.79-4.607a.25.25 0 01.072-.222l3.347-3.262a.25.25 0 00-.139-.427l-4.626-.672a.25.25 0 01-.188-.137l-2.069-4.192a.25.25 0 00-.448 0L9.706 8.646zM12 7.39l-.948 1.921a1.75 1.75 0 01-1.317.957l-2.12.308 1.534 1.495c.412.402.6.982.503 1.55l-.362 2.11 1.896-.997a1.75 1.75 0 011.629 0l1.895.997-.362-2.11a1.75 1.75 0 01.504-1.55l1.533-1.495-2.12-.308a1.75 1.75 0 01-1.317-.957L12 7.39z\"\n\t\t\tclipRule=\"evenodd\"\n\t\t/>\n\t</SVG>\n);\n\nexport default starEmpty;\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"viewport\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst closeSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\" />\n\t</SVG>\n);\n\nexport default closeSmall;\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer to keep tract of the active area per scope.\n *\n * @param {boolean} state           Previous state.\n * @param {Object}  action          Action object.\n * @param {string}  action.type     Action type.\n * @param {string}  action.itemType Type of item.\n * @param {string}  action.scope    Item scope.\n * @param {string}  action.item     Item name.\n *\n * @return {Object} Updated state.\n */\nexport function singleEnableItems(\n\tstate = {},\n\t{ type, itemType, scope, item }\n) {\n\tif ( type !== 'SET_SINGLE_ENABLE_ITEM' || ! itemType || ! scope ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\t...state,\n\t\t[ itemType ]: {\n\t\t\t...state[ itemType ],\n\t\t\t[ scope ]: item || null,\n\t\t},\n\t};\n}\n\n/**\n * Reducer keeping track of the \"pinned\" items per scope.\n *\n * @param {boolean} state           Previous state.\n * @param {Object}  action          Action object.\n * @param {string}  action.type     Action type.\n * @param {string}  action.itemType Type of item.\n * @param {string}  action.scope    Item scope.\n * @param {string}  action.item     Item name.\n * @param {boolean} action.isEnable Whether the item is pinned.\n *\n * @return {Object} Updated state.\n */\nexport function multipleEnableItems(\n\tstate = {},\n\t{ type, itemType, scope, item, isEnable }\n) {\n\tif (\n\t\ttype !== 'SET_MULTIPLE_ENABLE_ITEM' ||\n\t\t! itemType ||\n\t\t! scope ||\n\t\t! item ||\n\t\tget( state, [ itemType, scope, item ] ) === isEnable\n\t) {\n\t\treturn state;\n\t}\n\tconst currentTypeState = state[ itemType ] || {};\n\tconst currentScopeState = currentTypeState[ scope ] || {};\n\n\treturn {\n\t\t...state,\n\t\t[ itemType ]: {\n\t\t\t...currentTypeState,\n\t\t\t[ scope ]: {\n\t\t\t\t...currentScopeState,\n\t\t\t\t[ item ]: isEnable || false,\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Reducer returning the defaults for user preferences.\n *\n * This is kept intentionally separate from the preferences\n * themselves so that defaults are not persisted.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const preferenceDefaults = combineReducers( {\n\tfeatures( state = {}, action ) {\n\t\tif ( action.type === 'SET_FEATURE_DEFAULTS' ) {\n\t\t\tconst { scope, defaults } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ scope ]: {\n\t\t\t\t\t...state[ scope ],\n\t\t\t\t\t...defaults,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn state;\n\t},\n} );\n\n/**\n * Reducer returning the user preferences.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const preferences = combineReducers( {\n\tfeatures( state = {}, action ) {\n\t\tif ( action.type === 'SET_FEATURE_VALUE' ) {\n\t\t\tconst { scope, featureName, value } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ scope ]: {\n\t\t\t\t\t...state[ scope ],\n\t\t\t\t\t[ featureName ]: value,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn state;\n\t},\n} );\n\nconst enableItems = combineReducers( {\n\tsingleEnableItems,\n\tmultipleEnableItems,\n} );\n\nexport default combineReducers( {\n\tenableItems,\n\tpreferenceDefaults,\n\tpreferences,\n} );\n","/**\n * Returns an action object used in signalling that an active area should be changed.\n *\n * @param {string} itemType Type of item.\n * @param {string} scope    Item scope.\n * @param {string} item     Item identifier.\n *\n * @return {Object} Action object.\n */\nfunction setSingleEnableItem( itemType, scope, item ) {\n\treturn {\n\t\ttype: 'SET_SINGLE_ENABLE_ITEM',\n\t\titemType,\n\t\tscope,\n\t\titem,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a complementary item should be enabled.\n *\n * @param {string} scope Complementary area scope.\n * @param {string} area  Area identifier.\n *\n * @return {Object} Action object.\n */\nexport function enableComplementaryArea( scope, area ) {\n\treturn setSingleEnableItem( 'complementaryArea', scope, area );\n}\n\n/**\n * Returns an action object used in signalling that the complementary area of a given scope should be disabled.\n *\n * @param {string} scope Complementary area scope.\n *\n * @return {Object} Action object.\n */\nexport function disableComplementaryArea( scope ) {\n\treturn setSingleEnableItem( 'complementaryArea', scope, undefined );\n}\n\n/**\n * Returns an action object to make an area enabled/disabled.\n *\n * @param {string}  itemType Type of item.\n * @param {string}  scope    Item scope.\n * @param {string}  item     Item identifier.\n * @param {boolean} isEnable Boolean indicating if an area should be pinned or not.\n *\n * @return {Object} Action object.\n */\nfunction setMultipleEnableItem( itemType, scope, item, isEnable ) {\n\treturn {\n\t\ttype: 'SET_MULTIPLE_ENABLE_ITEM',\n\t\titemType,\n\t\tscope,\n\t\titem,\n\t\tisEnable,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that an item should be pinned.\n *\n * @param {string} scope  Item scope.\n * @param {string} itemId Item identifier.\n *\n * @return {Object} Action object.\n */\nexport function pinItem( scope, itemId ) {\n\treturn setMultipleEnableItem( 'pinnedItems', scope, itemId, true );\n}\n\n/**\n * Returns an action object used in signalling that an item should be unpinned.\n *\n * @param {string} scope  Item scope.\n * @param {string} itemId Item identifier.\n *\n * @return {Object} Action object.\n */\nexport function unpinItem( scope, itemId ) {\n\treturn setMultipleEnableItem( 'pinnedItems', scope, itemId, false );\n}\n\n/**\n * Returns an action object used in signalling that a feature should be toggled.\n *\n * @param {string} scope       The feature scope (e.g. core/edit-post).\n * @param {string} featureName The feature name.\n */\nexport function toggleFeature( scope, featureName ) {\n\treturn function ( { select, dispatch } ) {\n\t\tconst currentValue = select.isFeatureActive( scope, featureName );\n\t\tdispatch.setFeatureValue( scope, featureName, ! currentValue );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a feature should be set to\n * a true or false value\n *\n * @param {string}  scope       The feature scope (e.g. core/edit-post).\n * @param {string}  featureName The feature name.\n * @param {boolean} value       The value to set.\n *\n * @return {Object} Action object.\n */\nexport function setFeatureValue( scope, featureName, value ) {\n\treturn {\n\t\ttype: 'SET_FEATURE_VALUE',\n\t\tscope,\n\t\tfeatureName,\n\t\tvalue: !! value,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that defaults should be set for features.\n *\n * @param {string}                  scope    The feature scope (e.g. core/edit-post).\n * @param {Object<string, boolean>} defaults A key/value map of feature names to values.\n *\n * @return {Object} Action object.\n */\nexport function setFeatureDefaults( scope, defaults ) {\n\treturn {\n\t\ttype: 'SET_FEATURE_DEFAULTS',\n\t\tscope,\n\t\tdefaults,\n\t};\n}\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * Returns the item that is enabled in a given scope.\n *\n * @param {Object} state    Global application state.\n * @param {string} itemType Type of item.\n * @param {string} scope    Item scope.\n *\n * @return {?string|null} The item that is enabled in the passed scope and type.\n */\nfunction getSingleEnableItem( state, itemType, scope ) {\n\treturn get( state.enableItems.singleEnableItems, [ itemType, scope ] );\n}\n\n/**\n * Returns the complementary area that is active in a given scope.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Item scope.\n *\n * @return {string} The complementary area that is active in the given scope.\n */\nexport function getActiveComplementaryArea( state, scope ) {\n\treturn getSingleEnableItem( state, 'complementaryArea', scope );\n}\n\n/**\n * Returns a boolean indicating if an item is enabled or not in a given scope.\n *\n * @param {Object} state    Global application state.\n * @param {string} itemType Type of item.\n * @param {string} scope    Scope.\n * @param {string} item     Item to check.\n *\n * @return {boolean|undefined} True if the item is enabled, false otherwise if the item is explicitly disabled, and undefined if there is no information for that item.\n */\nfunction isMultipleEnabledItemEnabled( state, itemType, scope, item ) {\n\treturn get( state.enableItems.multipleEnableItems, [\n\t\titemType,\n\t\tscope,\n\t\titem,\n\t] );\n}\n\n/**\n * Returns a boolean indicating if an item is pinned or not.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Scope.\n * @param {string} item  Item to check.\n *\n * @return {boolean} True if the item is pinned and false otherwise.\n */\nexport function isItemPinned( state, scope, item ) {\n\treturn (\n\t\tisMultipleEnabledItemEnabled( state, 'pinnedItems', scope, item ) !==\n\t\tfalse\n\t);\n}\n\n/**\n * Returns a boolean indicating whether a feature is active for a particular\n * scope.\n *\n * @param {Object} state       The store state.\n * @param {string} scope       The scope of the feature (e.g. core/edit-post).\n * @param {string} featureName The name of the feature.\n *\n * @return {boolean} Is the feature enabled?\n */\nexport function isFeatureActive( state, scope, featureName ) {\n\tconst featureValue = state.preferences.features[ scope ]?.[ featureName ];\n\tconst defaultedFeatureValue =\n\t\tfeatureValue !== undefined\n\t\t\t? featureValue\n\t\t\t: state.preferenceDefaults.features[ scope ]?.[ featureName ];\n\n\treturn !! defaultedFeatureValue;\n}\n","/**\n * The identifier for the data store.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/interface';\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { STORE_NAME } from './constants';\n\nconst storeConfig = {\n\treducer,\n\tactions,\n\tselectors,\n\tpersist: [ 'enableItems', 'preferences' ],\n};\n\n/**\n * Store definition for the interface namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig );\n\n// Once we build a more generic persistence plugin that works across types of stores\n// we'd be able to replace this with a register call.\nregisterStore( STORE_NAME, storeConfig );\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","/**\n * WordPress dependencies\n */\nimport { withPluginContext } from '@wordpress/plugins';\n\nexport default withPluginContext( ( context, ownProps ) => {\n\treturn {\n\t\ticon: ownProps.icon || context.icon,\n\t\tidentifier:\n\t\t\townProps.identifier || `${ context.name }/${ ownProps.name }`,\n\t};\n} );\n","/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as interfaceStore } from '../../store';\nimport complementaryAreaContext from '../complementary-area-context';\n\nfunction ComplementaryAreaToggle( {\n\tas = Button,\n\tscope,\n\tidentifier,\n\ticon,\n\tselectedIcon,\n\t...props\n} ) {\n\tconst ComponentToUse = as;\n\tconst isSelected = useSelect(\n\t\t( select ) =>\n\t\t\tselect( interfaceStore ).getActiveComplementaryArea( scope ) ===\n\t\t\tidentifier,\n\t\t[ identifier ]\n\t);\n\tconst { enableComplementaryArea, disableComplementaryArea } = useDispatch(\n\t\tinterfaceStore\n\t);\n\treturn (\n\t\t<ComponentToUse\n\t\t\ticon={ selectedIcon && isSelected ? selectedIcon : icon }\n\t\t\tonClick={ () => {\n\t\t\t\tif ( isSelected ) {\n\t\t\t\t\tdisableComplementaryArea( scope );\n\t\t\t\t} else {\n\t\t\t\t\tenableComplementaryArea( scope, identifier );\n\t\t\t\t}\n\t\t\t} }\n\t\t\t{ ...omit( props, [ 'name' ] ) }\n\t\t/>\n\t);\n}\n\nexport default complementaryAreaContext( ComplementaryAreaToggle );\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { closeSmall } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\n\nconst ComplementaryAreaHeader = ( {\n\tsmallScreenTitle,\n\tchildren,\n\tclassName,\n\ttoggleButtonProps,\n} ) => {\n\tconst toggleButton = (\n\t\t<ComplementaryAreaToggle icon={ closeSmall } { ...toggleButtonProps } />\n\t);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"components-panel__header interface-complementary-area-header__small\">\n\t\t\t\t{ smallScreenTitle && (\n\t\t\t\t\t<span className=\"interface-complementary-area-header__small-title\">\n\t\t\t\t\t\t{ smallScreenTitle }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\t\t\t\t{ toggleButton }\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={ classnames(\n\t\t\t\t\t'components-panel__header',\n\t\t\t\t\t'interface-complementary-area-header',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\ttabIndex={ -1 }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t\t{ toggleButton }\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ComplementaryAreaHeader;\n","/**\n * External dependencies\n */\nimport { isEmpty, noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { ButtonGroup, Button, Slot, Fill } from '@wordpress/components';\nimport { Children } from '@wordpress/element';\n\nfunction ActionItemSlot( {\n\tname,\n\tas: Component = ButtonGroup,\n\tfillProps = {},\n\tbubblesVirtually,\n\t...props\n} ) {\n\treturn (\n\t\t<Slot\n\t\t\tname={ name }\n\t\t\tbubblesVirtually={ bubblesVirtually }\n\t\t\tfillProps={ fillProps }\n\t\t>\n\t\t\t{ ( fills ) => {\n\t\t\t\tif ( isEmpty( Children.toArray( fills ) ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Special handling exists for backward compatibility.\n\t\t\t\t// It ensures that menu items created by plugin authors aren't\n\t\t\t\t// duplicated with automatically injected menu items coming\n\t\t\t\t// from pinnable plugin sidebars.\n\t\t\t\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t\t\t\tconst initializedByPlugins = [];\n\t\t\t\tChildren.forEach(\n\t\t\t\t\tfills,\n\t\t\t\t\t( {\n\t\t\t\t\t\tprops: { __unstableExplicitMenuItem, __unstableTarget },\n\t\t\t\t\t} ) => {\n\t\t\t\t\t\tif ( __unstableTarget && __unstableExplicitMenuItem ) {\n\t\t\t\t\t\t\tinitializedByPlugins.push( __unstableTarget );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst children = Children.map( fills, ( child ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! child.props.__unstableExplicitMenuItem &&\n\t\t\t\t\t\tinitializedByPlugins.includes(\n\t\t\t\t\t\t\tchild.props.__unstableTarget\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn child;\n\t\t\t\t} );\n\n\t\t\t\treturn <Component { ...props }>{ children }</Component>;\n\t\t\t} }\n\t\t</Slot>\n\t);\n}\n\nfunction ActionItem( { name, as: Component = Button, onClick, ...props } ) {\n\treturn (\n\t\t<Fill name={ name }>\n\t\t\t{ ( { onClick: fpOnClick } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Component\n\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\tonClick || fpOnClick\n\t\t\t\t\t\t\t\t? ( ...args ) => {\n\t\t\t\t\t\t\t\t\t\t( onClick || noop )( ...args );\n\t\t\t\t\t\t\t\t\t\t( fpOnClick || noop )( ...args );\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} }\n\t\t</Fill>\n\t);\n}\n\nActionItem.Slot = ActionItemSlot;\n\nexport default ActionItem;\n","/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { check } from '@wordpress/icons';\nimport { MenuItem } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\nimport ActionItem from '../action-item';\n\nconst PluginsMenuItem = ( props ) => (\n\t// Menu item is marked with unstable prop for backward compatibility.\n\t// They are removed so they don't leak to DOM elements.\n\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t<MenuItem\n\t\t{ ...omit( props, [\n\t\t\t'__unstableExplicitMenuItem',\n\t\t\t'__unstableTarget',\n\t\t] ) }\n\t/>\n);\n\nexport default function ComplementaryAreaMoreMenuItem( {\n\tscope,\n\ttarget,\n\t__unstableExplicitMenuItem,\n\t...props\n} ) {\n\treturn (\n\t\t<ComplementaryAreaToggle\n\t\t\tas={ ( toggleProps ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ActionItem\n\t\t\t\t\t\t__unstableExplicitMenuItem={\n\t\t\t\t\t\t\t__unstableExplicitMenuItem\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__unstableTarget={ `${ scope }/${ target }` }\n\t\t\t\t\t\tas={ PluginsMenuItem }\n\t\t\t\t\t\tname={ `${ scope }/plugin-more-menu` }\n\t\t\t\t\t\t{ ...toggleProps }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} }\n\t\t\trole=\"menuitemcheckbox\"\n\t\t\tselectedIcon={ check }\n\t\t\tname={ target }\n\t\t\tscope={ scope }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * External dependencies\n */\nimport { isEmpty } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Slot, Fill } from '@wordpress/components';\n\nfunction PinnedItems( { scope, ...props } ) {\n\treturn <Fill name={ `PinnedItems/${ scope }` } { ...props } />;\n}\n\nfunction PinnedItemsSlot( { scope, className, ...props } ) {\n\treturn (\n\t\t<Slot name={ `PinnedItems/${ scope }` } { ...props }>\n\t\t\t{ ( fills ) =>\n\t\t\t\t! isEmpty( fills ) && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t\t'interface-pinned-items'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ fills }\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</Slot>\n\t);\n}\n\nPinnedItems.Slot = PinnedItemsSlot;\n\nexport default PinnedItems;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Button, Panel, Slot, Fill } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { check, starEmpty, starFilled } from '@wordpress/icons';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { store as viewportStore } from '@wordpress/viewport';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaHeader from '../complementary-area-header';\nimport ComplementaryAreaMoreMenuItem from '../complementary-area-more-menu-item';\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\nimport withComplementaryAreaContext from '../complementary-area-context';\nimport PinnedItems from '../pinned-items';\nimport { store as interfaceStore } from '../../store';\n\nfunction ComplementaryAreaSlot( { scope, ...props } ) {\n\treturn <Slot name={ `ComplementaryArea/${ scope }` } { ...props } />;\n}\n\nfunction ComplementaryAreaFill( { scope, children, className } ) {\n\treturn (\n\t\t<Fill name={ `ComplementaryArea/${ scope }` }>\n\t\t\t<div className={ className }>{ children }</div>\n\t\t</Fill>\n\t);\n}\n\nfunction useAdjustComplementaryListener(\n\tscope,\n\tidentifier,\n\tactiveArea,\n\tisActive,\n\tisSmall\n) {\n\tconst previousIsSmall = useRef( false );\n\tconst shouldOpenWhenNotSmall = useRef( false );\n\tconst { enableComplementaryArea, disableComplementaryArea } = useDispatch(\n\t\tinterfaceStore\n\t);\n\tuseEffect( () => {\n\t\t// If the complementary area is active and the editor is switching from a big to a small window size.\n\t\tif ( isActive && isSmall && ! previousIsSmall.current ) {\n\t\t\t// Disable the complementary area.\n\t\t\tdisableComplementaryArea( scope );\n\t\t\t// Flag the complementary area to be reopened when the window size goes from small to big.\n\t\t\tshouldOpenWhenNotSmall.current = true;\n\t\t} else if (\n\t\t\t// If there is a flag indicating the complementary area should be enabled when we go from small to big window size\n\t\t\t// and we are going from a small to big window size.\n\t\t\tshouldOpenWhenNotSmall.current &&\n\t\t\t! isSmall &&\n\t\t\tpreviousIsSmall.current\n\t\t) {\n\t\t\t// Remove the flag indicating the complementary area should be enabled.\n\t\t\tshouldOpenWhenNotSmall.current = false;\n\t\t\t// Enable the complementary area.\n\t\t\tenableComplementaryArea( scope, identifier );\n\t\t} else if (\n\t\t\t// If the flag is indicating the current complementary should be reopened but another complementary area becomes active,\n\t\t\t// remove the flag.\n\t\t\tshouldOpenWhenNotSmall.current &&\n\t\t\tactiveArea &&\n\t\t\tactiveArea !== identifier\n\t\t) {\n\t\t\tshouldOpenWhenNotSmall.current = false;\n\t\t}\n\t\tif ( isSmall !== previousIsSmall.current ) {\n\t\t\tpreviousIsSmall.current = isSmall;\n\t\t}\n\t}, [ isActive, isSmall, scope, identifier, activeArea ] );\n}\n\nfunction ComplementaryArea( {\n\tchildren,\n\tclassName,\n\tcloseLabel = __( 'Close plugin' ),\n\tidentifier,\n\theader,\n\theaderClassName,\n\ticon,\n\tisPinnable = true,\n\tpanelClassName,\n\tscope,\n\tname,\n\tsmallScreenTitle,\n\ttitle,\n\ttoggleShortcut,\n\tisActiveByDefault,\n\tshowIconLabels = false,\n} ) {\n\tconst { isActive, isPinned, activeArea, isSmall, isLarge } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getActiveComplementaryArea, isItemPinned } = select(\n\t\t\t\tinterfaceStore\n\t\t\t);\n\t\t\tconst _activeArea = getActiveComplementaryArea( scope );\n\t\t\treturn {\n\t\t\t\tisActive: _activeArea === identifier,\n\t\t\t\tisPinned: isItemPinned( scope, identifier ),\n\t\t\t\tactiveArea: _activeArea,\n\t\t\t\tisSmall: select( viewportStore ).isViewportMatch( '< medium' ),\n\t\t\t\tisLarge: select( viewportStore ).isViewportMatch( 'large' ),\n\t\t\t};\n\t\t},\n\t\t[ identifier, scope ]\n\t);\n\tuseAdjustComplementaryListener(\n\t\tscope,\n\t\tidentifier,\n\t\tactiveArea,\n\t\tisActive,\n\t\tisSmall\n\t);\n\tconst {\n\t\tenableComplementaryArea,\n\t\tdisableComplementaryArea,\n\t\tpinItem,\n\t\tunpinItem,\n\t} = useDispatch( interfaceStore );\n\n\tuseEffect( () => {\n\t\tif ( isActiveByDefault && activeArea === undefined && ! isSmall ) {\n\t\t\tenableComplementaryArea( scope, identifier );\n\t\t}\n\t}, [ activeArea, isActiveByDefault, scope, identifier, isSmall ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ isPinnable && (\n\t\t\t\t<PinnedItems scope={ scope }>\n\t\t\t\t\t{ isPinned && (\n\t\t\t\t\t\t<ComplementaryAreaToggle\n\t\t\t\t\t\t\tscope={ scope }\n\t\t\t\t\t\t\tidentifier={ identifier }\n\t\t\t\t\t\t\tisPressed={\n\t\t\t\t\t\t\t\tisActive && ( ! showIconLabels || isLarge )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-expanded={ isActive }\n\t\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\t\ticon={ showIconLabels ? check : icon }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PinnedItems>\n\t\t\t) }\n\t\t\t{ name && isPinnable && (\n\t\t\t\t<ComplementaryAreaMoreMenuItem\n\t\t\t\t\ttarget={ name }\n\t\t\t\t\tscope={ scope }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t>\n\t\t\t\t\t{ title }\n\t\t\t\t</ComplementaryAreaMoreMenuItem>\n\t\t\t) }\n\t\t\t{ isActive && (\n\t\t\t\t<ComplementaryAreaFill\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'interface-complementary-area',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tscope={ scope }\n\t\t\t\t>\n\t\t\t\t\t<ComplementaryAreaHeader\n\t\t\t\t\t\tclassName={ headerClassName }\n\t\t\t\t\t\tcloseLabel={ closeLabel }\n\t\t\t\t\t\tonClose={ () => disableComplementaryArea( scope ) }\n\t\t\t\t\t\tsmallScreenTitle={ smallScreenTitle }\n\t\t\t\t\t\ttoggleButtonProps={ {\n\t\t\t\t\t\t\tlabel: closeLabel,\n\t\t\t\t\t\t\tshortcut: toggleShortcut,\n\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ header || (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<strong>{ title }</strong>\n\t\t\t\t\t\t\t\t{ isPinnable && (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"interface-complementary-area__pin-unpin-item\"\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\tisPinned ? starFilled : starEmpty\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\tisPinned\n\t\t\t\t\t\t\t\t\t\t\t\t? __( 'Unpin from toolbar' )\n\t\t\t\t\t\t\t\t\t\t\t\t: __( 'Pin to toolbar' )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\t\t( isPinned ? unpinItem : pinItem )(\n\t\t\t\t\t\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t\t\t\t\t\t\tidentifier\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tisPressed={ isPinned }\n\t\t\t\t\t\t\t\t\t\taria-expanded={ isPinned }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ComplementaryAreaHeader>\n\t\t\t\t\t<Panel className={ panelClassName }>{ children }</Panel>\n\t\t\t\t</ComplementaryAreaFill>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nconst ComplementaryAreaWrapped = withComplementaryAreaContext(\n\tComplementaryArea\n);\n\nComplementaryAreaWrapped.Slot = ComplementaryAreaSlot;\n\nexport default ComplementaryAreaWrapped;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useEffect } from '@wordpress/element';\nimport { __unstableUseNavigateRegions as useNavigateRegions } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useMergeRefs } from '@wordpress/compose';\n\nfunction useHTMLClass( className ) {\n\tuseEffect( () => {\n\t\tconst element =\n\t\t\tdocument && document.querySelector( `html:not(.${ className })` );\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\t\telement.classList.toggle( className );\n\t\treturn () => {\n\t\t\telement.classList.toggle( className );\n\t\t};\n\t}, [ className ] );\n}\n\nfunction InterfaceSkeleton(\n\t{\n\t\tfooter,\n\t\theader,\n\t\tsidebar,\n\t\tsecondarySidebar,\n\t\tnotices,\n\t\tcontent,\n\t\tdrawer,\n\t\tactions,\n\t\tlabels,\n\t\tclassName,\n\t\tshortcuts,\n\t},\n\tref\n) {\n\tconst navigateRegionsProps = useNavigateRegions( shortcuts );\n\n\tuseHTMLClass( 'interface-interface-skeleton__html-container' );\n\n\tconst defaultLabels = {\n\t\t/* translators: accessibility text for the nav bar landmark region. */\n\t\tdrawer: __( 'Drawer' ),\n\t\t/* translators: accessibility text for the top bar landmark region. */\n\t\theader: __( 'Header' ),\n\t\t/* translators: accessibility text for the content landmark region. */\n\t\tbody: __( 'Content' ),\n\t\t/* translators: accessibility text for the secondary sidebar landmark region. */\n\t\tsecondarySidebar: __( 'Block Library' ),\n\t\t/* translators: accessibility text for the settings landmark region. */\n\t\tsidebar: __( 'Settings' ),\n\t\t/* translators: accessibility text for the publish landmark region. */\n\t\tactions: __( 'Publish' ),\n\t\t/* translators: accessibility text for the footer landmark region. */\n\t\tfooter: __( 'Footer' ),\n\t};\n\n\tconst mergedLabels = { ...defaultLabels, ...labels };\n\n\treturn (\n\t\t<div\n\t\t\t{ ...navigateRegionsProps }\n\t\t\tref={ useMergeRefs( [ ref, navigateRegionsProps.ref ] ) }\n\t\t\tclassName={ classnames(\n\t\t\t\tclassName,\n\t\t\t\t'interface-interface-skeleton',\n\t\t\t\tnavigateRegionsProps.className,\n\t\t\t\t!! footer && 'has-footer'\n\t\t\t) }\n\t\t>\n\t\t\t{ !! drawer && (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"interface-interface-skeleton__drawer\"\n\t\t\t\t\trole=\"region\"\n\t\t\t\t\taria-label={ mergedLabels.drawer }\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t>\n\t\t\t\t\t{ drawer }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<div className=\"interface-interface-skeleton__editor\">\n\t\t\t\t{ !! header && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"interface-interface-skeleton__header\"\n\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\taria-label={ mergedLabels.header }\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ header }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<div className=\"interface-interface-skeleton__body\">\n\t\t\t\t\t{ !! secondarySidebar && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__secondary-sidebar\"\n\t\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\t\taria-label={ mergedLabels.secondarySidebar }\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ secondarySidebar }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! notices && (\n\t\t\t\t\t\t<div className=\"interface-interface-skeleton__notices\">\n\t\t\t\t\t\t\t{ notices }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"interface-interface-skeleton__content\"\n\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\taria-label={ mergedLabels.body }\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ content }\n\t\t\t\t\t</div>\n\t\t\t\t\t{ !! sidebar && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__sidebar\"\n\t\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\t\taria-label={ mergedLabels.sidebar }\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ sidebar }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! actions && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__actions\"\n\t\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\t\taria-label={ mergedLabels.actions }\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ actions }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{ !! footer && (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"interface-interface-skeleton__footer\"\n\t\t\t\t\trole=\"region\"\n\t\t\t\t\taria-label={ mergedLabels.footer }\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t>\n\t\t\t\t\t{ footer }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nexport default forwardRef( InterfaceSkeleton );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst moreVertical = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z\" />\n\t</SVG>\n);\n\nexport default moreVertical;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { DropdownMenu } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { moreVertical } from '@wordpress/icons';\n\nexport default function MoreMenuDropdown( {\n\tas: DropdownComponent = DropdownMenu,\n\tclassName,\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tlabel = __( 'Options' ),\n\tpopoverProps,\n\ttoggleProps,\n\tchildren,\n} ) {\n\treturn (\n\t\t<DropdownComponent\n\t\t\tclassName={ classnames(\n\t\t\t\t'interface-more-menu-dropdown',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\ticon={ moreVertical }\n\t\t\tlabel={ label }\n\t\t\tpopoverProps={ {\n\t\t\t\tposition: 'bottom left',\n\t\t\t\t...popoverProps,\n\t\t\t\tclassName: classnames(\n\t\t\t\t\t'interface-more-menu-dropdown__content',\n\t\t\t\t\tpopoverProps?.className\n\t\t\t\t),\n\t\t\t} }\n\t\t\ttoggleProps={ {\n\t\t\t\ttooltipPosition: 'bottom',\n\t\t\t\t...toggleProps,\n\t\t\t} }\n\t\t>\n\t\t\t{ ( onClose ) => children( onClose ) }\n\t\t</DropdownComponent>\n\t);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","/**\n * WordPress dependencies\n */\nimport { useContext } from '@wordpress/element';\nimport {\n\tToolbarGroup,\n\tToolbarButton,\n\t__experimentalText as Text,\n} from '@wordpress/components';\nimport { BlockControls } from '@wordpress/block-editor';\nimport { useDispatch } from '@wordpress/data';\nimport { store as interfaceStore } from '@wordpress/interface';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuntitledMenu,\n\tuseSelectedMenuId,\n\tuseMenuEntityProp,\n\tIsMenuNameControlFocusedContext,\n} from '../../hooks';\nimport { SIDEBAR_SCOPE, SIDEBAR_MENU } from '../../constants';\n\nexport default function NameDisplay() {\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\tconst [ menuId ] = useSelectedMenuId();\n\tconst [ name ] = useMenuEntityProp( 'name', menuId );\n\tconst [ , setIsMenuNameEditFocused ] = useContext(\n\t\tIsMenuNameControlFocusedContext\n\t);\n\n\tconst menuName = decodeEntities( name ?? untitledMenu );\n\n\treturn (\n\t\t<BlockControls>\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarButton\n\t\t\t\t\taria-label={ sprintf(\n\t\t\t\t\t\t// translators: %s: the name of a menu.\n\t\t\t\t\t\t__( `Edit menu name: %s` ),\n\t\t\t\t\t\tmenuName\n\t\t\t\t\t) }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tenableComplementaryArea( SIDEBAR_SCOPE, SIDEBAR_MENU );\n\t\t\t\t\t\tsetIsMenuNameEditFocused( true );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<Text limit={ 24 } ellipsizeMode=\"tail\" truncate>\n\t\t\t\t\t\t{ menuName }\n\t\t\t\t\t</Text>\n\t\t\t\t</ToolbarButton>\n\t\t\t</ToolbarGroup>\n\t\t</BlockControls>\n\t);\n}\n","/**\n * WordPress dependencies\n */\n/**\n * Internal dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport NameDisplay from '../components/name-display';\n\nconst addMenuNameEditor = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tif ( props.name !== 'core/navigation' ) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<NameDisplay />\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t</>\n\t\t);\n\t},\n\t'withMenuName'\n);\n\nexport default () =>\n\taddFilter(\n\t\t'editor.BlockEdit',\n\t\t'core/edit-navigation/with-menu-name',\n\t\taddMenuNameEditor\n\t);\n","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\n/**\n * External dependencies\n */\nimport { set } from 'lodash';\n\nfunction disableInsertingNonNavigationBlocks( settings, name ) {\n\tif (\n\t\t! [\n\t\t\t'core/navigation',\n\t\t\t'core/navigation-link',\n\t\t\t'core/navigation-submenu',\n\t\t].includes( name )\n\t) {\n\t\tset( settings, [ 'supports', 'inserter' ], false );\n\t}\n\treturn settings;\n}\n\nexport default () =>\n\taddFilter(\n\t\t'blocks.registerBlockType',\n\t\t'core/edit-navigation/disable-inserting-non-navigation-blocks',\n\t\tdisableInsertingNonNavigationBlocks\n\t);\n","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\nconst removeNavigationBlockEditUnsupportedFeatures = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tif ( props.name !== 'core/navigation' ) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n\t\treturn (\n\t\t\t<BlockEdit\n\t\t\t\t{ ...props }\n\t\t\t\thasSubmenuIndicatorSetting={ false }\n\t\t\t\thasItemJustificationControls={ false }\n\t\t\t\thasColorSettings={ false }\n\t\t\t/>\n\t\t);\n\t},\n\t'removeNavigationBlockEditUnsupportedFeatures'\n);\n\nexport default () =>\n\taddFilter(\n\t\t'editor.BlockEdit',\n\t\t'core/edit-navigation/remove-navigation-block-edit-unsupported-features',\n\t\tremoveNavigationBlockEditUnsupportedFeatures\n\t);\n","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\n\nfunction removeNavigationBlockSettingsUnsupportedFeatures( settings, name ) {\n\tif ( name !== 'core/navigation' ) {\n\t\treturn settings;\n\t}\n\n\treturn {\n\t\t...settings,\n\t\tsupports: {\n\t\t\tcustomClassName: false,\n\t\t\thtml: false,\n\t\t\tinserter: true,\n\t\t},\n\t\t// Remove any block variations.\n\t\tvariations: undefined,\n\t};\n}\n\nexport default () =>\n\taddFilter(\n\t\t'blocks.registerBlockType',\n\t\t'core/edit-navigation/remove-navigation-block-settings-unsupported-features',\n\t\tremoveNavigationBlockSettingsUnsupportedFeatures\n\t);\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keyboardShortcuts\"];","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { Button, TextControl, withNotices } from '@wordpress/components';\nimport { useFocusOnMount } from '@wordpress/compose';\nimport { __unstableStripHTML as stripHTML } from '@wordpress/dom';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { MENU_POST_TYPE, MENU_KIND } from '../../constants';\n\nfunction AddMenu( {\n\tclassName,\n\tonCreate,\n\ttitleText,\n\thelpText,\n\tfocusInputOnMount = false,\n\tnoticeUI,\n\tnoticeOperations,\n} ) {\n\tconst inputRef = useFocusOnMount( focusInputOnMount );\n\tconst [ menuName, setMenuName ] = useState( '' );\n\tconst [ isCreatingMenu, setIsCreatingMenu ] = useState( false );\n\tconst { createInfoNotice } = useDispatch( noticesStore );\n\tconst { saveMenu } = useDispatch( coreStore );\n\n\tconst { createErrorNotice, removeAllNotices } = noticeOperations;\n\n\tconst lastSaveError = useSelect( ( select ) => {\n\t\treturn select( coreStore ).getLastEntitySaveError(\n\t\t\tMENU_KIND,\n\t\t\tMENU_POST_TYPE\n\t\t);\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( lastSaveError ) {\n\t\t\tcreateErrorNotice( stripHTML( lastSaveError?.message ) );\n\t\t}\n\t}, [ lastSaveError ] );\n\n\tconst createMenu = async ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tif ( ! menuName.length || isCreatingMenu ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsCreatingMenu( true );\n\n\t\t// Remove any existing notices.\n\t\tremoveAllNotices();\n\n\t\tconst menu = await saveMenu( { name: menuName } );\n\n\t\tsetIsCreatingMenu( false );\n\n\t\tif ( menu ) {\n\t\t\tcreateInfoNotice( __( 'Menu created' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tisDismissible: true,\n\t\t\t} );\n\t\t\tif ( onCreate ) {\n\t\t\t\tonCreate( menu.id );\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tclassName={ classnames( 'edit-navigation-add-menu', className ) }\n\t\t\tonSubmit={ createMenu }\n\t\t>\n\t\t\t{ noticeUI }\n\t\t\t{ titleText && (\n\t\t\t\t<h3 className=\"edit-navigation-add-menu__title\">\n\t\t\t\t\t{ titleText }\n\t\t\t\t</h3>\n\t\t\t) }\n\t\t\t<TextControl\n\t\t\t\tref={ inputRef }\n\t\t\t\tlabel={ __( 'Menu name' ) }\n\t\t\t\tvalue={ menuName }\n\t\t\t\tonChange={ setMenuName }\n\t\t\t\thelp={ helpText }\n\t\t\t/>\n\n\t\t\t<Button\n\t\t\t\tclassName=\"edit-navigation-add-menu__create-menu-button\"\n\t\t\t\ttype=\"submit\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tdisabled={ ! menuName.length }\n\t\t\t\tisBusy={ isCreatingMenu }\n\t\t\t\t/* Button is disabled but still focusable */\n\t\t\t\taria-disabled={ ! menuName.length || isCreatingMenu }\n\t\t\t>\n\t\t\t\t{ __( 'Create menu' ) }\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\n\nexport default withNotices( AddMenu );\n","/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tMenuGroup,\n\tMenuItemsChoice,\n\tMenuItem,\n\tModal,\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport AddMenu from '../add-menu';\n\nexport default function MenuSwitcher( {\n\tmenus,\n\tselectedMenuId,\n\tonSelectMenu = noop,\n} ) {\n\tconst [ isModalVisible, setIsModalVisible ] = useState( false );\n\tconst openModal = () => setIsModalVisible( true );\n\tconst closeModal = () => setIsModalVisible( false );\n\n\treturn (\n\t\t<>\n\t\t\t<MenuGroup>\n\t\t\t\t<MenuItemsChoice\n\t\t\t\t\tvalue={ selectedMenuId }\n\t\t\t\t\tonSelect={ onSelectMenu }\n\t\t\t\t\tchoices={ menus.map( ( { id, name } ) => ( {\n\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t\tlabel: decodeEntities( name ),\n\t\t\t\t\t\t'aria-label': sprintf(\n\t\t\t\t\t\t\t/* translators: %s: The name of a menu. */\n\t\t\t\t\t\t\t__( \"Switch to '%s'\" ),\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t),\n\t\t\t\t\t} ) ) }\n\t\t\t\t/>\n\t\t\t</MenuGroup>\n\t\t\t<MenuGroup hideSeparator>\n\t\t\t\t<MenuItem\n\t\t\t\t\tclassName=\"edit-navigation-menu-switcher__new-button\"\n\t\t\t\t\tonClick={ openModal }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Create a new menu' ) }\n\t\t\t\t</MenuItem>\n\t\t\t\t{ isModalVisible && (\n\t\t\t\t\t<Modal\n\t\t\t\t\t\ttitle={ __( 'Create a new menu' ) }\n\t\t\t\t\t\tclassName=\"edit-navigation-menu-switcher__modal\"\n\t\t\t\t\t\tonRequestClose={ closeModal }\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddMenu\n\t\t\t\t\t\t\tonCreate={ ( menuId ) => {\n\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\tonSelectMenu( menuId );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\thelpText={ __(\n\t\t\t\t\t\t\t\t'A short descriptive name for your menu.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Modal>\n\t\t\t\t) }\n\t\t\t</MenuGroup>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Card, CardBody, NavigableMenu } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport AddMenu from '../add-menu';\nimport MenuSwitcher from '../menu-switcher';\n\nexport default function UnselectedMenuState( {\n\tonCreate,\n\tonSelectMenu,\n\tmenus,\n} ) {\n\tconst showMenuSwitcher = menus?.length > 0;\n\treturn (\n\t\t<div className=\"edit-navigation-empty-state\">\n\t\t\t{ showMenuSwitcher && <h4>{ __( 'Choose a menu to edit:' ) }</h4> }\n\t\t\t<Card>\n\t\t\t\t<CardBody>\n\t\t\t\t\t{ showMenuSwitcher ? (\n\t\t\t\t\t\t<NavigableMenu>\n\t\t\t\t\t\t\t<MenuSwitcher\n\t\t\t\t\t\t\t\tonSelectMenu={ onSelectMenu }\n\t\t\t\t\t\t\t\tmenus={ menus }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</NavigableMenu>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<AddMenu\n\t\t\t\t\t\t\tonCreate={ onCreate }\n\t\t\t\t\t\t\ttitleText={ __( 'Create your first menu' ) }\n\t\t\t\t\t\t\thelpText={ __(\n\t\t\t\t\t\t\t\t'A short descriptive name for your menu.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tfocusInputOnMount\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { Warning } from '@wordpress/block-editor';\n\nclass ErrorBoundary extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.reboot = this.reboot.bind( this );\n\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t};\n\t}\n\n\tcomponentDidCatch( error ) {\n\t\tthis.setState( { error } );\n\t}\n\n\treboot() {\n\t\tif ( this.props.onError ) {\n\t\t\tthis.props.onError();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { error } = this.state;\n\t\tif ( ! error ) {\n\t\t\treturn this.props.children;\n\t\t}\n\n\t\treturn (\n\t\t\t<Warning\n\t\t\t\tclassName=\"navigation-editor-error-boundary\"\n\t\t\t\tactions={ [\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey=\"recovery\"\n\t\t\t\t\t\tonClick={ this.reboot }\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Attempt Recovery' ) }\n\t\t\t\t\t</Button>,\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t{ __(\n\t\t\t\t\t'The navigation editor has encountered an unexpected error.'\n\t\t\t\t) }\n\t\t\t</Warning>\n\t\t);\n\t}\n}\n\nexport default ErrorBoundary;\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport {\n\tuseShortcut,\n\tstore as keyboardShortcutsStore,\n} from '@wordpress/keyboard-shortcuts';\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\nfunction NavigationEditorShortcuts( { saveBlocks } ) {\n\tuseShortcut( 'core/edit-navigation/save-menu', ( event ) => {\n\t\tevent.preventDefault();\n\t\tsaveBlocks();\n\t} );\n\n\tconst { redo, undo } = useDispatch( coreStore );\n\tuseShortcut( 'core/edit-navigation/undo', ( event ) => {\n\t\tundo();\n\t\tevent.preventDefault();\n\t} );\n\n\tuseShortcut( 'core/edit-navigation/redo', ( event ) => {\n\t\tredo();\n\t\tevent.preventDefault();\n\t} );\n\n\treturn null;\n}\n\nfunction RegisterNavigationEditorShortcuts() {\n\tconst { registerShortcut } = useDispatch( keyboardShortcutsStore );\n\tuseEffect( () => {\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-navigation/save-menu',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Save the navigation currently being edited.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primary',\n\t\t\t\tcharacter: 's',\n\t\t\t},\n\t\t} );\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-navigation/undo',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Undo your last changes.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primary',\n\t\t\t\tcharacter: 'z',\n\t\t\t},\n\t\t} );\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-navigation/redo',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Redo your last undo.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primaryShift',\n\t\t\t\tcharacter: 'z',\n\t\t\t},\n\t\t} );\n\t}, [ registerShortcut ] );\n\n\treturn null;\n}\n\nNavigationEditorShortcuts.Register = RegisterNavigationEditorShortcuts;\n\nexport default NavigationEditorShortcuts;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst cog = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M10.289 4.836A1 1 0 0111.275 4h1.306a1 1 0 01.987.836l.244 1.466c.787.26 1.503.679 2.108 1.218l1.393-.522a1 1 0 011.216.437l.653 1.13a1 1 0 01-.23 1.273l-1.148.944a6.025 6.025 0 010 2.435l1.149.946a1 1 0 01.23 1.272l-.653 1.13a1 1 0 01-1.216.437l-1.394-.522c-.605.54-1.32.958-2.108 1.218l-.244 1.466a1 1 0 01-.987.836h-1.306a1 1 0 01-.986-.836l-.244-1.466a5.995 5.995 0 01-2.108-1.218l-1.394.522a1 1 0 01-1.217-.436l-.653-1.131a1 1 0 01.23-1.272l1.149-.946a6.026 6.026 0 010-2.435l-1.148-.944a1 1 0 01-.23-1.272l.653-1.131a1 1 0 011.217-.437l1.393.522a5.994 5.994 0 012.108-1.218l.244-1.466zM14.929 12a3 3 0 11-6 0 3 3 0 016 0z\"\n\t\t\tclipRule=\"evenodd\"\n\t\t/>\n\t</SVG>\n);\n\nexport default cog;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport { SIDEBAR_BLOCK, SIDEBAR_MENU, SIDEBAR_SCOPE } from '../../constants';\n\nexport default function SidebarHeader( { sidebarName } ) {\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\tconst openMenuSettings = () =>\n\t\tenableComplementaryArea( SIDEBAR_SCOPE, SIDEBAR_MENU );\n\tconst openBlockSettings = () =>\n\t\tenableComplementaryArea( SIDEBAR_SCOPE, SIDEBAR_BLOCK );\n\n\tconst [ menuAriaLabel, menuActiveClass ] =\n\t\tsidebarName === SIDEBAR_MENU\n\t\t\t? // translators: ARIA label for the Menu sidebar tab, selected.\n\t\t\t  [ __( 'Menu (selected)' ), 'is-active' ]\n\t\t\t: // translators: ARIA label for the Menu Settings Sidebar tab, not selected.\n\t\t\t  [ __( 'Menu' ), '' ];\n\n\tconst [ blockAriaLabel, blockActiveClass ] =\n\t\tsidebarName === SIDEBAR_BLOCK\n\t\t\t? // translators: ARIA label for the Block Settings Sidebar tab, selected.\n\t\t\t  [ __( 'Block (selected)' ), 'is-active' ]\n\t\t\t: // translators: ARIA label for the Block Settings Sidebar tab, not selected.\n\t\t\t  [ __( 'Block' ), '' ];\n\n\t/* Use a list so screen readers will announce how many tabs there are. */\n\treturn (\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={ openMenuSettings }\n\t\t\t\t\tclassName={ `edit-navigation-sidebar__panel-tab ${ menuActiveClass }` }\n\t\t\t\t\taria-label={ menuAriaLabel }\n\t\t\t\t\t// translators: Data label for the Menu Settings Sidebar tab.\n\t\t\t\t\tdata-label={ __( 'Menu' ) }\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\t// translators: Text label for the Menu Settings Sidebar tab.\n\t\t\t\t\t\t__( 'Menu' )\n\t\t\t\t\t}\n\t\t\t\t</Button>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={ openBlockSettings }\n\t\t\t\t\tclassName={ `edit-navigation-sidebar__panel-tab ${ blockActiveClass }` }\n\t\t\t\t\taria-label={ blockAriaLabel }\n\t\t\t\t\t// translators: Data label for the Block Settings Sidebar tab.\n\t\t\t\t\tdata-label={ __( 'Block' ) }\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\t// translators: Text label for the Block Settings Sidebar tab.\n\t\t\t\t\t\t__( 'Block' )\n\t\t\t\t\t}\n\t\t\t\t</Button>\n\t\t\t</li>\n\t\t</ul>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { TextControl } from '@wordpress/components';\nimport { useEffect, useRef, useContext } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport {\n\tIsMenuNameControlFocusedContext,\n\tuseMenuEntityProp,\n\tuseSelectedMenuId,\n} from '../../hooks';\n\nexport function NameEditor() {\n\tconst [ isMenuNameEditFocused, setIsMenuNameEditFocused ] = useContext(\n\t\tIsMenuNameControlFocusedContext\n\t);\n\n\tconst [ menuId ] = useSelectedMenuId();\n\tconst [ name, setName ] = useMenuEntityProp( 'name', menuId );\n\n\tconst inputRef = useRef();\n\tuseEffect( () => {\n\t\tif ( isMenuNameEditFocused ) inputRef.current.focus();\n\t}, [ isMenuNameEditFocused ] );\n\n\treturn (\n\t\t<TextControl\n\t\t\tref={ inputRef }\n\t\t\thelp={ __(\n\t\t\t\t'A short, descriptive name used to refer to this menu elsewhere.'\n\t\t\t) }\n\t\t\tlabel={ __( 'Name' ) }\n\t\t\tonBlur={ () => setIsMenuNameEditFocused( false ) }\n\t\t\tclassName=\"edit-navigation-name-editor__text-control\"\n\t\t\tvalue={ decodeEntities( name || '' ) }\n\t\t\tonChange={ setName }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { ToggleControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { useMenuEntityProp } from '../../hooks';\n\nexport default function AutoAddPages( { menuId } ) {\n\tconst [ autoAddPages, setAutoAddPages ] = useMenuEntityProp(\n\t\t'auto_add',\n\t\tmenuId\n\t);\n\n\treturn (\n\t\t<ToggleControl\n\t\t\tlabel={ __( 'Add new pages' ) }\n\t\t\thelp={ __(\n\t\t\t\t'Automatically add published top-level pages to this menu.'\n\t\t\t) }\n\t\t\tchecked={ autoAddPages ?? false }\n\t\t\tonChange={ setAutoAddPages }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { NameEditor } from '../name-editor';\nimport AutoAddPages from './auto-add-pages';\n\nexport default function MenuSettings( { menuId } ) {\n\treturn (\n\t\t<PanelBody title={ __( 'Menu settings' ) }>\n\t\t\t<NameEditor />\n\t\t\t<AutoAddPages menuId={ menuId } />\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport {\n\tButton,\n\tCheckboxControl,\n\tModal,\n\tPanelBody,\n\tSpinner,\n\tSelectControl,\n} from '@wordpress/components';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport apiFetch from '@wordpress/api-fetch';\nimport { useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { useMenuLocations } from '../../hooks';\n\nexport default function ManageLocations( {\n\tmenus,\n\tselectedMenuId,\n\tonSelectMenu,\n} ) {\n\tconst {\n\t\tmenuLocations,\n\t\tassignMenuToLocation,\n\t\ttoggleMenuLocationAssignment,\n\t} = useMenuLocations();\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst openModal = () => setIsModalOpen( true );\n\tconst closeModal = () => setIsModalOpen( false );\n\tconst { createSuccessNotice, createErrorNotice } = useDispatch(\n\t\tnoticesStore\n\t);\n\n\tconst validateBatchResponse = ( batchResponse ) => {\n\t\tif ( batchResponse.failed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst errorResponses = batchResponse.responses.filter( ( response ) => {\n\t\t\treturn 200 > response.status || 300 <= response.status;\n\t\t} );\n\n\t\treturn 1 > errorResponses.length;\n\t};\n\n\tconst handleUpdateMenuLocations = async () => {\n\t\tconst method = 'POST';\n\t\tconst batchRequests = menus.map( ( { id } ) => {\n\t\t\tconst locations = menuLocations\n\t\t\t\t.filter( ( menuLocation ) => menuLocation.menu === id )\n\t\t\t\t.map( ( menuLocation ) => menuLocation.name );\n\n\t\t\treturn {\n\t\t\t\tpath: `/wp/v2/menus/${ id }`,\n\t\t\t\tbody: {\n\t\t\t\t\tlocations,\n\t\t\t\t},\n\t\t\t\tmethod,\n\t\t\t};\n\t\t} );\n\n\t\tconst batchResponse = await apiFetch( {\n\t\t\tpath: 'batch/v1',\n\t\t\tdata: {\n\t\t\t\tvalidation: 'require-all-validate',\n\t\t\t\trequests: batchRequests,\n\t\t\t},\n\t\t\tmethod,\n\t\t} );\n\n\t\tconst isSuccess = validateBatchResponse( batchResponse );\n\n\t\tif ( isSuccess ) {\n\t\t\tcreateSuccessNotice( __( 'Menu locations have been updated.' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t\tcloseModal();\n\t\t\treturn;\n\t\t}\n\n\t\tcreateErrorNotice(\n\t\t\t__( 'An error occurred while trying to update menu locations.' ),\n\t\t\t{ type: 'snackbar' }\n\t\t);\n\t};\n\n\tif ( ! menuLocations || ! menus?.length ) {\n\t\treturn <Spinner />;\n\t}\n\n\tif ( ! menuLocations.length ) {\n\t\treturn (\n\t\t\t<PanelBody title={ __( 'Theme locations' ) }>\n\t\t\t\t<p>{ __( 'There are no available menu locations.' ) }</p>\n\t\t\t</PanelBody>\n\t\t);\n\t}\n\n\tconst themeLocationCountTextMain = sprintf(\n\t\t// translators: Number of available theme locations.\n\t\t__(\n\t\t\t'Your current theme provides %d different locations to place menu.'\n\t\t),\n\t\tmenuLocations.length\n\t);\n\n\tconst themeLocationCountTextModal = sprintf(\n\t\t// translators: Number of available theme locations.\n\t\t__(\n\t\t\t'Your current theme supports %d different locations. Select which menu appears in each location.'\n\t\t),\n\t\tmenuLocations.length\n\t);\n\n\tconst menusWithSelection = menuLocations.map(\n\t\t( { name, description, menu } ) => {\n\t\t\tconst menuOnLocation = menus\n\t\t\t\t.filter( ( { id } ) => ! [ 0, selectedMenuId ].includes( id ) )\n\t\t\t\t.find( ( { id } ) => id === menu );\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tkey={ name }\n\t\t\t\t\tclassName=\"edit-navigation-manage-locations__checklist-item\"\n\t\t\t\t>\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\tclassName=\"edit-navigation-manage-locations__menu-location-checkbox\"\n\t\t\t\t\t\tchecked={ menu === selectedMenuId }\n\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\ttoggleMenuLocationAssignment( name, selectedMenuId )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={ description }\n\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\tmenuOnLocation &&\n\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t// translators: menu name.\n\t\t\t\t\t\t\t\t__( 'Currently using %s' ),\n\t\t\t\t\t\t\t\tdecodeEntities( menuOnLocation.name )\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t);\n\n\tconst menuLocationCard = menuLocations.map( ( menuLocation ) => (\n\t\t<div\n\t\t\tkey={ menuLocation.name }\n\t\t\tclassName=\"edit-navigation-manage-locations__menu-entry\"\n\t\t>\n\t\t\t<SelectControl\n\t\t\t\tkey={ menuLocation.name }\n\t\t\t\tclassName=\"edit-navigation-manage-locations__select-menu\"\n\t\t\t\tlabel={ menuLocation.description }\n\t\t\t\tlabelPosition=\"top\"\n\t\t\t\tvalue={ decodeEntities( menuLocation.menu ) }\n\t\t\t\toptions={ [\n\t\t\t\t\t{ value: 0, label: __( 'Select a Menu' ), key: 0 },\n\t\t\t\t\t...menus.map( ( { id, name } ) => ( {\n\t\t\t\t\t\tkey: id,\n\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t\tlabel: decodeEntities( name ),\n\t\t\t\t\t} ) ),\n\t\t\t\t] }\n\t\t\t\tonChange={ ( menuId ) => {\n\t\t\t\t\tassignMenuToLocation( menuLocation.name, Number( menuId ) );\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tstyle={ {\n\t\t\t\t\tvisibility: !! menuLocation.menu ? 'visible' : 'hidden',\n\t\t\t\t} }\n\t\t\t\tclassName=\"edit-navigation-manage-locations__edit-button\"\n\t\t\t\tonClick={ () => (\n\t\t\t\t\tcloseModal(), onSelectMenu( menuLocation.menu )\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ __( 'Edit' ) }\n\t\t\t</Button>\n\t\t</div>\n\t) );\n\n\treturn (\n\t\t<PanelBody title={ __( 'Theme locations' ) }>\n\t\t\t<div className=\"edit-navigation-manage-locations__theme-location-text-main\">\n\t\t\t\t{ themeLocationCountTextMain }\n\t\t\t</div>\n\t\t\t<ul className=\"edit-navigation-manage-locations__checklist\">\n\t\t\t\t{ menusWithSelection }\n\t\t\t</ul>\n\t\t\t<Button\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tclassName=\"edit-navigation-manage-locations__open-menu-locations-modal-button\"\n\t\t\t\taria-expanded={ isModalOpen }\n\t\t\t\tonClick={ openModal }\n\t\t\t>\n\t\t\t\t{ __( 'Manage locations' ) }\n\t\t\t</Button>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"edit-navigation-manage-locations__modal\"\n\t\t\t\t\ttitle={ __( 'Manage locations' ) }\n\t\t\t\t\tonRequestClose={ closeModal }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"edit-navigation-manage-locations__theme-location-text-modal\">\n\t\t\t\t\t\t{ themeLocationCountTextModal }\n\t\t\t\t\t</div>\n\t\t\t\t\t{ menuLocationCard }\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"edit-navigation-manage-locations__save-button\"\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tonClick={ handleUpdateMenuLocations }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Update' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tButton,\n\tPanelBody,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\nexport default function DeleteMenu( { onDeleteMenu, isMenuBeingDeleted } ) {\n\tconst [ showConfirmDialog, setShowConfirmDialog ] = useState( false );\n\n\tconst handleConfirm = () => {\n\t\tsetShowConfirmDialog( false );\n\t\tonDeleteMenu();\n\t};\n\n\treturn (\n\t\t<PanelBody>\n\t\t\t<>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"edit-navigation-inspector-additions__delete-menu-button\"\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tisDestructive\n\t\t\t\t\tisBusy={ isMenuBeingDeleted }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tsetShowConfirmDialog( true );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Delete menu' ) }\n\t\t\t\t</Button>\n\t\t\t\t<ConfirmDialog\n\t\t\t\t\tisOpen={ showConfirmDialog }\n\t\t\t\t\tonConfirm={ handleConfirm }\n\t\t\t\t\tonCancel={ () => setShowConfirmDialog( false ) }\n\t\t\t\t>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'Are you sure you want to delete this navigation? This action cannot be undone.'\n\t\t\t\t\t) }\n\t\t\t\t</ConfirmDialog>\n\t\t\t</>\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { cog } from '@wordpress/icons';\nimport { useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tBlockInspector,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport {\n\tComplementaryArea,\n\tstore as interfaceStore,\n} from '@wordpress/interface';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport SidebarHeader from './sidebar-header';\nimport MenuSettings from './menu-settings';\nimport ManageLocations from './manage-locations';\nimport DeleteMenu from './delete-menu';\nimport { SIDEBAR_BLOCK, SIDEBAR_MENU, SIDEBAR_SCOPE } from '../../constants';\n\nexport default function Sidebar( {\n\tmenuId,\n\tmenus,\n\tisMenuBeingDeleted,\n\tonDeleteMenu,\n\tonSelectMenu,\n} ) {\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst { sidebar, hasBlockSelection, hasSidebarEnabled } = useSelect(\n\t\t( select ) => {\n\t\t\tconst _sidebar = select(\n\t\t\t\tinterfaceStore\n\t\t\t).getActiveComplementaryArea( SIDEBAR_SCOPE );\n\n\t\t\tconst _hasSidebarEnabled = [ SIDEBAR_MENU, SIDEBAR_BLOCK ].includes(\n\t\t\t\t_sidebar\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tsidebar: _sidebar,\n\t\t\t\thasBlockSelection: !! select(\n\t\t\t\t\tblockEditorStore\n\t\t\t\t).getBlockSelectionStart(),\n\t\t\t\thasSidebarEnabled: _hasSidebarEnabled,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\n\tuseEffect( () => {\n\t\tif ( ! hasSidebarEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( hasBlockSelection ) {\n\t\t\tenableComplementaryArea( SIDEBAR_SCOPE, SIDEBAR_BLOCK );\n\t\t} else {\n\t\t\tenableComplementaryArea( SIDEBAR_SCOPE, SIDEBAR_MENU );\n\t\t}\n\t}, [ hasBlockSelection, hasSidebarEnabled ] );\n\n\tlet sidebarName = sidebar;\n\tif ( ! hasSidebarEnabled ) {\n\t\tsidebarName = hasBlockSelection ? SIDEBAR_BLOCK : SIDEBAR_MENU;\n\t}\n\n\treturn (\n\t\t<ComplementaryArea\n\t\t\tclassName=\"edit-navigation-sidebar\"\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\ttitle={ __( 'Settings' ) }\n\t\t\tcloseLabel={ __( 'Close settings' ) }\n\t\t\tscope={ SIDEBAR_SCOPE }\n\t\t\tidentifier={ sidebarName }\n\t\t\ticon={ cog }\n\t\t\tisActiveByDefault={ isLargeViewport }\n\t\t\theader={ <SidebarHeader sidebarName={ sidebarName } /> }\n\t\t\theaderClassName=\"edit-navigation-sidebar__panel-tabs\"\n\t\t\tisPinnable\n\t\t>\n\t\t\t{ sidebarName === SIDEBAR_MENU && (\n\t\t\t\t<>\n\t\t\t\t\t<MenuSettings menuId={ menuId } />\n\t\t\t\t\t<ManageLocations\n\t\t\t\t\t\tmenus={ menus }\n\t\t\t\t\t\tselectedMenuId={ menuId }\n\t\t\t\t\t\tonSelectMenu={ onSelectMenu }\n\t\t\t\t\t/>\n\t\t\t\t\t<DeleteMenu\n\t\t\t\t\t\tonDeleteMenu={ onDeleteMenu }\n\t\t\t\t\t\tisMenuBeingDeleted={ isMenuBeingDeleted }\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t{ sidebarName === SIDEBAR_BLOCK && <BlockInspector /> }\n\t\t</ComplementaryArea>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tDropdownMenu,\n\t__experimentalText as Text,\n} from '@wordpress/components';\nimport { chevronDown } from '@wordpress/icons';\nimport { useRef } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport MenuSwitcher from '../menu-switcher';\nimport { useMenuEntityProp, useSelectedMenuId } from '../../hooks';\n\nexport default function MenuActions( { menus, isLoading } ) {\n\tconst [ selectedMenuId, setSelectedMenuId ] = useSelectedMenuId();\n\tconst [ menuName ] = useMenuEntityProp( 'name', selectedMenuId );\n\n\t// The title ref is passed to the popover as the anchorRef so that the\n\t// dropdown is centered over the whole title area rather than just one\n\t// part of it.\n\tconst titleRef = useRef();\n\n\tif ( isLoading ) {\n\t\treturn (\n\t\t\t<div className=\"edit-navigation-menu-actions\">\n\t\t\t\t{ __( 'Loading…' ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"edit-navigation-menu-actions\">\n\t\t\t<div\n\t\t\t\tref={ titleRef }\n\t\t\t\tclassName=\"edit-navigation-menu-actions__subtitle-wrapper\"\n\t\t\t>\n\t\t\t\t<Text\n\t\t\t\t\tsize=\"body\"\n\t\t\t\t\tclassName=\"edit-navigation-menu-actions__subtitle\"\n\t\t\t\t\tas=\"h2\"\n\t\t\t\t\tlimit={ 24 }\n\t\t\t\t\tellipsizeMode=\"tail\"\n\t\t\t\t\ttruncate\n\t\t\t\t>\n\t\t\t\t\t{ decodeEntities( menuName ) }\n\t\t\t\t</Text>\n\n\t\t\t\t<DropdownMenu\n\t\t\t\t\ticon={ chevronDown }\n\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\tlabel: __( 'Switch menu' ),\n\t\t\t\t\t\tclassName:\n\t\t\t\t\t\t\t'edit-navigation-menu-actions__switcher-toggle',\n\t\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\t\t__experimentalIsFocusable: true,\n\t\t\t\t\t} }\n\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\tclassName:\n\t\t\t\t\t\t\t'edit-navigation-menu-actions__switcher-dropdown',\n\t\t\t\t\t\tposition: 'bottom center',\n\t\t\t\t\t\tanchorRef: titleRef.current,\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ ( { onClose } ) => (\n\t\t\t\t\t\t<MenuSwitcher\n\t\t\t\t\t\t\tmenus={ menus }\n\t\t\t\t\t\t\tselectedMenuId={ selectedMenuId }\n\t\t\t\t\t\t\tonSelectMenu={ ( menuId ) => {\n\t\t\t\t\t\t\t\tsetSelectedMenuId( menuId );\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</DropdownMenu>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button, Modal } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport AddMenu from '../add-menu';\nimport { useSelectedMenuId } from '../../hooks';\n\nexport default function NewButton() {\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst [ , setSelectedMenuId ] = useSelectedMenuId();\n\n\treturn (\n\t\t<>\n\t\t\t<Button variant=\"tertiary\" onClick={ () => setIsModalOpen( true ) }>\n\t\t\t\t{ __( 'New menu' ) }\n\t\t\t</Button>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ __( 'Create a new menu' ) }\n\t\t\t\t\tclassName=\"edit-navigation-menu-switcher__modal\"\n\t\t\t\t\tonRequestClose={ () => setIsModalOpen( false ) }\n\t\t\t\t>\n\t\t\t\t\t<AddMenu\n\t\t\t\t\t\thelpText={ __(\n\t\t\t\t\t\t\t'A short descriptive name for your menu.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tonCreate={ ( menuId ) => {\n\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\tsetSelectedMenuId( menuId );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editNavigationStore } from '../../store';\n\nexport default function SaveButton( { navigationPost } ) {\n\tconst { isDirty } = useSelect( ( select ) => {\n\t\tconst { __experimentalGetDirtyEntityRecords } = select( coreStore );\n\t\tconst dirtyEntityRecords = __experimentalGetDirtyEntityRecords();\n\n\t\treturn {\n\t\t\tisDirty: dirtyEntityRecords.length > 0,\n\t\t};\n\t}, [] );\n\n\tconst { saveNavigationPost } = useDispatch( editNavigationStore );\n\n\tconst disabled = ! isDirty || ! navigationPost;\n\n\treturn (\n\t\t<Button\n\t\t\tclassName=\"edit-navigation-toolbar__save-button\"\n\t\t\tvariant=\"primary\"\n\t\t\tonClick={ () => {\n\t\t\t\tsaveNavigationPost( navigationPost );\n\t\t\t} }\n\t\t\tdisabled={ disabled }\n\t\t>\n\t\t\t{ __( 'Save' ) }\n\t\t</Button>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst undo = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18.3 11.7c-.6-.6-1.4-.9-2.3-.9H6.7l2.9-3.3-1.1-1-4.5 5L8.5 16l1-1-2.7-2.7H16c.5 0 .9.2 1.3.5 1 1 1 3.4 1 4.5v.3h1.5v-.2c0-1.5 0-4.3-1.5-5.7z\" />\n\t</SVG>\n);\n\nexport default undo;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst redo = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M15.6 6.5l-1.1 1 2.9 3.3H8c-.9 0-1.7.3-2.3.9-1.4 1.5-1.4 4.2-1.4 5.6v.2h1.5v-.3c0-1.1 0-3.5 1-4.5.3-.3.7-.5 1.3-.5h9.2L14.5 15l1.1 1.1 4.6-4.6-4.6-5z\" />\n\t</SVG>\n);\n\nexport default redo;\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keycodes\"];","/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { ToolbarButton } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { undo as undoIcon, redo as redoIcon } from '@wordpress/icons';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { store as coreStore } from '@wordpress/core-data';\n\nexport default function UndoButton() {\n\tconst hasUndo = useSelect(\n\t\t( select ) => select( coreStore ).hasUndo(),\n\t\t[]\n\t);\n\tconst { undo } = useDispatch( coreStore );\n\treturn (\n\t\t<ToolbarButton\n\t\t\ticon={ ! isRTL() ? undoIcon : redoIcon }\n\t\t\tlabel={ __( 'Undo' ) }\n\t\t\tshortcut={ displayShortcut.primary( 'z' ) }\n\t\t\t// If there are no undo levels we don't want to actually disable this\n\t\t\t// button, because it will remove focus for keyboard users.\n\t\t\t// See: https://github.com/WordPress/gutenberg/issues/3486\n\t\t\taria-disabled={ ! hasUndo }\n\t\t\tonClick={ hasUndo ? undo : undefined }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { ToolbarButton } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { redo as redoIcon, undo as undoIcon } from '@wordpress/icons';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { store as coreStore } from '@wordpress/core-data';\n\nexport default function RedoButton() {\n\tconst hasRedo = useSelect(\n\t\t( select ) => select( coreStore ).hasRedo(),\n\t\t[]\n\t);\n\tconst { redo } = useDispatch( coreStore );\n\treturn (\n\t\t<ToolbarButton\n\t\t\ticon={ ! isRTL() ? redoIcon : undoIcon }\n\t\t\tlabel={ __( 'Redo' ) }\n\t\t\tshortcut={ displayShortcut.primaryShift( 'z' ) }\n\t\t\t// If there are no undo levels we don't want to actually disable this\n\t\t\t// button, because it will remove focus for keyboard users.\n\t\t\t// See: https://github.com/WordPress/gutenberg/issues/3486\n\t\t\taria-disabled={ ! hasRedo }\n\t\t\tonClick={ hasRedo ? redo : undefined }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst plus = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18 11.2h-5.2V6h-1.6v5.2H6v1.6h5.2V18h1.6v-5.2H18z\" />\n\t</SVG>\n);\n\nexport default plus;\n","/**\n * WordPress dependencies\n */\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { Button, ToolbarItem } from '@wordpress/components';\nimport { _x } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { plus } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { useNavigationEditorRootBlock } from '../../hooks';\nimport { store as editNavigationStore } from '../../store';\n\nfunction InserterToggle() {\n\tconst { navBlockClientId } = useNavigationEditorRootBlock();\n\n\tconst { isInserterOpened, hasInserterItems } = useSelect(\n\t\t( select ) => {\n\t\t\treturn {\n\t\t\t\thasInserterItems: select( blockEditorStore ).hasInserterItems(\n\t\t\t\t\tnavBlockClientId\n\t\t\t\t),\n\t\t\t\tisInserterOpened: select(\n\t\t\t\t\teditNavigationStore\n\t\t\t\t).isInserterOpened(),\n\t\t\t};\n\t\t},\n\t\t[ navBlockClientId ]\n\t);\n\n\tconst { setIsInserterOpened } = useDispatch( editNavigationStore );\n\n\treturn (\n\t\t<ToolbarItem\n\t\t\tas={ Button }\n\t\t\tclassName=\"edit-navigation-header-inserter-toggle\"\n\t\t\tvariant=\"primary\"\n\t\t\tisPressed={ isInserterOpened }\n\t\t\tonMouseDown={ ( event ) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t} }\n\t\t\tonClick={ () => setIsInserterOpened( ! isInserterOpened ) }\n\t\t\ticon={ plus }\n\t\t\t/* translators: button label text should, if possible, be under 16\n\t\t\t\t\tcharacters. */\n\t\t\tlabel={ _x(\n\t\t\t\t'Toggle block inserter',\n\t\t\t\t'Generic label for block inserter button'\n\t\t\t) }\n\t\t\tdisabled={ ! hasInserterItems }\n\t\t/>\n\t);\n}\n\nexport default InserterToggle;\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst external = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18.2 17c0 .7-.6 1.2-1.2 1.2H7c-.7 0-1.2-.6-1.2-1.2V7c0-.7.6-1.2 1.2-1.2h3.2V4.2H7C5.5 4.2 4.2 5.5 4.2 7v10c0 1.5 1.2 2.8 2.8 2.8h10c1.5 0 2.8-1.2 2.8-2.8v-3.6h-1.5V17zM14.9 3v1.5h3.7l-6.4 6.4 1.1 1.1 6.4-6.4v3.7h1.5V3h-6.3z\" />\n\t</SVG>\n);\n\nexport default external;\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill } from '@wordpress/components';\n\nconst { Fill: ToolsMoreMenuGroup, Slot } = createSlotFill(\n\t'EditNavigationToolsMoreMenuGroup'\n);\n\nToolsMoreMenuGroup.Slot = ( { fillProps } ) => (\n\t<Slot fillProps={ fillProps }>{ ( fills ) => fills }</Slot>\n);\n\nexport default ToolsMoreMenuGroup;\n","/**\n * WordPress dependencies\n */\nimport { MenuGroup, MenuItem, VisuallyHidden } from '@wordpress/components';\nimport { external } from '@wordpress/icons';\nimport { MoreMenuDropdown } from '@wordpress/interface';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport ToolsMoreMenuGroup from './tools-more-menu-group';\n\nexport default function MoreMenu() {\n\treturn (\n\t\t<MoreMenuDropdown>\n\t\t\t{ ( onClose ) => (\n\t\t\t\t<MenuGroup label={ __( 'Tools' ) }>\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\ticon={ external }\n\t\t\t\t\t\thref=\"https://github.com/WordPress/gutenberg/tree/trunk/packages/edit-navigation/docs/user-documentation.md\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Help' ) }\n\t\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<ToolsMoreMenuGroup.Slot fillProps={ { onClose } } />\n\t\t\t\t</MenuGroup>\n\t\t\t) }\n\t\t</MoreMenuDropdown>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { NavigableToolbar } from '@wordpress/block-editor';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { PinnedItems } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport MenuActions from './menu-actions';\nimport NewButton from './new-button';\nimport SaveButton from './save-button';\nimport UndoButton from './undo-button';\nimport RedoButton from './redo-button';\nimport InserterToggle from './inserter-toggle';\nimport MoreMenu from './more-menu';\n\nexport default function Header( {\n\tisMenuSelected,\n\tmenus,\n\tisPending,\n\tnavigationPost,\n} ) {\n\tconst isMediumViewport = useViewportMatch( 'medium' );\n\n\tif ( ! isMenuSelected ) {\n\t\treturn (\n\t\t\t<div className=\"edit-navigation-header\">\n\t\t\t\t<div className=\"edit-navigation-header__toolbar-wrapper\">\n\t\t\t\t\t<h1 className=\"edit-navigation-header__title\">\n\t\t\t\t\t\t{ __( 'Navigation' ) }\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"edit-navigation-header\">\n\t\t\t<div className=\"edit-navigation-header__toolbar-wrapper\">\n\t\t\t\t{ isMediumViewport && (\n\t\t\t\t\t<h1 className=\"edit-navigation-header__title\">\n\t\t\t\t\t\t{ __( 'Navigation' ) }\n\t\t\t\t\t</h1>\n\t\t\t\t) }\n\n\t\t\t\t<NavigableToolbar\n\t\t\t\t\tclassName=\"edit-navigation-header__toolbar\"\n\t\t\t\t\taria-label={ __( 'Document tools' ) }\n\t\t\t\t>\n\t\t\t\t\t<InserterToggle />\n\t\t\t\t\t{ isMediumViewport && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<UndoButton />\n\t\t\t\t\t\t\t<RedoButton />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</NavigableToolbar>\n\t\t\t</div>\n\n\t\t\t<MenuActions menus={ menus } isLoading={ isPending } />\n\n\t\t\t<div className=\"edit-navigation-header__actions\">\n\t\t\t\t{ isMediumViewport && <NewButton /> }\n\t\t\t\t<SaveButton navigationPost={ navigationPost } />\n\t\t\t\t<PinnedItems.Slot scope=\"core/edit-navigation\" />\n\t\t\t\t<MoreMenu />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * External dependencies\n */\nimport { filter } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { NoticeList, SnackbarList } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\nexport default function EditNavigationNotices() {\n\tconst { removeNotice } = useDispatch( noticesStore );\n\tconst notices = useSelect(\n\t\t( select ) => select( noticesStore ).getNotices(),\n\t\t[]\n\t);\n\tconst dismissibleNotices = filter( notices, {\n\t\tisDismissible: true,\n\t\ttype: 'default',\n\t} );\n\tconst nonDismissibleNotices = filter( notices, {\n\t\tisDismissible: false,\n\t\ttype: 'default',\n\t} );\n\tconst snackbarNotices = filter( notices, {\n\t\ttype: 'snackbar',\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<NoticeList\n\t\t\t\tnotices={ nonDismissibleNotices }\n\t\t\t\tclassName=\"edit-navigation-notices__notice-list\"\n\t\t\t/>\n\t\t\t<NoticeList\n\t\t\t\tnotices={ dismissibleNotices }\n\t\t\t\tclassName=\"edit-navigation-notices__notice-list\"\n\t\t\t\tonRemove={ removeNotice }\n\t\t\t/>\n\t\t\t<SnackbarList\n\t\t\t\tnotices={ snackbarNotices }\n\t\t\t\tclassName=\"edit-navigation-notices__snackbar-list\"\n\t\t\t\tonRemove={ removeNotice }\n\t\t\t/>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { BlockList, ObserveTyping, WritingFlow } from '@wordpress/block-editor';\nimport { Spinner } from '@wordpress/components';\n\nexport default function Editor( { isPending } ) {\n\treturn (\n\t\t<div className=\"edit-navigation-editor\">\n\t\t\t{ isPending ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<div className=\"editor-styles-wrapper\">\n\t\t\t\t\t<WritingFlow>\n\t\t\t\t\t\t<ObserveTyping>\n\t\t\t\t\t\t\t<BlockList />\n\t\t\t\t\t\t</ObserveTyping>\n\t\t\t\t\t</WritingFlow>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst close = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M13 11.8l6.1-6.3-1-1-6.1 6.2-6.1-6.2-1 1 6.1 6.3-6.5 6.7 1 1 6.5-6.6 6.5 6.6 1-1z\" />\n\t</SVG>\n);\n\nexport default close;\n","/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { close } from '@wordpress/icons';\nimport {\n\t__experimentalLibrary as Library,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport {\n\tuseViewportMatch,\n\t__experimentalUseDialog as useDialog,\n} from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editNavigationStore } from '../../store';\nimport { useNavigationEditorRootBlock } from '../../hooks';\n\nconst SHOW_PREVIEWS = false;\n\nfunction InserterSidebar() {\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\n\tconst {\n\t\tnavBlockClientId,\n\t\tlastNavBlockItemIndex,\n\t} = useNavigationEditorRootBlock();\n\n\tconst { hasInserterItems, selectedBlockClientId } = useSelect(\n\t\t( select ) => {\n\t\t\treturn {\n\t\t\t\thasInserterItems: select( blockEditorStore ).hasInserterItems(\n\t\t\t\t\tnavBlockClientId\n\t\t\t\t),\n\t\t\t\tselectedBlockClientId: select(\n\t\t\t\t\tblockEditorStore\n\t\t\t\t).getSelectedBlock()?.clientId,\n\t\t\t};\n\t\t},\n\t\t[ navBlockClientId ]\n\t);\n\n\tconst { setIsInserterOpened } = useDispatch( editNavigationStore );\n\n\tconst [ inserterDialogRef, inserterDialogProps ] = useDialog( {\n\t\tonClose: () => setIsInserterOpened( false ),\n\t} );\n\n\t// Only concerned with whether there are items to display. If not then\n\t// we shouldn't render.\n\tif ( ! hasInserterItems ) {\n\t\treturn null;\n\t}\n\n\tconst shouldInsertInNavBlock =\n\t\t! selectedBlockClientId || navBlockClientId === selectedBlockClientId;\n\n\treturn (\n\t\t<div\n\t\t\tref={ inserterDialogRef }\n\t\t\t{ ...inserterDialogProps }\n\t\t\tclassName=\"edit-navigation-layout__inserter-panel\"\n\t\t>\n\t\t\t<div className=\"edit-navigation-layout__inserter-panel-header\">\n\t\t\t\t<Button\n\t\t\t\t\ticon={ close }\n\t\t\t\t\tonClick={ () => setIsInserterOpened( false ) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"edit-navigation-layout__inserter-panel-content\">\n\t\t\t\t<Library\n\t\t\t\t\t// If the root Nav block is selected then any items inserted by the\n\t\t\t\t\t// global inserter should append after the last nav item. Otherwise\n\t\t\t\t\t// simply allow default Gutenberg behaviour.\n\t\t\t\t\trootClientId={\n\t\t\t\t\t\tshouldInsertInNavBlock ? navBlockClientId : undefined\n\t\t\t\t\t} // If set, insertion will be into the block with this ID.\n\t\t\t\t\t__experimentalInsertionIndex={\n\t\t\t\t\t\t// If set, insertion will be into this explicit position.\n\t\t\t\t\t\tshouldInsertInNavBlock\n\t\t\t\t\t\t\t? lastNavBlockItemIndex\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t\tshouldFocusBlock={ isMobileViewport }\n\t\t\t\t\tshowInserterHelpPanel={ SHOW_PREVIEWS }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default InserterSidebar;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Warns the user if there are unsaved changes before leaving the editor.\n *\n * This is a duplicate of the component implemented in the editor package.\n * Duplicated here as edit-navigation doesn't depend on editor.\n *\n * @return {WPComponent} The component.\n */\nexport default function UnsavedChangesWarning() {\n\tconst isDirty = useSelect( ( select ) => {\n\t\tconst { __experimentalGetDirtyEntityRecords } = select( coreStore );\n\t\tconst dirtyEntityRecords = __experimentalGetDirtyEntityRecords();\n\t\treturn dirtyEntityRecords.length > 0;\n\t}, [] );\n\n\tuseEffect( () => {\n\t\t/**\n\t\t * Warns the user if there are unsaved changes before leaving the editor.\n\t\t *\n\t\t * @param {Event} event `beforeunload` event.\n\t\t *\n\t\t * @return {?string} Warning prompt message, if unsaved changes exist.\n\t\t */\n\t\tconst warnIfUnsavedChanges = ( event ) => {\n\t\t\tif ( isDirty ) {\n\t\t\t\tevent.returnValue = __(\n\t\t\t\t\t'You have unsaved changes. If you proceed, they will be lost.'\n\t\t\t\t);\n\t\t\t\treturn event.returnValue;\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener( 'beforeunload', warnIfUnsavedChanges );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'beforeunload', warnIfUnsavedChanges );\n\t\t};\n\t}, [ isDirty ] );\n\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tBlockEditorKeyboardShortcuts,\n\tBlockEditorProvider,\n\tBlockTools,\n\t__unstableUseBlockSelectionClearer as useBlockSelectionClearer,\n} from '@wordpress/block-editor';\nimport { useEntityBlockEditor } from '@wordpress/core-data';\nimport { Popover, SlotFillProvider, Spinner } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useMemo, useState } from '@wordpress/element';\nimport {\n\tInterfaceSkeleton,\n\tComplementaryArea,\n\tstore as interfaceStore,\n} from '@wordpress/interface';\nimport { __ } from '@wordpress/i18n';\nimport { ShortcutProvider } from '@wordpress/keyboard-shortcuts';\nimport { PluginArea } from '@wordpress/plugins';\n\n/**\n * Internal dependencies\n */\nimport UnselectedMenuState from './unselected-menu-state';\nimport {\n\tIsMenuNameControlFocusedContext,\n\tuseNavigationEditor,\n\tuseMenuNotifications,\n} from '../../hooks';\nimport ErrorBoundary from '../error-boundary';\nimport NavigationEditorShortcuts from './shortcuts';\nimport Sidebar from '../sidebar';\nimport Header from '../header';\nimport Notices from '../notices';\nimport Editor from '../editor';\nimport InserterSidebar from '../inserter-sidebar';\nimport UnsavedChangesWarning from './unsaved-changes-warning';\nimport { store as editNavigationStore } from '../../store';\nimport {\n\tNAVIGATION_POST_KIND,\n\tNAVIGATION_POST_POST_TYPE,\n} from '../../constants';\n\nconst interfaceLabels = {\n\t/* translators: accessibility text for the navigation screen top bar landmark region. */\n\theader: __( 'Navigation top bar' ),\n\t/* translators: accessibility text for the navigation screen content landmark region. */\n\tbody: __( 'Navigation menu blocks' ),\n\t/* translators: accessibility text for the navigation screen settings landmark region. */\n\tsidebar: __( 'Navigation settings' ),\n\tsecondarySidebar: __( 'Block library' ),\n};\n\nexport default function Layout( { blockEditorSettings } ) {\n\tconst contentAreaRef = useBlockSelectionClearer();\n\tconst [ isMenuNameControlFocused, setIsMenuNameControlFocused ] = useState(\n\t\tfalse\n\t);\n\tconst { saveNavigationPost } = useDispatch( editNavigationStore );\n\tconst savePost = () => saveNavigationPost( navigationPost );\n\n\tconst {\n\t\tmenus,\n\t\thasLoadedMenus,\n\t\thasFinishedInitialLoad,\n\t\tselectedMenuId,\n\t\tnavigationPost,\n\t\tisMenuBeingDeleted,\n\t\tselectMenu,\n\t\tdeleteMenu,\n\t\tisMenuSelected,\n\t} = useNavigationEditor();\n\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\tNAVIGATION_POST_KIND,\n\t\tNAVIGATION_POST_POST_TYPE,\n\t\t{\n\t\t\tid: navigationPost?.id,\n\t\t}\n\t);\n\n\tconst { hasSidebarEnabled, isInserterOpened } = useSelect(\n\t\t( select ) => ( {\n\t\t\thasSidebarEnabled: !! select(\n\t\t\t\tinterfaceStore\n\t\t\t).getActiveComplementaryArea( 'core/edit-navigation' ),\n\t\t\tisInserterOpened: select( editNavigationStore ).isInserterOpened(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tuseEffect( () => {\n\t\tif ( ! selectedMenuId && menus?.length ) {\n\t\t\tselectMenu( menus[ 0 ].id );\n\t\t}\n\t}, [ selectedMenuId, menus ] );\n\n\tuseMenuNotifications( selectedMenuId );\n\n\tconst hasMenus = !! menus?.length;\n\n\tconst isBlockEditorReady = !! (\n\t\thasMenus &&\n\t\tnavigationPost &&\n\t\tisMenuSelected\n\t);\n\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ShortcutProvider>\n\t\t\t\t<div\n\t\t\t\t\thidden={ ! isMenuBeingDeleted }\n\t\t\t\t\tclassName={ 'edit-navigation-layout__overlay' }\n\t\t\t\t/>\n\t\t\t\t<SlotFillProvider>\n\t\t\t\t\t<BlockEditorKeyboardShortcuts.Register />\n\t\t\t\t\t<NavigationEditorShortcuts.Register />\n\t\t\t\t\t<NavigationEditorShortcuts saveBlocks={ savePost } />\n\t\t\t\t\t<BlockEditorProvider\n\t\t\t\t\t\tvalue={ blocks }\n\t\t\t\t\t\tonInput={ onInput }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\tsettings={ {\n\t\t\t\t\t\t\t...blockEditorSettings,\n\t\t\t\t\t\t\ttemplateLock: 'all',\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t>\n\t\t\t\t\t\t<IsMenuNameControlFocusedContext.Provider\n\t\t\t\t\t\t\tvalue={ useMemo(\n\t\t\t\t\t\t\t\t() => [\n\t\t\t\t\t\t\t\t\tisMenuNameControlFocused,\n\t\t\t\t\t\t\t\t\tsetIsMenuNameControlFocused,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[ isMenuNameControlFocused ]\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InterfaceSkeleton\n\t\t\t\t\t\t\t\tclassName=\"edit-navigation-layout\"\n\t\t\t\t\t\t\t\tlabels={ interfaceLabels }\n\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\t\t\tisMenuSelected={ isMenuSelected }\n\t\t\t\t\t\t\t\t\t\tisPending={ ! hasLoadedMenus }\n\t\t\t\t\t\t\t\t\t\tmenus={ menus }\n\t\t\t\t\t\t\t\t\t\tnavigationPost={ navigationPost }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Notices />\n\t\t\t\t\t\t\t\t\t\t{ ! hasFinishedInitialLoad && (\n\t\t\t\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t\t\t\t\t{ ! isMenuSelected &&\n\t\t\t\t\t\t\t\t\t\t\thasFinishedInitialLoad && (\n\t\t\t\t\t\t\t\t\t\t\t\t<UnselectedMenuState\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelectMenu={ selectMenu }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonCreate={ selectMenu }\n\t\t\t\t\t\t\t\t\t\t\t\t\tmenus={ menus }\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t{ isBlockEditorReady && (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"edit-navigation-layout__content-area\"\n\t\t\t\t\t\t\t\t\t\t\t\tref={ contentAreaRef }\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<BlockTools>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Editor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPending={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t! hasLoadedMenus\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</BlockTools>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsidebar={\n\t\t\t\t\t\t\t\t\thasSidebarEnabled && (\n\t\t\t\t\t\t\t\t\t\t<ComplementaryArea.Slot scope=\"core/edit-navigation\" />\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsecondarySidebar={\n\t\t\t\t\t\t\t\t\tisInserterOpened && <InserterSidebar />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ isMenuSelected && (\n\t\t\t\t\t\t\t\t<Sidebar\n\t\t\t\t\t\t\t\t\tmenus={ menus }\n\t\t\t\t\t\t\t\t\tmenuId={ selectedMenuId }\n\t\t\t\t\t\t\t\t\tonSelectMenu={ selectMenu }\n\t\t\t\t\t\t\t\t\tonDeleteMenu={ deleteMenu }\n\t\t\t\t\t\t\t\t\tisMenuBeingDeleted={ isMenuBeingDeleted }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</IsMenuNameControlFocusedContext.Provider>\n\t\t\t\t\t\t<UnsavedChangesWarning />\n\t\t\t\t\t</BlockEditorProvider>\n\t\t\t\t\t<Popover.Slot />\n\t\t\t\t\t<PluginArea />\n\t\t\t\t</SlotFillProvider>\n\t\t\t</ShortcutProvider>\n\t\t</ErrorBoundary>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\nimport { __unstableStripHTML as stripHTML } from '@wordpress/dom';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { MENU_POST_TYPE, MENU_KIND } from '../constants';\n\nexport default function useMenuNotifications( menuId ) {\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\tconst lastDeleteError = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( coreStore ).getLastEntityDeleteError(\n\t\t\t\tMENU_KIND,\n\t\t\t\tMENU_POST_TYPE,\n\t\t\t\tmenuId\n\t\t\t);\n\t\t},\n\t\t[ menuId ]\n\t);\n\n\tuseEffect( () => {\n\t\tif ( lastDeleteError ) {\n\t\t\tcreateErrorNotice( stripHTML( lastDeleteError?.message ), {\n\t\t\t\tid: 'edit-navigation-error',\n\t\t\t} );\n\t\t}\n\t}, [ lastDeleteError ] );\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/**\n * WordPress dependencies\n */\nimport { normalizePath } from '@wordpress/url';\n\n/**\n * The purpose of this function is to create a middleware that is responsible for preloading menu-related data.\n * It uses data that is returned from the /wp/v2/menus endpoint for requests\n * to the /wp/v2/menu/<menuId> endpoint, because the data is the same.\n * This way, we can avoid making additional REST API requests.\n * This middleware can be removed if/when we implement caching at the wordpress/core-data level.\n *\n * @param {Object} preloadedData\n * @return {Function} Preloading middleware.\n */\nexport function createMenuPreloadingMiddleware( preloadedData ) {\n\tconst cache = Object.keys( preloadedData ).reduce( ( result, path ) => {\n\t\tresult[ normalizePath( path ) ] = preloadedData[ path ];\n\t\treturn result;\n\t}, /** @type {Record<string, any>} */ ( {} ) );\n\n\tlet menusDataLoaded = false;\n\tlet menuDataLoaded = false;\n\n\treturn ( options, next ) => {\n\t\tconst { parse = true } = options;\n\t\tif ( 'string' !== typeof options.path ) {\n\t\t\treturn next( options );\n\t\t}\n\n\t\tconst method = options.method || 'GET';\n\t\tif ( 'GET' !== method ) {\n\t\t\treturn next( options );\n\t\t}\n\n\t\tconst path = normalizePath( options.path );\n\t\tif ( ! menusDataLoaded && cache[ path ] ) {\n\t\t\tmenusDataLoaded = true;\n\t\t\treturn sendSuccessResponse( cache[ path ], parse );\n\t\t}\n\n\t\tif ( menuDataLoaded ) {\n\t\t\treturn next( options );\n\t\t}\n\n\t\tconst matches = path.match( /^\\/wp\\/v2\\/menus\\/(\\d+)\\?context=edit$/ );\n\t\tif ( ! matches ) {\n\t\t\treturn next( options );\n\t\t}\n\n\t\tconst key = Object.keys( cache )?.[ 0 ];\n\t\tconst menuData = cache[ key ]?.body;\n\t\tif ( ! menuData ) {\n\t\t\treturn next( options );\n\t\t}\n\n\t\tconst menuId = parseInt( matches[ 1 ] );\n\t\tconst menu = menuData.filter( ( { id } ) => id === menuId );\n\n\t\tif ( menu.length > 0 ) {\n\t\t\tmenuDataLoaded = true;\n\t\t\t// We don't have headers because we \"emulate\" this request\n\t\t\treturn sendSuccessResponse(\n\t\t\t\t{ body: menu[ 0 ], headers: {} },\n\t\t\t\tparse\n\t\t\t);\n\t\t}\n\n\t\treturn next( options );\n\t};\n}\n\n/**\n * This is a helper function that sends a success response.\n *\n * @param {Object}  responseData An object with the menu data\n * @param {boolean} parse        A boolean that controls whether to send a response or just the response data\n * @return {Object} Resolved promise\n */\nfunction sendSuccessResponse( responseData, parse ) {\n\treturn Promise.resolve(\n\t\tparse\n\t\t\t? responseData.body\n\t\t\t: new window.Response( JSON.stringify( responseData.body ), {\n\t\t\t\t\tstatus: 200,\n\t\t\t\t\tstatusText: 'OK',\n\t\t\t\t\theaders: responseData.headers,\n\t\t\t  } )\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport {\n\tregisterCoreBlocks,\n\t__experimentalRegisterExperimentalCoreBlocks,\n} from '@wordpress/block-library';\nimport { dispatch, useDispatch } from '@wordpress/data';\nimport { render, useMemo } from '@wordpress/element';\nimport {\n\t__experimentalFetchUrlData,\n\t__experimentalFetchLinkSuggestions as fetchLinkSuggestions,\n\tstore as coreStore,\n} from '@wordpress/core-data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { NAVIGATION_POST_KIND, NAVIGATION_POST_POST_TYPE } from './constants';\nimport { store as editNavigationStore } from './store';\nimport { addFilters } from './filters';\nimport Layout from './components/layout';\n\nfunction NavEditor( { settings } ) {\n\tconst { setIsInserterOpened } = useDispatch( editNavigationStore );\n\n\t// Allows the QuickInserter to toggle the sidebar inserter.\n\t// This is marked as experimental to give time for the quick inserter to mature.\n\tconst __experimentalSetIsInserterOpened = setIsInserterOpened;\n\n\t// Provide link suggestions handler to fetch search results for Link UI.\n\tconst __experimentalFetchLinkSuggestions = ( search, searchOptions ) => {\n\t\t// Bump the default number of suggestions.\n\t\t// See https://github.com/WordPress/gutenberg/issues/34283.\n\t\tsearchOptions.perPage = 10;\n\t\treturn fetchLinkSuggestions( search, searchOptions, settings );\n\t};\n\n\tconst editorSettings = useMemo( () => {\n\t\treturn {\n\t\t\t...settings,\n\t\t\t__experimentalFetchLinkSuggestions,\n\t\t\t__experimentalSetIsInserterOpened,\n\t\t\t__experimentalFetchRichUrlData: __experimentalFetchUrlData,\n\t\t};\n\t}, [\n\t\tsettings,\n\t\t__experimentalFetchLinkSuggestions,\n\t\t__experimentalSetIsInserterOpened,\n\t] );\n\n\treturn <Layout blockEditorSettings={ editorSettings } />;\n}\n\n/**\n * Setup and registration of editor.\n *\n * @param {Object} settings blockEditor settings.\n */\nfunction setUpEditor( settings ) {\n\taddFilters( ! settings.blockNavMenus );\n\n\t// Set up the navigation post entity.\n\tdispatch( coreStore ).addEntities( [\n\t\t{\n\t\t\tkind: NAVIGATION_POST_KIND,\n\t\t\tname: NAVIGATION_POST_POST_TYPE,\n\t\t\ttransientEdits: { blocks: true, selection: true },\n\t\t\tlabel: __( 'Navigation Post' ),\n\t\t\t__experimentalNoFetch: true,\n\t\t},\n\t] );\n\n\tdispatch( blocksStore ).__experimentalReapplyBlockTypeFilters();\n\tregisterCoreBlocks();\n\tif ( process.env.IS_GUTENBERG_PLUGIN ) {\n\t\t__experimentalRegisterExperimentalCoreBlocks();\n\t}\n}\n\n/**\n * Initalise and render editor into DOM.\n *\n * @param {string} id       ID of HTML element into which the editor will be rendered.\n * @param {Object} settings blockEditor settings.\n */\nexport function initialize( id, settings ) {\n\tsetUpEditor( settings );\n\n\trender(\n\t\t<NavEditor settings={ settings } />,\n\t\tdocument.getElementById( id )\n\t);\n}\n\nexport { createMenuPreloadingMiddleware as __unstableCreateMenuPreloadingMiddleware } from './utils';\n","/**\n * Internal dependencies\n */\nimport addNavigationEditorCustomAppender from './add-navigation-editor-custom-appender';\nimport addNavigationEditorPlaceholder from './add-navigation-editor-placeholder';\nimport addMenuNameEditor from './add-menu-name-editor';\nimport disableInsertingNonNavigationBlocks from './disable-inserting-non-navigation-blocks';\nimport removeEditUnsupportedFeatures from './remove-edit-unsupported-features';\nimport removeSettingsUnsupportedFeatures from './remove-settings-unsupported-features';\n\nexport const addFilters = (\n\tshouldAddDisableInsertingNonNavigationBlocksFilter\n) => {\n\taddNavigationEditorCustomAppender();\n\taddNavigationEditorPlaceholder();\n\taddMenuNameEditor();\n\tif ( shouldAddDisableInsertingNonNavigationBlocksFilter ) {\n\t\tdisableInsertingNonNavigationBlocks();\n\t}\n\tremoveEditUnsupportedFeatures();\n\tremoveSettingsUnsupportedFeatures();\n};\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","r","Symbol","toStringTag","value","window","MENU_KIND","MENU_POST_TYPE","NAVIGATION_POST_KIND","NAVIGATION_POST_POST_TYPE","SIDEBAR_SCOPE","SIDEBAR_MENU","SIDEBAR_BLOCK","NEW_TAB_TARGET_ATTRIBUTE","combineReducers","selectedMenuId","state","action","type","menuId","blockInserterPanel","buildNavigationPostId","getRecordIdFromBlock","block","attributes","__internalRecordId","addRecordIdToBlock","recordId","isBlockSupportedInNav","includes","name","menuItemsToBlocks","menuItems","mapMenuItemsToBlocks","dataset","id","relation","hashTable","create","dataTree","data","children","createDataTree","sortedItems","sortBy","blocks","map","menuItem","parse","content","raw","createBlock","menuItemToBlockAttributes","nestedBlocks","itemBlockName","zip","title","menuItemTitleField","xfn","attr_title","object","object_id","description","url","menuItemTypeField","target","label","rendered","kind","replace","trim","rel","className","opensInNewTab","getNavigationPostForMenu","async","registry","dispatch","stubPost","createStubPost","persistPost","args","coreStore","startResolution","navigationBlock","innerBlocks","orientation","createNavigationBlock","resolveSelect","getMenuItems","menus","per_page","menuItemsQuery","builtPost","finishResolution","slug","status","meta","post","receiveEntityRecords","getSelectedMenuId","createRegistrySelector","select","hasResolvedNavigationPost","getEditedEntityRecord","hasFinishedResolution","isInserterOpened","STORE_NAME","setSelectedMenuId","saveNavigationPost","lock","coreDataStore","__unstableAcquireStoreLock","exclusive","saveEditedEntityRecord","error","getLastEntitySaveError","Error","message","updatedBlocks","batchSaveMenuItems","updatedPost","noticesStore","createSuccessNotice","__","saveError","errorMessage","sprintf","createErrorNotice","__unstableReleaseStoreLock","oldMenuItems","navBlockWithRecordIds","batchInsertPlaceholderMenuItems","navBlockAfterUpdates","batchUpdateMenuItems","deletedIds","difference","blocksTreeToList","batchDeleteMenuItems","blocksWithoutRecordId","filter","tasks","saveEntityRecord","menu_order","results","__experimentalBatch","blockToResult","Map","mapBlocksTree","has","allMenuItems","blocksTreeToAnnotatedList","unsupportedMenuItems","console","warn","updatedMenuItems","parentBlock","childIndex","parentId","blockPosition","omit","blockTitleAttr","split","blockAttributesToMenuItem","serialize","parent","blockToMenuItem","getMenuItem","editEntityRecord","undoIgnore","hasEditsForEntityRecord","forEach","failure","updatedMenuItem","deleteBatch","deleteEntityRecord","success","force","flatMap","innerBlock","index","concat","callback","idx","setIsInserterOpened","storeConfig","reducer","selectors","resolvers","actions","persist","store","createReduxStore","_extends","assign","source","this","registerStore","CustomAppender","InnerBlocks","isToggle","EnhancedNavigationBlock","blockEdit","BlockEdit","props","clientId","noBlockSelected","isSelected","isImmediateParentOfSelectedBlock","selectedBlockHasDescendants","useSelect","getClientIdsOfDescendants","hasSelectedInnerBlock","getSelectedBlockClientId","blockEditorStore","_isImmediateParentOfSelectedBlock","selectedBlockId","_selectedBlockHasDescendants","customAppender","addNavigationEditorCustomAppender","createHigherOrderComponent","SVG","viewBox","xmlns","Path","useMenuEntity","useDispatch","menuEntityData","editedMenu","hasLoadedEditedMenu","editMenuEntityRecord","useMenuEntityProp","useEntityProp","getMenusData","params","getMenus","hasLoadedMenus","useSelectedMenuId","editNavigationStore","locationsForMenuId","menuLocationsByName","values","menu","getBlockOrder","lockedNavigationBlock","navBlockClientId","lastNavBlockItemIndex","untitledMenu","IsMenuNameControlFocusedContext","createContext","useMenuEntities","isResolvingMenus","hasResolvedMenus","isResolving","menusParameters","hasMenus","useMenuItemEntities","hasResolvedMenuItems","hasSelectedMenu","menuItemsParameters","usePageEntities","pages","isResolvingPages","hasResolvedPages","getEntityRecords","pagesParameters","order","orderby","hasPages","TOGGLE_PROPS","variant","POPOVER_PROPS","position","forwardRef","ref","onCreate","selectedMenu","setSelectedMenu","useState","isCreatingFromMenu","setIsCreatingFromMenu","menuName","isLoading","createFromMenu","useCallback","useEffect","selectableMenus","hasSelectableMenus","Placeholder","instructions","Spinner","Button","onClick","link","convertPagesToBlocks","DropdownMenu","text","icon","chevronDown","toggleProps","popoverProps","onClose","MenuGroup","MenuItem","addNavigationEditorPlaceholder","customPlaceholder","BlockPlaceholder","fillRule","clipRule","preferenceDefaults","features","scope","defaults","preferences","featureName","enableItems","singleEnableItems","itemType","item","multipleEnableItems","isEnable","currentTypeState","currentScopeState","setSingleEnableItem","enableComplementaryArea","area","disableComplementaryArea","setMultipleEnableItem","pinItem","itemId","unpinItem","toggleFeature","currentValue","isFeatureActive","setFeatureValue","setFeatureDefaults","getActiveComplementaryArea","getSingleEnableItem","isItemPinned","isMultipleEnabledItemEnabled","featureValue","withPluginContext","context","ownProps","identifier","complementaryAreaContext","as","selectedIcon","ComponentToUse","interfaceStore","smallScreenTitle","toggleButtonProps","toggleButton","closeSmall","classnames","tabIndex","ActionItem","Component","Fill","fpOnClick","noop","Slot","ButtonGroup","fillProps","bubblesVirtually","fills","isEmpty","Children","initializedByPlugins","__unstableExplicitMenuItem","__unstableTarget","child","PluginsMenuItem","ComplementaryAreaMoreMenuItem","role","check","PinnedItems","ComplementaryAreaFill","ComplementaryAreaWrapped","withComplementaryAreaContext","closeLabel","header","headerClassName","isPinnable","panelClassName","toggleShortcut","isActiveByDefault","showIconLabels","isActive","isPinned","activeArea","isSmall","isLarge","_activeArea","viewportStore","isViewportMatch","previousIsSmall","useRef","shouldOpenWhenNotSmall","current","useAdjustComplementaryListener","isPressed","showTooltip","shortcut","starFilled","starEmpty","Panel","footer","sidebar","secondarySidebar","notices","drawer","labels","shortcuts","navigateRegionsProps","useNavigateRegions","element","document","querySelector","classList","toggle","useHTMLClass","mergedLabels","body","useMergeRefs","MoreMenuDropdown","DropdownComponent","moreVertical","tooltipPosition","NameDisplay","setIsMenuNameEditFocused","useContext","decodeEntities","BlockControls","ToolbarGroup","ToolbarButton","limit","ellipsizeMode","truncate","addMenuNameEditor","disableInsertingNonNavigationBlocks","settings","set","removeNavigationBlockEditUnsupportedFeatures","hasSubmenuIndicatorSetting","hasItemJustificationControls","hasColorSettings","removeNavigationBlockSettingsUnsupportedFeatures","supports","customClassName","html","inserter","variations","withNotices","titleText","helpText","focusInputOnMount","noticeUI","noticeOperations","inputRef","useFocusOnMount","setMenuName","isCreatingMenu","setIsCreatingMenu","createInfoNotice","saveMenu","removeAllNotices","lastSaveError","stripHTML","onSubmit","event","preventDefault","isDismissible","TextControl","onChange","help","disabled","isBusy","MenuSwitcher","onSelectMenu","isModalVisible","setIsModalVisible","closeModal","MenuItemsChoice","onSelect","choices","hideSeparator","Modal","onRequestClose","UnselectedMenuState","showMenuSwitcher","Card","CardBody","NavigableMenu","ErrorBoundary","constructor","super","reboot","bind","componentDidCatch","setState","onError","render","Warning","NavigationEditorShortcuts","saveBlocks","useShortcut","redo","undo","Register","registerShortcut","keyboardShortcutsStore","category","keyCombination","modifier","character","SidebarHeader","sidebarName","menuAriaLabel","menuActiveClass","blockAriaLabel","blockActiveClass","NameEditor","isMenuNameEditFocused","setName","focus","onBlur","AutoAddPages","autoAddPages","setAutoAddPages","ToggleControl","checked","MenuSettings","PanelBody","ManageLocations","menuLocations","assignMenuToLocation","toggleMenuLocationAssignment","setMenuLocationsByName","isMounted","newMenuLocationsByName","apiFetch","method","path","fetchMenuLocationsByName","locationName","newMenuId","oldMenuId","merge","locations","useMemo","idToSet","useMenuLocations","isModalOpen","setIsModalOpen","themeLocationCountTextMain","themeLocationCountTextModal","menusWithSelection","menuOnLocation","find","CheckboxControl","menuLocationCard","menuLocation","SelectControl","labelPosition","options","Number","style","visibility","batchRequests","batchResponse","validation","requests","failed","responses","response","DeleteMenu","onDeleteMenu","isMenuBeingDeleted","showConfirmDialog","setShowConfirmDialog","isDestructive","isOpen","onConfirm","onCancel","Sidebar","isLargeViewport","useViewportMatch","hasBlockSelection","hasSidebarEnabled","_sidebar","_hasSidebarEnabled","getBlockSelectionStart","cog","BlockInspector","MenuActions","titleRef","size","__experimentalIsFocusable","anchorRef","NewButton","SaveButton","navigationPost","isDirty","__experimentalGetDirtyEntityRecords","UndoButton","hasUndo","isRTL","redoIcon","undoIcon","displayShortcut","RedoButton","hasRedo","useNavigationEditorRootBlock","hasInserterItems","ToolbarItem","onMouseDown","plus","_x","ToolsMoreMenuGroup","createSlotFill","MoreMenu","external","href","VisuallyHidden","Header","isMenuSelected","isPending","isMediumViewport","NavigableToolbar","EditNavigationNotices","removeNotice","getNotices","dismissibleNotices","nonDismissibleNotices","snackbarNotices","NoticeList","onRemove","SnackbarList","Editor","WritingFlow","ObserveTyping","BlockList","isMobileViewport","selectedBlockClientId","getSelectedBlock","inserterDialogRef","inserterDialogProps","useDialog","shouldInsertInNavBlock","close","rootClientId","__experimentalInsertionIndex","shouldFocusBlock","showInserterHelpPanel","UnsavedChangesWarning","warnIfUnsavedChanges","returnValue","addEventListener","removeEventListener","interfaceLabels","Layout","blockEditorSettings","contentAreaRef","useBlockSelectionClearer","isMenuNameControlFocused","setIsMenuNameControlFocused","hasFinishedInitialLoad","selectMenu","deleteMenu","_deleteMenu","setHasFinishedInitialLoad","keys","isDeletingEntityRecord","selectedMenuName","useNavigationEditor","onInput","useEntityBlockEditor","lastDeleteError","getLastEntityDeleteError","useMenuNotifications","isBlockEditorReady","ShortcutProvider","hidden","SlotFillProvider","BlockEditorKeyboardShortcuts","BlockEditorProvider","templateLock","useSubRegistry","Provider","BlockTools","Popover","PluginArea","createMenuPreloadingMiddleware","preloadedData","cache","reduce","result","normalizePath","menusDataLoaded","menuDataLoaded","next","sendSuccessResponse","matches","match","menuData","parseInt","headers","responseData","Promise","resolve","Response","JSON","stringify","statusText","NavEditor","__experimentalSetIsInserterOpened","__experimentalFetchLinkSuggestions","search","searchOptions","perPage","fetchLinkSuggestions","editorSettings","__experimentalFetchRichUrlData","__experimentalFetchUrlData","initialize","shouldAddDisableInsertingNonNavigationBlocksFilter","blockNavMenus","addFilter","addEntities","transientEdits","selection","__experimentalNoFetch","blocksStore","__experimentalReapplyBlockTypeFilters","registerCoreBlocks","__experimentalRegisterExperimentalCoreBlocks","setUpEditor","getElementById"],"sourceRoot":""}