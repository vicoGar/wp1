{"version":3,"file":"./build/edit-post/index.min.js","mappings":"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","sources":["webpack://wp/./node_modules/classnames/index.js","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"blockLibrary\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"hooks\"]","webpack://wp/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/check.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/star-filled.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/star-empty.js","webpack://wp/external window [\"wp\",\"viewport\"]","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/close-small.js","webpack://wp/external window \"lodash\"","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/reducer.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/actions.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/selectors.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/constants.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/index.js","webpack://wp/external window [\"wp\",\"plugins\"]","webpack://wp/./packages/interface/build-module/components/complementary-area-context/@wordpress/interface/src/components/complementary-area-context/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-toggle/@wordpress/interface/src/components/complementary-area-toggle/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-header/@wordpress/interface/src/components/complementary-area-header/index.js","webpack://wp/./packages/interface/build-module/components/action-item/@wordpress/interface/src/components/action-item/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-more-menu-item/@wordpress/interface/src/components/complementary-area-more-menu-item/index.js","webpack://wp/./packages/interface/build-module/components/pinned-items/@wordpress/interface/src/components/pinned-items/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area/@wordpress/interface/src/components/complementary-area/index.js","webpack://wp/./packages/interface/build-module/components/fullscreen-mode/@wordpress/interface/src/components/fullscreen-mode/index.js","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/./packages/interface/build-module/components/interface-skeleton/@wordpress/interface/src/components/interface-skeleton/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/more-vertical.js","webpack://wp/./packages/interface/build-module/components/more-menu-dropdown/@wordpress/interface/src/components/more-menu-dropdown/index.js","webpack://wp/external window [\"wp\",\"a11y\"]","webpack://wp/./packages/interface/build-module/components/more-menu-feature-toggle/@wordpress/interface/src/components/more-menu-feature-toggle/index.js","webpack://wp/external window [\"wp\",\"mediaUtils\"]","webpack://wp/./packages/edit-post/build-module/hooks/components/@wordpress/edit-post/src/hooks/components/index.js","webpack://wp/external window [\"wp\",\"blockEditor\"]","webpack://wp/./packages/edit-post/build-module/hooks/validate-multiple-use/@wordpress/edit-post/src/hooks/validate-multiple-use/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/external.js","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"editor\"]","webpack://wp/./packages/edit-post/build-module/plugins/copy-content-menu-item/@wordpress/edit-post/src/plugins/copy-content-menu-item/index.js","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/./packages/edit-post/build-module/store/@wordpress/edit-post/src/store/defaults.js","webpack://wp/./packages/edit-post/build-module/store/@wordpress/edit-post/src/store/reducer.js","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/./packages/edit-post/build-module/utils/@wordpress/edit-post/src/utils/meta-boxes.js","webpack://wp/./packages/edit-post/build-module/store/@wordpress/edit-post/src/store/actions.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/./packages/edit-post/build-module/store/@wordpress/edit-post/src/store/selectors.js","webpack://wp/./packages/edit-post/build-module/store/@wordpress/edit-post/src/store/constants.js","webpack://wp/./packages/edit-post/build-module/store/@wordpress/edit-post/src/store/index.js","webpack://wp/./packages/edit-post/build-module/plugins/keyboard-shortcuts-help-menu-item/@wordpress/edit-post/src/plugins/keyboard-shortcuts-help-menu-item/index.js","webpack://wp/./packages/edit-post/build-module/components/header/tools-more-menu-group/@wordpress/edit-post/src/components/header/tools-more-menu-group/index.js","webpack://wp/./packages/edit-post/build-module/plugins/welcome-guide-menu-item/@wordpress/edit-post/src/plugins/welcome-guide-menu-item/index.js","webpack://wp/./packages/edit-post/build-module/plugins/@wordpress/edit-post/src/plugins/index.js","webpack://wp/external window [\"wp\",\"keyboardShortcuts\"]","webpack://wp/./packages/edit-post/build-module/components/text-editor/@wordpress/edit-post/src/components/text-editor/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/arrow-left.js","webpack://wp/./packages/edit-post/build-module/components/visual-editor/@wordpress/edit-post/src/components/visual-editor/block-inspector-button.js","webpack://wp/./packages/edit-post/build-module/components/visual-editor/@wordpress/edit-post/src/components/visual-editor/index.js","webpack://wp/./packages/edit-post/build-module/components/keyboard-shortcuts/@wordpress/edit-post/src/components/keyboard-shortcuts/index.js","webpack://wp/./packages/edit-post/build-module/components/keyboard-shortcut-help-modal/@wordpress/edit-post/src/components/keyboard-shortcut-help-modal/config.js","webpack://wp/./packages/edit-post/build-module/components/keyboard-shortcut-help-modal/@wordpress/edit-post/src/components/keyboard-shortcut-help-modal/shortcut.js","webpack://wp/./packages/edit-post/build-module/components/keyboard-shortcut-help-modal/@wordpress/edit-post/src/components/keyboard-shortcut-help-modal/dynamic-shortcut.js","webpack://wp/./packages/edit-post/build-module/components/keyboard-shortcut-help-modal/@wordpress/edit-post/src/components/keyboard-shortcut-help-modal/index.js","webpack://wp/./packages/icons/build-module/icon/@wordpress/icons/src/icon/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/chevron-left.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/chevron-right.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/@wordpress/edit-post/src/components/preferences-modal/section.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/options/@wordpress/edit-post/src/components/preferences-modal/options/base.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/options/@wordpress/edit-post/src/components/preferences-modal/options/enable-custom-fields.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/options/@wordpress/edit-post/src/components/preferences-modal/options/enable-panel.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/options/@wordpress/edit-post/src/components/preferences-modal/options/enable-plugin-document-setting-panel.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/options/@wordpress/edit-post/src/components/preferences-modal/options/enable-publish-sidebar.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/options/@wordpress/edit-post/src/components/preferences-modal/options/enable-feature.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/@wordpress/edit-post/src/components/preferences-modal/meta-boxes-section.js","webpack://wp/./packages/edit-post/build-module/components/block-manager/@wordpress/edit-post/src/components/block-manager/checklist.js","webpack://wp/./packages/edit-post/build-module/components/block-manager/@wordpress/edit-post/src/components/block-manager/category.js","webpack://wp/./packages/edit-post/build-module/components/block-manager/@wordpress/edit-post/src/components/block-manager/index.js","webpack://wp/./packages/edit-post/build-module/components/preferences-modal/@wordpress/edit-post/src/components/preferences-modal/index.js","webpack://wp/./packages/edit-post/build-module/components/browser-url/@wordpress/edit-post/src/components/browser-url/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/wordpress.js","webpack://wp/./packages/edit-post/build-module/components/header/fullscreen-mode-close/@wordpress/edit-post/src/components/header/fullscreen-mode-close/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/list-view.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/plus.js","webpack://wp/./packages/edit-post/build-module/components/header/header-toolbar/@wordpress/edit-post/src/components/header/header-toolbar/index.js","webpack://wp/./packages/edit-post/build-module/components/header/mode-switcher/@wordpress/edit-post/src/components/header/mode-switcher/index.js","webpack://wp/./packages/edit-post/build-module/components/header/preferences-menu-item/@wordpress/edit-post/src/components/header/preferences-menu-item/index.js","webpack://wp/./packages/edit-post/build-module/components/header/writing-menu/@wordpress/edit-post/src/components/header/writing-menu/index.js","webpack://wp/./packages/edit-post/build-module/components/header/more-menu/@wordpress/edit-post/src/components/header/more-menu/index.js","webpack://wp/./packages/edit-post/build-module/components/header/@wordpress/edit-post/src/components/header/post-publish-button-or-toggle.js","webpack://wp/./packages/edit-post/build-module/components/device-preview/@wordpress/edit-post/src/components/device-preview/index.js","webpack://wp/./packages/edit-post/build-module/components/header/main-dashboard-button/@wordpress/edit-post/src/components/header/main-dashboard-button/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/chevron-down.js","webpack://wp/./packages/edit-post/build-module/components/header/template-title/@wordpress/edit-post/src/components/header/template-title/delete-template.js","webpack://wp/./packages/edit-post/build-module/components/header/template-title/@wordpress/edit-post/src/components/header/template-title/edit-template-title.js","webpack://wp/./packages/edit-post/build-module/components/header/template-title/@wordpress/edit-post/src/components/header/template-title/template-description.js","webpack://wp/./packages/edit-post/build-module/components/header/template-title/@wordpress/edit-post/src/components/header/template-title/index.js","webpack://wp/./packages/edit-post/build-module/components/header/@wordpress/edit-post/src/components/header/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/close.js","webpack://wp/./packages/edit-post/build-module/components/secondary-sidebar/@wordpress/edit-post/src/components/secondary-sidebar/inserter-sidebar.js","webpack://wp/./packages/edit-post/build-module/components/secondary-sidebar/@wordpress/edit-post/src/components/secondary-sidebar/list-view-sidebar.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/cog.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/settings-header/@wordpress/edit-post/src/components/sidebar/settings-header/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-visibility/@wordpress/edit-post/src/components/sidebar/post-visibility/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-trash/@wordpress/edit-post/src/components/sidebar/post-trash/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-schedule/@wordpress/edit-post/src/components/sidebar/post-schedule/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-sticky/@wordpress/edit-post/src/components/sidebar/post-sticky/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-author/@wordpress/edit-post/src/components/sidebar/post-author/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-slug/@wordpress/edit-post/src/components/sidebar/post-slug/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-format/@wordpress/edit-post/src/components/sidebar/post-format/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-pending-status/@wordpress/edit-post/src/components/sidebar/post-pending-status/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/plugin-post-status-info/@wordpress/edit-post/src/components/sidebar/plugin-post-status-info/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-status/@wordpress/edit-post/src/components/sidebar/post-status/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/last-revision/@wordpress/edit-post/src/components/sidebar/last-revision/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-taxonomies/@wordpress/edit-post/src/components/sidebar/post-taxonomies/taxonomy-panel.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-taxonomies/@wordpress/edit-post/src/components/sidebar/post-taxonomies/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/featured-image/@wordpress/edit-post/src/components/sidebar/featured-image/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-excerpt/@wordpress/edit-post/src/components/sidebar/post-excerpt/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/post-link/@wordpress/edit-post/src/components/sidebar/post-link/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/discussion-panel/@wordpress/edit-post/src/components/sidebar/discussion-panel/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/page-attributes/@wordpress/edit-post/src/components/sidebar/page-attributes/index.js","webpack://wp/./packages/edit-post/build-module/components/meta-boxes/meta-boxes-area/@wordpress/edit-post/src/components/meta-boxes/meta-boxes-area/index.js","webpack://wp/./packages/edit-post/build-module/components/meta-boxes/@wordpress/edit-post/src/components/meta-boxes/meta-box-visibility.js","webpack://wp/./packages/edit-post/build-module/components/meta-boxes/@wordpress/edit-post/src/components/meta-boxes/index.js","webpack://wp/external window [\"wp\",\"warning\"]","webpack://wp/./packages/edit-post/build-module/components/sidebar/plugin-document-setting-panel/@wordpress/edit-post/src/components/sidebar/plugin-document-setting-panel/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/plugin-sidebar/@wordpress/edit-post/src/components/sidebar/plugin-sidebar/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/template/@wordpress/edit-post/src/components/sidebar/template/actions.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/template/@wordpress/edit-post/src/components/sidebar/template/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/layout.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/template-summary/@wordpress/edit-post/src/components/sidebar/template-summary/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/settings-sidebar/@wordpress/edit-post/src/components/sidebar/settings-sidebar/index.js","webpack://wp/./packages/edit-post/build-module/components/welcome-guide/@wordpress/edit-post/src/components/welcome-guide/image.js","webpack://wp/./packages/edit-post/build-module/components/welcome-guide/@wordpress/edit-post/src/components/welcome-guide/default.js","webpack://wp/./packages/edit-post/build-module/components/welcome-guide/@wordpress/edit-post/src/components/welcome-guide/template.js","webpack://wp/./packages/edit-post/build-module/components/welcome-guide/@wordpress/edit-post/src/components/welcome-guide/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/plugin-post-publish-panel/@wordpress/edit-post/src/components/sidebar/plugin-post-publish-panel/index.js","webpack://wp/./packages/edit-post/build-module/components/sidebar/plugin-pre-publish-panel/@wordpress/edit-post/src/components/sidebar/plugin-pre-publish-panel/index.js","webpack://wp/./packages/edit-post/build-module/components/layout/@wordpress/edit-post/src/components/layout/actions-panel.js","webpack://wp/./packages/edit-post/build-module/components/layout/@wordpress/edit-post/src/components/layout/index.js","webpack://wp/./packages/edit-post/build-module/components/editor-initialization/@wordpress/edit-post/src/components/editor-initialization/index.js","webpack://wp/./packages/edit-post/build-module/components/editor-initialization/@wordpress/edit-post/src/components/editor-initialization/listener-hooks.js","webpack://wp/./packages/edit-post/build-module/@wordpress/edit-post/src/editor.js","webpack://wp/./packages/edit-post/build-module/components/block-settings-menu/@wordpress/edit-post/src/components/block-settings-menu/plugin-block-settings-menu-item.js","webpack://wp/./packages/edit-post/build-module/components/header/plugin-more-menu-item/@wordpress/edit-post/src/components/header/plugin-more-menu-item/index.js","webpack://wp/./packages/edit-post/build-module/components/header/plugin-sidebar-more-menu-item/@wordpress/edit-post/src/components/header/plugin-sidebar-more-menu-item/index.js","webpack://wp/./packages/edit-post/build-module/@wordpress/edit-post/src/index.js"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockLibrary\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst check = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M16.7 7.1l-6.3 8.5-3.3-2.5-.9 1.2 4.5 3.4L17.9 8z\" />\n\t</SVG>\n);\n\nexport default check;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst starFilled = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M11.776 4.454a.25.25 0 01.448 0l2.069 4.192a.25.25 0 00.188.137l4.626.672a.25.25 0 01.139.426l-3.348 3.263a.25.25 0 00-.072.222l.79 4.607a.25.25 0 01-.362.263l-4.138-2.175a.25.25 0 00-.232 0l-4.138 2.175a.25.25 0 01-.363-.263l.79-4.607a.25.25 0 00-.071-.222L4.754 9.881a.25.25 0 01.139-.426l4.626-.672a.25.25 0 00.188-.137l2.069-4.192z\" />\n\t</SVG>\n);\n\nexport default starFilled;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst starEmpty = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M9.706 8.646a.25.25 0 01-.188.137l-4.626.672a.25.25 0 00-.139.427l3.348 3.262a.25.25 0 01.072.222l-.79 4.607a.25.25 0 00.362.264l4.138-2.176a.25.25 0 01.233 0l4.137 2.175a.25.25 0 00.363-.263l-.79-4.607a.25.25 0 01.072-.222l3.347-3.262a.25.25 0 00-.139-.427l-4.626-.672a.25.25 0 01-.188-.137l-2.069-4.192a.25.25 0 00-.448 0L9.706 8.646zM12 7.39l-.948 1.921a1.75 1.75 0 01-1.317.957l-2.12.308 1.534 1.495c.412.402.6.982.503 1.55l-.362 2.11 1.896-.997a1.75 1.75 0 011.629 0l1.895.997-.362-2.11a1.75 1.75 0 01.504-1.55l1.533-1.495-2.12-.308a1.75 1.75 0 01-1.317-.957L12 7.39z\"\n\t\t\tclipRule=\"evenodd\"\n\t\t/>\n\t</SVG>\n);\n\nexport default starEmpty;\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"viewport\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst closeSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\" />\n\t</SVG>\n);\n\nexport default closeSmall;\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer to keep tract of the active area per scope.\n *\n * @param {boolean} state           Previous state.\n * @param {Object}  action          Action object.\n * @param {string}  action.type     Action type.\n * @param {string}  action.itemType Type of item.\n * @param {string}  action.scope    Item scope.\n * @param {string}  action.item     Item name.\n *\n * @return {Object} Updated state.\n */\nexport function singleEnableItems(\n\tstate = {},\n\t{ type, itemType, scope, item }\n) {\n\tif ( type !== 'SET_SINGLE_ENABLE_ITEM' || ! itemType || ! scope ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\t...state,\n\t\t[ itemType ]: {\n\t\t\t...state[ itemType ],\n\t\t\t[ scope ]: item || null,\n\t\t},\n\t};\n}\n\n/**\n * Reducer keeping track of the \"pinned\" items per scope.\n *\n * @param {boolean} state           Previous state.\n * @param {Object}  action          Action object.\n * @param {string}  action.type     Action type.\n * @param {string}  action.itemType Type of item.\n * @param {string}  action.scope    Item scope.\n * @param {string}  action.item     Item name.\n * @param {boolean} action.isEnable Whether the item is pinned.\n *\n * @return {Object} Updated state.\n */\nexport function multipleEnableItems(\n\tstate = {},\n\t{ type, itemType, scope, item, isEnable }\n) {\n\tif (\n\t\ttype !== 'SET_MULTIPLE_ENABLE_ITEM' ||\n\t\t! itemType ||\n\t\t! scope ||\n\t\t! item ||\n\t\tget( state, [ itemType, scope, item ] ) === isEnable\n\t) {\n\t\treturn state;\n\t}\n\tconst currentTypeState = state[ itemType ] || {};\n\tconst currentScopeState = currentTypeState[ scope ] || {};\n\n\treturn {\n\t\t...state,\n\t\t[ itemType ]: {\n\t\t\t...currentTypeState,\n\t\t\t[ scope ]: {\n\t\t\t\t...currentScopeState,\n\t\t\t\t[ item ]: isEnable || false,\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Reducer returning the defaults for user preferences.\n *\n * This is kept intentionally separate from the preferences\n * themselves so that defaults are not persisted.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const preferenceDefaults = combineReducers( {\n\tfeatures( state = {}, action ) {\n\t\tif ( action.type === 'SET_FEATURE_DEFAULTS' ) {\n\t\t\tconst { scope, defaults } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ scope ]: {\n\t\t\t\t\t...state[ scope ],\n\t\t\t\t\t...defaults,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn state;\n\t},\n} );\n\n/**\n * Reducer returning the user preferences.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const preferences = combineReducers( {\n\tfeatures( state = {}, action ) {\n\t\tif ( action.type === 'SET_FEATURE_VALUE' ) {\n\t\t\tconst { scope, featureName, value } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ scope ]: {\n\t\t\t\t\t...state[ scope ],\n\t\t\t\t\t[ featureName ]: value,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn state;\n\t},\n} );\n\nconst enableItems = combineReducers( {\n\tsingleEnableItems,\n\tmultipleEnableItems,\n} );\n\nexport default combineReducers( {\n\tenableItems,\n\tpreferenceDefaults,\n\tpreferences,\n} );\n","/**\n * Returns an action object used in signalling that an active area should be changed.\n *\n * @param {string} itemType Type of item.\n * @param {string} scope    Item scope.\n * @param {string} item     Item identifier.\n *\n * @return {Object} Action object.\n */\nfunction setSingleEnableItem( itemType, scope, item ) {\n\treturn {\n\t\ttype: 'SET_SINGLE_ENABLE_ITEM',\n\t\titemType,\n\t\tscope,\n\t\titem,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a complementary item should be enabled.\n *\n * @param {string} scope Complementary area scope.\n * @param {string} area  Area identifier.\n *\n * @return {Object} Action object.\n */\nexport function enableComplementaryArea( scope, area ) {\n\treturn setSingleEnableItem( 'complementaryArea', scope, area );\n}\n\n/**\n * Returns an action object used in signalling that the complementary area of a given scope should be disabled.\n *\n * @param {string} scope Complementary area scope.\n *\n * @return {Object} Action object.\n */\nexport function disableComplementaryArea( scope ) {\n\treturn setSingleEnableItem( 'complementaryArea', scope, undefined );\n}\n\n/**\n * Returns an action object to make an area enabled/disabled.\n *\n * @param {string}  itemType Type of item.\n * @param {string}  scope    Item scope.\n * @param {string}  item     Item identifier.\n * @param {boolean} isEnable Boolean indicating if an area should be pinned or not.\n *\n * @return {Object} Action object.\n */\nfunction setMultipleEnableItem( itemType, scope, item, isEnable ) {\n\treturn {\n\t\ttype: 'SET_MULTIPLE_ENABLE_ITEM',\n\t\titemType,\n\t\tscope,\n\t\titem,\n\t\tisEnable,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that an item should be pinned.\n *\n * @param {string} scope  Item scope.\n * @param {string} itemId Item identifier.\n *\n * @return {Object} Action object.\n */\nexport function pinItem( scope, itemId ) {\n\treturn setMultipleEnableItem( 'pinnedItems', scope, itemId, true );\n}\n\n/**\n * Returns an action object used in signalling that an item should be unpinned.\n *\n * @param {string} scope  Item scope.\n * @param {string} itemId Item identifier.\n *\n * @return {Object} Action object.\n */\nexport function unpinItem( scope, itemId ) {\n\treturn setMultipleEnableItem( 'pinnedItems', scope, itemId, false );\n}\n\n/**\n * Returns an action object used in signalling that a feature should be toggled.\n *\n * @param {string} scope       The feature scope (e.g. core/edit-post).\n * @param {string} featureName The feature name.\n */\nexport function toggleFeature( scope, featureName ) {\n\treturn function ( { select, dispatch } ) {\n\t\tconst currentValue = select.isFeatureActive( scope, featureName );\n\t\tdispatch.setFeatureValue( scope, featureName, ! currentValue );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a feature should be set to\n * a true or false value\n *\n * @param {string}  scope       The feature scope (e.g. core/edit-post).\n * @param {string}  featureName The feature name.\n * @param {boolean} value       The value to set.\n *\n * @return {Object} Action object.\n */\nexport function setFeatureValue( scope, featureName, value ) {\n\treturn {\n\t\ttype: 'SET_FEATURE_VALUE',\n\t\tscope,\n\t\tfeatureName,\n\t\tvalue: !! value,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that defaults should be set for features.\n *\n * @param {string}                  scope    The feature scope (e.g. core/edit-post).\n * @param {Object<string, boolean>} defaults A key/value map of feature names to values.\n *\n * @return {Object} Action object.\n */\nexport function setFeatureDefaults( scope, defaults ) {\n\treturn {\n\t\ttype: 'SET_FEATURE_DEFAULTS',\n\t\tscope,\n\t\tdefaults,\n\t};\n}\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * Returns the item that is enabled in a given scope.\n *\n * @param {Object} state    Global application state.\n * @param {string} itemType Type of item.\n * @param {string} scope    Item scope.\n *\n * @return {?string|null} The item that is enabled in the passed scope and type.\n */\nfunction getSingleEnableItem( state, itemType, scope ) {\n\treturn get( state.enableItems.singleEnableItems, [ itemType, scope ] );\n}\n\n/**\n * Returns the complementary area that is active in a given scope.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Item scope.\n *\n * @return {string} The complementary area that is active in the given scope.\n */\nexport function getActiveComplementaryArea( state, scope ) {\n\treturn getSingleEnableItem( state, 'complementaryArea', scope );\n}\n\n/**\n * Returns a boolean indicating if an item is enabled or not in a given scope.\n *\n * @param {Object} state    Global application state.\n * @param {string} itemType Type of item.\n * @param {string} scope    Scope.\n * @param {string} item     Item to check.\n *\n * @return {boolean|undefined} True if the item is enabled, false otherwise if the item is explicitly disabled, and undefined if there is no information for that item.\n */\nfunction isMultipleEnabledItemEnabled( state, itemType, scope, item ) {\n\treturn get( state.enableItems.multipleEnableItems, [\n\t\titemType,\n\t\tscope,\n\t\titem,\n\t] );\n}\n\n/**\n * Returns a boolean indicating if an item is pinned or not.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Scope.\n * @param {string} item  Item to check.\n *\n * @return {boolean} True if the item is pinned and false otherwise.\n */\nexport function isItemPinned( state, scope, item ) {\n\treturn (\n\t\tisMultipleEnabledItemEnabled( state, 'pinnedItems', scope, item ) !==\n\t\tfalse\n\t);\n}\n\n/**\n * Returns a boolean indicating whether a feature is active for a particular\n * scope.\n *\n * @param {Object} state       The store state.\n * @param {string} scope       The scope of the feature (e.g. core/edit-post).\n * @param {string} featureName The name of the feature.\n *\n * @return {boolean} Is the feature enabled?\n */\nexport function isFeatureActive( state, scope, featureName ) {\n\tconst featureValue = state.preferences.features[ scope ]?.[ featureName ];\n\tconst defaultedFeatureValue =\n\t\tfeatureValue !== undefined\n\t\t\t? featureValue\n\t\t\t: state.preferenceDefaults.features[ scope ]?.[ featureName ];\n\n\treturn !! defaultedFeatureValue;\n}\n","/**\n * The identifier for the data store.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/interface';\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { STORE_NAME } from './constants';\n\nconst storeConfig = {\n\treducer,\n\tactions,\n\tselectors,\n\tpersist: [ 'enableItems', 'preferences' ],\n};\n\n/**\n * Store definition for the interface namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig );\n\n// Once we build a more generic persistence plugin that works across types of stores\n// we'd be able to replace this with a register call.\nregisterStore( STORE_NAME, storeConfig );\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","/**\n * WordPress dependencies\n */\nimport { withPluginContext } from '@wordpress/plugins';\n\nexport default withPluginContext( ( context, ownProps ) => {\n\treturn {\n\t\ticon: ownProps.icon || context.icon,\n\t\tidentifier:\n\t\t\townProps.identifier || `${ context.name }/${ ownProps.name }`,\n\t};\n} );\n","/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as interfaceStore } from '../../store';\nimport complementaryAreaContext from '../complementary-area-context';\n\nfunction ComplementaryAreaToggle( {\n\tas = Button,\n\tscope,\n\tidentifier,\n\ticon,\n\tselectedIcon,\n\t...props\n} ) {\n\tconst ComponentToUse = as;\n\tconst isSelected = useSelect(\n\t\t( select ) =>\n\t\t\tselect( interfaceStore ).getActiveComplementaryArea( scope ) ===\n\t\t\tidentifier,\n\t\t[ identifier ]\n\t);\n\tconst { enableComplementaryArea, disableComplementaryArea } = useDispatch(\n\t\tinterfaceStore\n\t);\n\treturn (\n\t\t<ComponentToUse\n\t\t\ticon={ selectedIcon && isSelected ? selectedIcon : icon }\n\t\t\tonClick={ () => {\n\t\t\t\tif ( isSelected ) {\n\t\t\t\t\tdisableComplementaryArea( scope );\n\t\t\t\t} else {\n\t\t\t\t\tenableComplementaryArea( scope, identifier );\n\t\t\t\t}\n\t\t\t} }\n\t\t\t{ ...omit( props, [ 'name' ] ) }\n\t\t/>\n\t);\n}\n\nexport default complementaryAreaContext( ComplementaryAreaToggle );\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { closeSmall } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\n\nconst ComplementaryAreaHeader = ( {\n\tsmallScreenTitle,\n\tchildren,\n\tclassName,\n\ttoggleButtonProps,\n} ) => {\n\tconst toggleButton = (\n\t\t<ComplementaryAreaToggle icon={ closeSmall } { ...toggleButtonProps } />\n\t);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"components-panel__header interface-complementary-area-header__small\">\n\t\t\t\t{ smallScreenTitle && (\n\t\t\t\t\t<span className=\"interface-complementary-area-header__small-title\">\n\t\t\t\t\t\t{ smallScreenTitle }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\t\t\t\t{ toggleButton }\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={ classnames(\n\t\t\t\t\t'components-panel__header',\n\t\t\t\t\t'interface-complementary-area-header',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\ttabIndex={ -1 }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t\t{ toggleButton }\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ComplementaryAreaHeader;\n","/**\n * External dependencies\n */\nimport { isEmpty, noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { ButtonGroup, Button, Slot, Fill } from '@wordpress/components';\nimport { Children } from '@wordpress/element';\n\nfunction ActionItemSlot( {\n\tname,\n\tas: Component = ButtonGroup,\n\tfillProps = {},\n\tbubblesVirtually,\n\t...props\n} ) {\n\treturn (\n\t\t<Slot\n\t\t\tname={ name }\n\t\t\tbubblesVirtually={ bubblesVirtually }\n\t\t\tfillProps={ fillProps }\n\t\t>\n\t\t\t{ ( fills ) => {\n\t\t\t\tif ( isEmpty( Children.toArray( fills ) ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Special handling exists for backward compatibility.\n\t\t\t\t// It ensures that menu items created by plugin authors aren't\n\t\t\t\t// duplicated with automatically injected menu items coming\n\t\t\t\t// from pinnable plugin sidebars.\n\t\t\t\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t\t\t\tconst initializedByPlugins = [];\n\t\t\t\tChildren.forEach(\n\t\t\t\t\tfills,\n\t\t\t\t\t( {\n\t\t\t\t\t\tprops: { __unstableExplicitMenuItem, __unstableTarget },\n\t\t\t\t\t} ) => {\n\t\t\t\t\t\tif ( __unstableTarget && __unstableExplicitMenuItem ) {\n\t\t\t\t\t\t\tinitializedByPlugins.push( __unstableTarget );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst children = Children.map( fills, ( child ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! child.props.__unstableExplicitMenuItem &&\n\t\t\t\t\t\tinitializedByPlugins.includes(\n\t\t\t\t\t\t\tchild.props.__unstableTarget\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn child;\n\t\t\t\t} );\n\n\t\t\t\treturn <Component { ...props }>{ children }</Component>;\n\t\t\t} }\n\t\t</Slot>\n\t);\n}\n\nfunction ActionItem( { name, as: Component = Button, onClick, ...props } ) {\n\treturn (\n\t\t<Fill name={ name }>\n\t\t\t{ ( { onClick: fpOnClick } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Component\n\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\tonClick || fpOnClick\n\t\t\t\t\t\t\t\t? ( ...args ) => {\n\t\t\t\t\t\t\t\t\t\t( onClick || noop )( ...args );\n\t\t\t\t\t\t\t\t\t\t( fpOnClick || noop )( ...args );\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} }\n\t\t</Fill>\n\t);\n}\n\nActionItem.Slot = ActionItemSlot;\n\nexport default ActionItem;\n","/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { check } from '@wordpress/icons';\nimport { MenuItem } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\nimport ActionItem from '../action-item';\n\nconst PluginsMenuItem = ( props ) => (\n\t// Menu item is marked with unstable prop for backward compatibility.\n\t// They are removed so they don't leak to DOM elements.\n\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t<MenuItem\n\t\t{ ...omit( props, [\n\t\t\t'__unstableExplicitMenuItem',\n\t\t\t'__unstableTarget',\n\t\t] ) }\n\t/>\n);\n\nexport default function ComplementaryAreaMoreMenuItem( {\n\tscope,\n\ttarget,\n\t__unstableExplicitMenuItem,\n\t...props\n} ) {\n\treturn (\n\t\t<ComplementaryAreaToggle\n\t\t\tas={ ( toggleProps ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ActionItem\n\t\t\t\t\t\t__unstableExplicitMenuItem={\n\t\t\t\t\t\t\t__unstableExplicitMenuItem\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__unstableTarget={ `${ scope }/${ target }` }\n\t\t\t\t\t\tas={ PluginsMenuItem }\n\t\t\t\t\t\tname={ `${ scope }/plugin-more-menu` }\n\t\t\t\t\t\t{ ...toggleProps }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} }\n\t\t\trole=\"menuitemcheckbox\"\n\t\t\tselectedIcon={ check }\n\t\t\tname={ target }\n\t\t\tscope={ scope }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * External dependencies\n */\nimport { isEmpty } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Slot, Fill } from '@wordpress/components';\n\nfunction PinnedItems( { scope, ...props } ) {\n\treturn <Fill name={ `PinnedItems/${ scope }` } { ...props } />;\n}\n\nfunction PinnedItemsSlot( { scope, className, ...props } ) {\n\treturn (\n\t\t<Slot name={ `PinnedItems/${ scope }` } { ...props }>\n\t\t\t{ ( fills ) =>\n\t\t\t\t! isEmpty( fills ) && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t\t'interface-pinned-items'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ fills }\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</Slot>\n\t);\n}\n\nPinnedItems.Slot = PinnedItemsSlot;\n\nexport default PinnedItems;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Button, Panel, Slot, Fill } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { check, starEmpty, starFilled } from '@wordpress/icons';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { store as viewportStore } from '@wordpress/viewport';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaHeader from '../complementary-area-header';\nimport ComplementaryAreaMoreMenuItem from '../complementary-area-more-menu-item';\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\nimport withComplementaryAreaContext from '../complementary-area-context';\nimport PinnedItems from '../pinned-items';\nimport { store as interfaceStore } from '../../store';\n\nfunction ComplementaryAreaSlot( { scope, ...props } ) {\n\treturn <Slot name={ `ComplementaryArea/${ scope }` } { ...props } />;\n}\n\nfunction ComplementaryAreaFill( { scope, children, className } ) {\n\treturn (\n\t\t<Fill name={ `ComplementaryArea/${ scope }` }>\n\t\t\t<div className={ className }>{ children }</div>\n\t\t</Fill>\n\t);\n}\n\nfunction useAdjustComplementaryListener(\n\tscope,\n\tidentifier,\n\tactiveArea,\n\tisActive,\n\tisSmall\n) {\n\tconst previousIsSmall = useRef( false );\n\tconst shouldOpenWhenNotSmall = useRef( false );\n\tconst { enableComplementaryArea, disableComplementaryArea } = useDispatch(\n\t\tinterfaceStore\n\t);\n\tuseEffect( () => {\n\t\t// If the complementary area is active and the editor is switching from a big to a small window size.\n\t\tif ( isActive && isSmall && ! previousIsSmall.current ) {\n\t\t\t// Disable the complementary area.\n\t\t\tdisableComplementaryArea( scope );\n\t\t\t// Flag the complementary area to be reopened when the window size goes from small to big.\n\t\t\tshouldOpenWhenNotSmall.current = true;\n\t\t} else if (\n\t\t\t// If there is a flag indicating the complementary area should be enabled when we go from small to big window size\n\t\t\t// and we are going from a small to big window size.\n\t\t\tshouldOpenWhenNotSmall.current &&\n\t\t\t! isSmall &&\n\t\t\tpreviousIsSmall.current\n\t\t) {\n\t\t\t// Remove the flag indicating the complementary area should be enabled.\n\t\t\tshouldOpenWhenNotSmall.current = false;\n\t\t\t// Enable the complementary area.\n\t\t\tenableComplementaryArea( scope, identifier );\n\t\t} else if (\n\t\t\t// If the flag is indicating the current complementary should be reopened but another complementary area becomes active,\n\t\t\t// remove the flag.\n\t\t\tshouldOpenWhenNotSmall.current &&\n\t\t\tactiveArea &&\n\t\t\tactiveArea !== identifier\n\t\t) {\n\t\t\tshouldOpenWhenNotSmall.current = false;\n\t\t}\n\t\tif ( isSmall !== previousIsSmall.current ) {\n\t\t\tpreviousIsSmall.current = isSmall;\n\t\t}\n\t}, [ isActive, isSmall, scope, identifier, activeArea ] );\n}\n\nfunction ComplementaryArea( {\n\tchildren,\n\tclassName,\n\tcloseLabel = __( 'Close plugin' ),\n\tidentifier,\n\theader,\n\theaderClassName,\n\ticon,\n\tisPinnable = true,\n\tpanelClassName,\n\tscope,\n\tname,\n\tsmallScreenTitle,\n\ttitle,\n\ttoggleShortcut,\n\tisActiveByDefault,\n\tshowIconLabels = false,\n} ) {\n\tconst { isActive, isPinned, activeArea, isSmall, isLarge } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getActiveComplementaryArea, isItemPinned } = select(\n\t\t\t\tinterfaceStore\n\t\t\t);\n\t\t\tconst _activeArea = getActiveComplementaryArea( scope );\n\t\t\treturn {\n\t\t\t\tisActive: _activeArea === identifier,\n\t\t\t\tisPinned: isItemPinned( scope, identifier ),\n\t\t\t\tactiveArea: _activeArea,\n\t\t\t\tisSmall: select( viewportStore ).isViewportMatch( '< medium' ),\n\t\t\t\tisLarge: select( viewportStore ).isViewportMatch( 'large' ),\n\t\t\t};\n\t\t},\n\t\t[ identifier, scope ]\n\t);\n\tuseAdjustComplementaryListener(\n\t\tscope,\n\t\tidentifier,\n\t\tactiveArea,\n\t\tisActive,\n\t\tisSmall\n\t);\n\tconst {\n\t\tenableComplementaryArea,\n\t\tdisableComplementaryArea,\n\t\tpinItem,\n\t\tunpinItem,\n\t} = useDispatch( interfaceStore );\n\n\tuseEffect( () => {\n\t\tif ( isActiveByDefault && activeArea === undefined && ! isSmall ) {\n\t\t\tenableComplementaryArea( scope, identifier );\n\t\t}\n\t}, [ activeArea, isActiveByDefault, scope, identifier, isSmall ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ isPinnable && (\n\t\t\t\t<PinnedItems scope={ scope }>\n\t\t\t\t\t{ isPinned && (\n\t\t\t\t\t\t<ComplementaryAreaToggle\n\t\t\t\t\t\t\tscope={ scope }\n\t\t\t\t\t\t\tidentifier={ identifier }\n\t\t\t\t\t\t\tisPressed={\n\t\t\t\t\t\t\t\tisActive && ( ! showIconLabels || isLarge )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-expanded={ isActive }\n\t\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\t\ticon={ showIconLabels ? check : icon }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PinnedItems>\n\t\t\t) }\n\t\t\t{ name && isPinnable && (\n\t\t\t\t<ComplementaryAreaMoreMenuItem\n\t\t\t\t\ttarget={ name }\n\t\t\t\t\tscope={ scope }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t>\n\t\t\t\t\t{ title }\n\t\t\t\t</ComplementaryAreaMoreMenuItem>\n\t\t\t) }\n\t\t\t{ isActive && (\n\t\t\t\t<ComplementaryAreaFill\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'interface-complementary-area',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tscope={ scope }\n\t\t\t\t>\n\t\t\t\t\t<ComplementaryAreaHeader\n\t\t\t\t\t\tclassName={ headerClassName }\n\t\t\t\t\t\tcloseLabel={ closeLabel }\n\t\t\t\t\t\tonClose={ () => disableComplementaryArea( scope ) }\n\t\t\t\t\t\tsmallScreenTitle={ smallScreenTitle }\n\t\t\t\t\t\ttoggleButtonProps={ {\n\t\t\t\t\t\t\tlabel: closeLabel,\n\t\t\t\t\t\t\tshortcut: toggleShortcut,\n\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ header || (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<strong>{ title }</strong>\n\t\t\t\t\t\t\t\t{ isPinnable && (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"interface-complementary-area__pin-unpin-item\"\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\tisPinned ? starFilled : starEmpty\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\tisPinned\n\t\t\t\t\t\t\t\t\t\t\t\t? __( 'Unpin from toolbar' )\n\t\t\t\t\t\t\t\t\t\t\t\t: __( 'Pin to toolbar' )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\t\t( isPinned ? unpinItem : pinItem )(\n\t\t\t\t\t\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t\t\t\t\t\t\tidentifier\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tisPressed={ isPinned }\n\t\t\t\t\t\t\t\t\t\taria-expanded={ isPinned }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ComplementaryAreaHeader>\n\t\t\t\t\t<Panel className={ panelClassName }>{ children }</Panel>\n\t\t\t\t</ComplementaryAreaFill>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nconst ComplementaryAreaWrapped = withComplementaryAreaContext(\n\tComplementaryArea\n);\n\nComplementaryAreaWrapped.Slot = ComplementaryAreaSlot;\n\nexport default ComplementaryAreaWrapped;\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\n\nconst FullscreenMode = ( { isActive } ) => {\n\tuseEffect( () => {\n\t\tlet isSticky = false;\n\t\t// `is-fullscreen-mode` is set in PHP as a body class by Gutenberg, and this causes\n\t\t// `sticky-menu` to be applied by WordPress and prevents the admin menu being scrolled\n\t\t// even if `is-fullscreen-mode` is then removed. Let's remove `sticky-menu` here as\n\t\t// a consequence of the FullscreenMode setup\n\t\tif ( document.body.classList.contains( 'sticky-menu' ) ) {\n\t\t\tisSticky = true;\n\t\t\tdocument.body.classList.remove( 'sticky-menu' );\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( isSticky ) {\n\t\t\t\tdocument.body.classList.add( 'sticky-menu' );\n\t\t\t}\n\t\t};\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( isActive ) {\n\t\t\tdocument.body.classList.add( 'is-fullscreen-mode' );\n\t\t} else {\n\t\t\tdocument.body.classList.remove( 'is-fullscreen-mode' );\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( isActive ) {\n\t\t\t\tdocument.body.classList.remove( 'is-fullscreen-mode' );\n\t\t\t}\n\t\t};\n\t}, [ isActive ] );\n\n\treturn null;\n};\nexport default FullscreenMode;\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useEffect } from '@wordpress/element';\nimport { __unstableUseNavigateRegions as useNavigateRegions } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useMergeRefs } from '@wordpress/compose';\n\nfunction useHTMLClass( className ) {\n\tuseEffect( () => {\n\t\tconst element =\n\t\t\tdocument && document.querySelector( `html:not(.${ className })` );\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\t\telement.classList.toggle( className );\n\t\treturn () => {\n\t\t\telement.classList.toggle( className );\n\t\t};\n\t}, [ className ] );\n}\n\nfunction InterfaceSkeleton(\n\t{\n\t\tfooter,\n\t\theader,\n\t\tsidebar,\n\t\tsecondarySidebar,\n\t\tnotices,\n\t\tcontent,\n\t\tdrawer,\n\t\tactions,\n\t\tlabels,\n\t\tclassName,\n\t\tshortcuts,\n\t},\n\tref\n) {\n\tconst navigateRegionsProps = useNavigateRegions( shortcuts );\n\n\tuseHTMLClass( 'interface-interface-skeleton__html-container' );\n\n\tconst defaultLabels = {\n\t\t/* translators: accessibility text for the nav bar landmark region. */\n\t\tdrawer: __( 'Drawer' ),\n\t\t/* translators: accessibility text for the top bar landmark region. */\n\t\theader: __( 'Header' ),\n\t\t/* translators: accessibility text for the content landmark region. */\n\t\tbody: __( 'Content' ),\n\t\t/* translators: accessibility text for the secondary sidebar landmark region. */\n\t\tsecondarySidebar: __( 'Block Library' ),\n\t\t/* translators: accessibility text for the settings landmark region. */\n\t\tsidebar: __( 'Settings' ),\n\t\t/* translators: accessibility text for the publish landmark region. */\n\t\tactions: __( 'Publish' ),\n\t\t/* translators: accessibility text for the footer landmark region. */\n\t\tfooter: __( 'Footer' ),\n\t};\n\n\tconst mergedLabels = { ...defaultLabels, ...labels };\n\n\treturn (\n\t\t<div\n\t\t\t{ ...navigateRegionsProps }\n\t\t\tref={ useMergeRefs( [ ref, navigateRegionsProps.ref ] ) }\n\t\t\tclassName={ classnames(\n\t\t\t\tclassName,\n\t\t\t\t'interface-interface-skeleton',\n\t\t\t\tnavigateRegionsProps.className,\n\t\t\t\t!! footer && 'has-footer'\n\t\t\t) }\n\t\t>\n\t\t\t{ !! drawer && (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"interface-interface-skeleton__drawer\"\n\t\t\t\t\trole=\"region\"\n\t\t\t\t\taria-label={ mergedLabels.drawer }\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t>\n\t\t\t\t\t{ drawer }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<div className=\"interface-interface-skeleton__editor\">\n\t\t\t\t{ !! header && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"interface-interface-skeleton__header\"\n\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\taria-label={ mergedLabels.header }\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ header }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<div className=\"interface-interface-skeleton__body\">\n\t\t\t\t\t{ !! secondarySidebar && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__secondary-sidebar\"\n\t\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\t\taria-label={ mergedLabels.secondarySidebar }\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ secondarySidebar }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! notices && (\n\t\t\t\t\t\t<div className=\"interface-interface-skeleton__notices\">\n\t\t\t\t\t\t\t{ notices }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"interface-interface-skeleton__content\"\n\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\taria-label={ mergedLabels.body }\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ content }\n\t\t\t\t\t</div>\n\t\t\t\t\t{ !! sidebar && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__sidebar\"\n\t\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\t\taria-label={ mergedLabels.sidebar }\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ sidebar }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! actions && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__actions\"\n\t\t\t\t\t\t\trole=\"region\"\n\t\t\t\t\t\t\taria-label={ mergedLabels.actions }\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ actions }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{ !! footer && (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"interface-interface-skeleton__footer\"\n\t\t\t\t\trole=\"region\"\n\t\t\t\t\taria-label={ mergedLabels.footer }\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t>\n\t\t\t\t\t{ footer }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nexport default forwardRef( InterfaceSkeleton );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst moreVertical = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z\" />\n\t</SVG>\n);\n\nexport default moreVertical;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { DropdownMenu } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { moreVertical } from '@wordpress/icons';\n\nexport default function MoreMenuDropdown( {\n\tas: DropdownComponent = DropdownMenu,\n\tclassName,\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tlabel = __( 'Options' ),\n\tpopoverProps,\n\ttoggleProps,\n\tchildren,\n} ) {\n\treturn (\n\t\t<DropdownComponent\n\t\t\tclassName={ classnames(\n\t\t\t\t'interface-more-menu-dropdown',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\ticon={ moreVertical }\n\t\t\tlabel={ label }\n\t\t\tpopoverProps={ {\n\t\t\t\tposition: 'bottom left',\n\t\t\t\t...popoverProps,\n\t\t\t\tclassName: classnames(\n\t\t\t\t\t'interface-more-menu-dropdown__content',\n\t\t\t\t\tpopoverProps?.className\n\t\t\t\t),\n\t\t\t} }\n\t\t\ttoggleProps={ {\n\t\t\t\ttooltipPosition: 'bottom',\n\t\t\t\t...toggleProps,\n\t\t\t} }\n\t\t>\n\t\t\t{ ( onClose ) => children( onClose ) }\n\t\t</DropdownComponent>\n\t);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"a11y\"];","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { check } from '@wordpress/icons';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport { store as interfaceStore } from '../../store';\n\nexport default function MoreMenuFeatureToggle( {\n\tscope,\n\tlabel,\n\tinfo,\n\tmessageActivated,\n\tmessageDeactivated,\n\tshortcut,\n\tfeature,\n} ) {\n\tconst isActive = useSelect(\n\t\t( select ) =>\n\t\t\tselect( interfaceStore ).isFeatureActive( scope, feature ),\n\t\t[ feature ]\n\t);\n\tconst { toggleFeature } = useDispatch( interfaceStore );\n\tconst speakMessage = () => {\n\t\tif ( isActive ) {\n\t\t\tspeak( messageDeactivated || __( 'Feature deactivated' ) );\n\t\t} else {\n\t\t\tspeak( messageActivated || __( 'Feature activated' ) );\n\t\t}\n\t};\n\n\treturn (\n\t\t<MenuItem\n\t\t\ticon={ isActive && check }\n\t\t\tisSelected={ isActive }\n\t\t\tonClick={ () => {\n\t\t\t\ttoggleFeature( scope, feature );\n\t\t\t\tspeakMessage();\n\t\t\t} }\n\t\t\trole=\"menuitemcheckbox\"\n\t\t\tinfo={ info }\n\t\t\tshortcut={ shortcut }\n\t\t>\n\t\t\t{ label }\n\t\t</MenuItem>\n\t);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"mediaUtils\"];","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { MediaUpload } from '@wordpress/media-utils';\n\nconst replaceMediaUpload = () => MediaUpload;\n\naddFilter(\n\t'editor.MediaUpload',\n\t'core/edit-post/replace-media-upload',\n\treplaceMediaUpload\n);\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * External dependencies\n */\nimport { find } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tcreateBlock,\n\tfindTransform,\n\tgetBlockTransforms,\n\tgetBlockType,\n\thasBlockSupport,\n} from '@wordpress/blocks';\nimport { Button } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { Warning, store as blockEditorStore } from '@wordpress/block-editor';\nimport { addFilter } from '@wordpress/hooks';\nimport { __ } from '@wordpress/i18n';\nimport { compose, createHigherOrderComponent } from '@wordpress/compose';\n\nconst enhance = compose(\n\t/**\n\t * For blocks whose block type doesn't support `multiple`, provides the\n\t * wrapped component with `originalBlockClientId` -- a reference to the\n\t * first block of the same type in the content -- if and only if that\n\t * \"original\" block is not the current one. Thus, an inexisting\n\t * `originalBlockClientId` prop signals that the block is valid.\n\t *\n\t * @param {WPComponent} WrappedBlockEdit A filtered BlockEdit instance.\n\t *\n\t * @return {WPComponent} Enhanced component with merged state data props.\n\t */\n\twithSelect( ( select, block ) => {\n\t\tconst multiple = hasBlockSupport( block.name, 'multiple', true );\n\n\t\t// For block types with `multiple` support, there is no \"original\n\t\t// block\" to be found in the content, as the block itself is valid.\n\t\tif ( multiple ) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Otherwise, only pass `originalBlockClientId` if it refers to a different\n\t\t// block from the current one.\n\t\tconst blocks = select( blockEditorStore ).getBlocks();\n\t\tconst firstOfSameType = find(\n\t\t\tblocks,\n\t\t\t( { name } ) => block.name === name\n\t\t);\n\t\tconst isInvalid =\n\t\t\tfirstOfSameType && firstOfSameType.clientId !== block.clientId;\n\t\treturn {\n\t\t\toriginalBlockClientId: isInvalid && firstOfSameType.clientId,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { originalBlockClientId } ) => ( {\n\t\tselectFirst: () =>\n\t\t\tdispatch( blockEditorStore ).selectBlock( originalBlockClientId ),\n\t} ) )\n);\n\nconst withMultipleValidation = createHigherOrderComponent( ( BlockEdit ) => {\n\treturn enhance( ( { originalBlockClientId, selectFirst, ...props } ) => {\n\t\tif ( ! originalBlockClientId ) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n\t\tconst blockType = getBlockType( props.name );\n\t\tconst outboundType = getOutboundType( props.name );\n\n\t\treturn [\n\t\t\t<div key=\"invalid-preview\" style={ { minHeight: '60px' } }>\n\t\t\t\t<BlockEdit key=\"block-edit\" { ...props } />\n\t\t\t</div>,\n\t\t\t<Warning\n\t\t\t\tkey=\"multiple-use-warning\"\n\t\t\t\tactions={ [\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey=\"find-original\"\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tonClick={ selectFirst }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Find original' ) }\n\t\t\t\t\t</Button>,\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey=\"remove\"\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tonClick={ () => props.onReplace( [] ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Remove' ) }\n\t\t\t\t\t</Button>,\n\t\t\t\t\toutboundType && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkey=\"transform\"\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\tprops.onReplace(\n\t\t\t\t\t\t\t\t\tcreateBlock(\n\t\t\t\t\t\t\t\t\t\toutboundType.name,\n\t\t\t\t\t\t\t\t\t\tprops.attributes\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Transform into:' ) } { outboundType.title }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t),\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t<strong>{ blockType?.title }: </strong>\n\t\t\t\t{ __( 'This block can only be used once.' ) }\n\t\t\t</Warning>,\n\t\t];\n\t} );\n}, 'withMultipleValidation' );\n\n/**\n * Given a base block name, returns the default block type to which to offer\n * transforms.\n *\n * @param {string} blockName Base block name.\n *\n * @return {?Object} The chosen default block type.\n */\nfunction getOutboundType( blockName ) {\n\t// Grab the first outbound transform\n\tconst transform = findTransform(\n\t\tgetBlockTransforms( 'to', blockName ),\n\t\t( { type, blocks } ) => type === 'block' && blocks.length === 1 // What about when .length > 1?\n\t);\n\n\tif ( ! transform ) {\n\t\treturn null;\n\t}\n\n\treturn getBlockType( transform.blocks[ 0 ] );\n}\n\naddFilter(\n\t'editor.BlockEdit',\n\t'core/edit-post/validate-multiple-use/with-multiple-validation',\n\twithMultipleValidation\n);\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst external = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18.2 17c0 .7-.6 1.2-1.2 1.2H7c-.7 0-1.2-.6-1.2-1.2V7c0-.7.6-1.2 1.2-1.2h3.2V4.2H7C5.5 4.2 4.2 5.5 4.2 7v10c0 1.5 1.2 2.8 2.8 2.8h10c1.5 0 2.8-1.2 2.8-2.8v-3.6h-1.5V17zM14.9 3v1.5h3.7l-6.4 6.4 1.1 1.1 6.4-6.4v3.7h1.5V3h-6.3z\" />\n\t</SVG>\n);\n\nexport default external;\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { useCopyToClipboard } from '@wordpress/compose';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as editorStore } from '@wordpress/editor';\n\nexport default function CopyContentMenuItem() {\n\tconst { createNotice } = useDispatch( noticesStore );\n\tconst getText = useSelect(\n\t\t( select ) => () =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'content' ),\n\t\t[]\n\t);\n\n\tfunction onSuccess() {\n\t\tcreateNotice( 'info', __( 'All content copied.' ), {\n\t\t\tisDismissible: true,\n\t\t\ttype: 'snackbar',\n\t\t} );\n\t}\n\n\tconst ref = useCopyToClipboard( getText, onSuccess );\n\n\treturn <MenuItem ref={ ref }>{ __( 'Copy all content' ) }</MenuItem>;\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keycodes\"];","export const PREFERENCES_DEFAULTS = {\n\teditorMode: 'visual',\n\tpanels: {\n\t\t'post-status': {\n\t\t\topened: true,\n\t\t},\n\t},\n\thiddenBlockTypes: [],\n\tpreferredStyleVariations: {},\n\tlocalAutosaveInterval: 15,\n};\n","/**\n * External dependencies\n */\nimport { flow, get, includes, omit, union, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { PREFERENCES_DEFAULTS } from './defaults';\n\n/**\n * Higher-order reducer creator which provides the given initial state for the\n * original reducer.\n *\n * @param {*} initialState Initial state to provide to reducer.\n *\n * @return {Function} Higher-order reducer.\n */\nconst createWithInitialState = ( initialState ) => ( reducer ) => {\n\treturn ( state = initialState, action ) => reducer( state, action );\n};\n\n/**\n * Reducer returning the user preferences.\n *\n * @param {Object}  state                           Current state.\n * @param {string}  state.mode                      Current editor mode, either\n *                                                  \"visual\" or \"text\".\n * @param {boolean} state.isGeneralSidebarDismissed Whether general sidebar is\n *                                                  dismissed. False by default\n *                                                  or when closing general\n *                                                  sidebar, true when opening\n *                                                  sidebar.\n * @param {boolean} state.isSidebarOpened           Whether the sidebar is\n *                                                  opened or closed.\n * @param {Object}  state.panels                    The state of the different\n *                                                  sidebar panels.\n * @param {Object}  action                          Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const preferences = flow( [\n\tcombineReducers,\n\tcreateWithInitialState( PREFERENCES_DEFAULTS ),\n] )( {\n\tpanels( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'TOGGLE_PANEL_ENABLED': {\n\t\t\t\tconst { panelName } = action;\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ panelName ]: {\n\t\t\t\t\t\t...state[ panelName ],\n\t\t\t\t\t\tenabled: ! get( state, [ panelName, 'enabled' ], true ),\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcase 'TOGGLE_PANEL_OPENED': {\n\t\t\t\tconst { panelName } = action;\n\t\t\t\tconst isOpen =\n\t\t\t\t\tstate[ panelName ] === true ||\n\t\t\t\t\tget( state, [ panelName, 'opened' ], false );\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ panelName ]: {\n\t\t\t\t\t\t...state[ panelName ],\n\t\t\t\t\t\topened: ! isOpen,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t},\n\teditorMode( state, action ) {\n\t\tif ( action.type === 'SWITCH_MODE' ) {\n\t\t\treturn action.mode;\n\t\t}\n\n\t\treturn state;\n\t},\n\thiddenBlockTypes( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'SHOW_BLOCK_TYPES':\n\t\t\t\treturn without( state, ...action.blockNames );\n\n\t\t\tcase 'HIDE_BLOCK_TYPES':\n\t\t\t\treturn union( state, action.blockNames );\n\t\t}\n\n\t\treturn state;\n\t},\n\tpreferredStyleVariations( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'UPDATE_PREFERRED_STYLE_VARIATIONS': {\n\t\t\t\tif ( ! action.blockName ) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\tif ( ! action.blockStyle ) {\n\t\t\t\t\treturn omit( state, [ action.blockName ] );\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ action.blockName ]: action.blockStyle,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t},\n\tlocalAutosaveInterval( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'UPDATE_LOCAL_AUTOSAVE_INTERVAL':\n\t\t\t\treturn action.interval;\n\t\t}\n\n\t\treturn state;\n\t},\n} );\n\n/**\n * Reducer storing the list of all programmatically removed panels.\n *\n * @param {Array}  state  Current state.\n * @param {Object} action Action object.\n *\n * @return {Array} Updated state.\n */\nexport function removedPanels( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REMOVE_PANEL':\n\t\t\tif ( ! includes( state, action.panelName ) ) {\n\t\t\t\treturn [ ...state, action.panelName ];\n\t\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer for storing the name of the open modal, or null if no modal is open.\n *\n * @param {Object} state  Previous state.\n * @param {Object} action Action object containing the `name` of the modal\n *\n * @return {Object} Updated state\n */\nexport function activeModal( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_MODAL':\n\t\t\treturn action.name;\n\t\tcase 'CLOSE_MODAL':\n\t\t\treturn null;\n\t}\n\n\treturn state;\n}\n\nexport function publishSidebarActive( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_PUBLISH_SIDEBAR':\n\t\t\treturn true;\n\t\tcase 'CLOSE_PUBLISH_SIDEBAR':\n\t\t\treturn false;\n\t\tcase 'TOGGLE_PUBLISH_SIDEBAR':\n\t\t\treturn ! state;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the meta boxes isSaving state.\n * A \"true\" value means the meta boxes saving request is in-flight.\n *\n *\n * @param {boolean} state  Previous state.\n * @param {Object}  action Action Object.\n *\n * @return {Object} Updated state.\n */\nexport function isSavingMetaBoxes( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REQUEST_META_BOX_UPDATES':\n\t\t\treturn true;\n\t\tcase 'META_BOX_UPDATES_SUCCESS':\n\t\tcase 'META_BOX_UPDATES_FAILURE':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n/**\n * Reducer keeping track of the meta boxes per location.\n *\n * @param {boolean} state  Previous state.\n * @param {Object}  action Action Object.\n *\n * @return {Object} Updated state.\n */\nexport function metaBoxLocations( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_META_BOXES_PER_LOCATIONS':\n\t\t\treturn action.metaBoxesPerLocation;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning the editing canvas device type.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function deviceType( state = 'Desktop', action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_PREVIEW_DEVICE_TYPE':\n\t\t\treturn action.deviceType;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer to set the block inserter panel open or closed.\n *\n * Note: this reducer interacts with the list view panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function blockInserterPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen ? false : state;\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer to set the list view panel open or closed.\n *\n * Note: this reducer interacts with the inserter panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function listViewPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value ? false : state;\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer tracking whether the inserter is open.\n *\n * @param {boolean} state\n * @param {Object}  action\n */\nfunction isEditingTemplate( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_EDITING_TEMPLATE':\n\t\t\treturn action.value;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer tracking whether meta boxes are initialized.\n *\n * @param {boolean} state\n * @param {Object}  action\n *\n * @return {boolean} Updated state.\n */\nfunction metaBoxesInitialized( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'META_BOXES_INITIALIZED':\n\t\t\treturn true;\n\t}\n\treturn state;\n}\n\nconst metaBoxes = combineReducers( {\n\tisSaving: isSavingMetaBoxes,\n\tlocations: metaBoxLocations,\n\tinitialized: metaBoxesInitialized,\n} );\n\nexport default combineReducers( {\n\tactiveModal,\n\tmetaBoxes,\n\tpreferences,\n\tpublishSidebarActive,\n\tremovedPanels,\n\tdeviceType,\n\tblockInserterPanel,\n\tlistViewPanel,\n\tisEditingTemplate,\n} );\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","/**\n * Function returning the current Meta Boxes DOM Node in the editor\n * whether the meta box area is opened or not.\n * If the MetaBox Area is visible returns it, and returns the original container instead.\n *\n * @param {string} location Meta Box location.\n *\n * @return {string} HTML content.\n */\nexport const getMetaBoxContainer = ( location ) => {\n\tconst area = document.querySelector(\n\t\t`.edit-post-meta-boxes-area.is-${ location } .metabox-location-${ location }`\n\t);\n\tif ( area ) {\n\t\treturn area;\n\t}\n\n\treturn document.querySelector( '#metaboxes .metabox-location-' + location );\n};\n","/**\n * External dependencies\n */\nimport { castArray, reduce } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\nimport { speak } from '@wordpress/a11y';\nimport { store as interfaceStore } from '@wordpress/interface';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport { getMetaBoxContainer } from '../utils/meta-boxes';\nimport { store as editPostStore } from '.';\n\n/**\n * Returns an action object used in signalling that the user opened an editor sidebar.\n *\n * @param {?string} name Sidebar name to be opened.\n */\nexport const openGeneralSidebar = ( name ) => ( { registry } ) =>\n\tregistry\n\t\t.dispatch( interfaceStore )\n\t\t.enableComplementaryArea( editPostStore.name, name );\n\n/**\n * Returns an action object signalling that the user closed the sidebar.\n */\nexport const closeGeneralSidebar = () => ( { registry } ) =>\n\tregistry\n\t\t.dispatch( interfaceStore )\n\t\t.disableComplementaryArea( editPostStore.name );\n\n/**\n * Returns an action object used in signalling that the user opened a modal.\n *\n * @param {string} name A string that uniquely identifies the modal.\n *\n * @return {Object} Action object.\n */\nexport function openModal( name ) {\n\treturn {\n\t\ttype: 'OPEN_MODAL',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object signalling that the user closed a modal.\n *\n * @return {Object} Action object.\n */\nexport function closeModal() {\n\treturn {\n\t\ttype: 'CLOSE_MODAL',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user opened the publish\n * sidebar.\n *\n * @return {Object} Action object\n */\nexport function openPublishSidebar() {\n\treturn {\n\t\ttype: 'OPEN_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user closed the\n * publish sidebar.\n *\n * @return {Object} Action object.\n */\nexport function closePublishSidebar() {\n\treturn {\n\t\ttype: 'CLOSE_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user toggles the publish sidebar.\n *\n * @return {Object} Action object\n */\nexport function togglePublishSidebar() {\n\treturn {\n\t\ttype: 'TOGGLE_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used to enable or disable a panel in the editor.\n *\n * @param {string} panelName A string that identifies the panel to enable or disable.\n *\n * @return {Object} Action object.\n */\nexport function toggleEditorPanelEnabled( panelName ) {\n\treturn {\n\t\ttype: 'TOGGLE_PANEL_ENABLED',\n\t\tpanelName,\n\t};\n}\n\n/**\n * Returns an action object used to open or close a panel in the editor.\n *\n * @param {string} panelName A string that identifies the panel to open or close.\n *\n * @return {Object} Action object.\n */\nexport function toggleEditorPanelOpened( panelName ) {\n\treturn {\n\t\ttype: 'TOGGLE_PANEL_OPENED',\n\t\tpanelName,\n\t};\n}\n\n/**\n * Returns an action object used to remove a panel from the editor.\n *\n * @param {string} panelName A string that identifies the panel to remove.\n *\n * @return {Object} Action object.\n */\nexport function removeEditorPanel( panelName ) {\n\treturn {\n\t\ttype: 'REMOVE_PANEL',\n\t\tpanelName,\n\t};\n}\n\n/**\n * Triggers an action used to toggle a feature flag.\n *\n * @param {string} feature Feature name.\n */\nexport const toggleFeature = ( feature ) => ( { registry } ) =>\n\tregistry\n\t\t.dispatch( interfaceStore )\n\t\t.toggleFeature( 'core/edit-post', feature );\n\nexport const switchEditorMode = ( mode ) => ( { dispatch, registry } ) => {\n\tdispatch( {\n\t\ttype: 'SWITCH_MODE',\n\t\tmode,\n\t} );\n\n\t// Unselect blocks when we switch to the code editor.\n\tif ( mode !== 'visual' ) {\n\t\tregistry.dispatch( blockEditorStore ).clearSelectedBlock();\n\t}\n\n\tconst message =\n\t\tmode === 'visual'\n\t\t\t? __( 'Visual editor selected' )\n\t\t\t: __( 'Code editor selected' );\n\tspeak( message, 'assertive' );\n};\n\n/**\n * Triggers an action object used to toggle a plugin name flag.\n *\n * @param {string} pluginName Plugin name.\n */\nexport const togglePinnedPluginItem = ( pluginName ) => ( { registry } ) => {\n\tconst isPinned = registry\n\t\t.select( interfaceStore )\n\t\t.isItemPinned( 'core/edit-post', pluginName );\n\n\tregistry\n\t\t.dispatch( interfaceStore )\n\t\t[ isPinned ? 'unpinItem' : 'pinItem' ]( 'core/edit-post', pluginName );\n};\n\n/**\n * Returns an action object used in signalling that block types by the given\n * name(s) should be hidden.\n *\n * @param {string[]} blockNames Names of block types to hide.\n *\n * @return {Object} Action object.\n */\nexport function hideBlockTypes( blockNames ) {\n\treturn {\n\t\ttype: 'HIDE_BLOCK_TYPES',\n\t\tblockNames: castArray( blockNames ),\n\t};\n}\n\n/**\n * Returns an action object used in signaling that a style should be auto-applied when a block is created.\n *\n * @param {string}  blockName  Name of the block.\n * @param {?string} blockStyle Name of the style that should be auto applied. If undefined, the \"auto apply\" setting of the block is removed.\n *\n * @return {Object} Action object.\n */\nexport function updatePreferredStyleVariations( blockName, blockStyle ) {\n\treturn {\n\t\ttype: 'UPDATE_PREFERRED_STYLE_VARIATIONS',\n\t\tblockName,\n\t\tblockStyle,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the editor should attempt\n * to locally autosave the current post every `interval` seconds.\n *\n * @param {number} interval The new interval, in seconds.\n * @return {Object} Action object.\n */\nexport function __experimentalUpdateLocalAutosaveInterval( interval ) {\n\treturn {\n\t\ttype: 'UPDATE_LOCAL_AUTOSAVE_INTERVAL',\n\t\tinterval,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block types by the given\n * name(s) should be shown.\n *\n * @param {string[]} blockNames Names of block types to show.\n *\n * @return {Object} Action object.\n */\nexport function showBlockTypes( blockNames ) {\n\treturn {\n\t\ttype: 'SHOW_BLOCK_TYPES',\n\t\tblockNames: castArray( blockNames ),\n\t};\n}\n\n/**\n * Returns an action object used in signaling\n * what Meta boxes are available in which location.\n *\n * @param {Object} metaBoxesPerLocation Meta boxes per location.\n */\nexport const setAvailableMetaBoxesPerLocation = ( metaBoxesPerLocation ) => ( {\n\tdispatch,\n} ) =>\n\tdispatch( {\n\t\ttype: 'SET_META_BOXES_PER_LOCATIONS',\n\t\tmetaBoxesPerLocation,\n\t} );\n\n/**\n * Update a metabox.\n */\nexport const requestMetaBoxUpdates = () => async ( {\n\tregistry,\n\tselect,\n\tdispatch,\n} ) => {\n\tdispatch( {\n\t\ttype: 'REQUEST_META_BOX_UPDATES',\n\t} );\n\n\t// Saves the wp_editor fields\n\tif ( window.tinyMCE ) {\n\t\twindow.tinyMCE.triggerSave();\n\t}\n\n\t// Additional data needed for backward compatibility.\n\t// If we do not provide this data, the post will be overridden with the default values.\n\tconst post = registry.select( editorStore ).getCurrentPost();\n\tconst additionalData = [\n\t\tpost.comment_status ? [ 'comment_status', post.comment_status ] : false,\n\t\tpost.ping_status ? [ 'ping_status', post.ping_status ] : false,\n\t\tpost.sticky ? [ 'sticky', post.sticky ] : false,\n\t\tpost.author ? [ 'post_author', post.author ] : false,\n\t].filter( Boolean );\n\n\t// We gather all the metaboxes locations data and the base form data\n\tconst baseFormData = new window.FormData(\n\t\tdocument.querySelector( '.metabox-base-form' )\n\t);\n\tconst activeMetaBoxLocations = select.getActiveMetaBoxLocations();\n\tconst formDataToMerge = [\n\t\tbaseFormData,\n\t\t...activeMetaBoxLocations.map(\n\t\t\t( location ) =>\n\t\t\t\tnew window.FormData( getMetaBoxContainer( location ) )\n\t\t),\n\t];\n\n\t// Merge all form data objects into a single one.\n\tconst formData = reduce(\n\t\tformDataToMerge,\n\t\t( memo, currentFormData ) => {\n\t\t\tfor ( const [ key, value ] of currentFormData ) {\n\t\t\t\tmemo.append( key, value );\n\t\t\t}\n\t\t\treturn memo;\n\t\t},\n\t\tnew window.FormData()\n\t);\n\tadditionalData.forEach( ( [ key, value ] ) =>\n\t\tformData.append( key, value )\n\t);\n\n\ttry {\n\t\t// Save the metaboxes\n\t\tawait apiFetch( {\n\t\t\turl: window._wpMetaBoxUrl,\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData,\n\t\t\tparse: false,\n\t\t} );\n\t\tdispatch.metaBoxUpdatesSuccess();\n\t} catch {\n\t\tdispatch.metaBoxUpdatesFailure();\n\t}\n};\n\n/**\n * Returns an action object used to signal a successful meta box update.\n *\n * @return {Object} Action object.\n */\nexport function metaBoxUpdatesSuccess() {\n\treturn {\n\t\ttype: 'META_BOX_UPDATES_SUCCESS',\n\t};\n}\n\n/**\n * Returns an action object used to signal a failed meta box update.\n *\n * @return {Object} Action object.\n */\nexport function metaBoxUpdatesFailure() {\n\treturn {\n\t\ttype: 'META_BOX_UPDATES_FAILURE',\n\t};\n}\n\n/**\n * Returns an action object used to toggle the width of the editing canvas.\n *\n * @param {string} deviceType\n *\n * @return {Object} Action object.\n */\nexport function __experimentalSetPreviewDeviceType( deviceType ) {\n\treturn {\n\t\ttype: 'SET_PREVIEW_DEVICE_TYPE',\n\t\tdeviceType,\n\t};\n}\n\n/**\n * Returns an action object used to open/close the inserter.\n *\n * @param {boolean|Object} value                Whether the inserter should be\n *                                              opened (true) or closed (false).\n *                                              To specify an insertion point,\n *                                              use an object.\n * @param {string}         value.rootClientId   The root client ID to insert at.\n * @param {number}         value.insertionIndex The index to insert at.\n *\n * @return {Object} Action object.\n */\nexport function setIsInserterOpened( value ) {\n\treturn {\n\t\ttype: 'SET_IS_INSERTER_OPENED',\n\t\tvalue,\n\t};\n}\n\n/**\n * Returns an action object used to open/close the list view.\n *\n * @param {boolean} isOpen A boolean representing whether the list view should be opened or closed.\n * @return {Object} Action object.\n */\nexport function setIsListViewOpened( isOpen ) {\n\treturn {\n\t\ttype: 'SET_IS_LIST_VIEW_OPENED',\n\t\tisOpen,\n\t};\n}\n\n/**\n * Returns an action object used to switch to template editing.\n *\n * @param {boolean} value Is editing template.\n * @return {Object} Action object.\n */\nexport function setIsEditingTemplate( value ) {\n\treturn {\n\t\ttype: 'SET_IS_EDITING_TEMPLATE',\n\t\tvalue,\n\t};\n}\n\n/**\n * Switches to the template mode.\n *\n * @param {boolean} newTemplate Is new template.\n */\nexport const __unstableSwitchToTemplateMode = ( newTemplate = false ) => ( {\n\tregistry,\n\tselect,\n\tdispatch,\n} ) => {\n\tdispatch( setIsEditingTemplate( true ) );\n\tconst isWelcomeGuideActive = select.isFeatureActive(\n\t\t'welcomeGuideTemplate'\n\t);\n\tif ( ! isWelcomeGuideActive ) {\n\t\tconst message = newTemplate\n\t\t\t? __( \"Custom template created. You're in template mode now.\" )\n\t\t\t: __(\n\t\t\t\t\t'Editing template. Changes made here affect all posts and pages that use the template.'\n\t\t\t  );\n\t\tregistry.dispatch( noticesStore ).createSuccessNotice( message, {\n\t\t\ttype: 'snackbar',\n\t\t} );\n\t}\n};\n\n/**\n * Create a block based template.\n *\n * @param {Object?} template Template to create and assign.\n */\nexport const __unstableCreateTemplate = ( template ) => async ( {\n\tregistry,\n} ) => {\n\tconst savedTemplate = await registry\n\t\t.dispatch( coreStore )\n\t\t.saveEntityRecord( 'postType', 'wp_template', template );\n\tconst post = registry.select( editorStore ).getCurrentPost();\n\tregistry\n\t\t.dispatch( coreStore )\n\t\t.editEntityRecord( 'postType', post.type, post.id, {\n\t\t\ttemplate: savedTemplate.slug,\n\t\t} );\n};\n\nlet metaBoxesInitialized = false;\n\n/**\n * Initializes WordPress `postboxes` script and the logic for saving meta boxes.\n */\nexport const initializeMetaBoxes = () => ( { registry, select, dispatch } ) => {\n\tconst isEditorReady = registry\n\t\t.select( editorStore )\n\t\t.__unstableIsEditorReady();\n\n\tif ( ! isEditorReady ) {\n\t\treturn;\n\t}\n\t// Only initialize once.\n\tif ( metaBoxesInitialized ) {\n\t\treturn;\n\t}\n\tconst postType = registry.select( editorStore ).getCurrentPostType();\n\tif ( window.postboxes.page !== postType ) {\n\t\twindow.postboxes.add_postbox_toggles( postType );\n\t}\n\n\tmetaBoxesInitialized = true;\n\n\tlet wasSavingPost = registry.select( editorStore ).isSavingPost();\n\tlet wasAutosavingPost = registry.select( editorStore ).isAutosavingPost();\n\tconst hasMetaBoxes = select.hasMetaBoxes();\n\n\t// Save metaboxes when performing a full save on the post.\n\tregistry.subscribe( async () => {\n\t\tconst isSavingPost = registry.select( editorStore ).isSavingPost();\n\t\tconst isAutosavingPost = registry\n\t\t\t.select( editorStore )\n\t\t\t.isAutosavingPost();\n\n\t\t// Save metaboxes on save completion, except for autosaves that are not a post preview.\n\t\t//\n\t\t// Meta boxes are initialized once at page load. It is not necessary to\n\t\t// account for updates on each state change.\n\t\t//\n\t\t// See: https://github.com/WordPress/WordPress/blob/5.1.1/wp-admin/includes/post.php#L2307-L2309\n\t\tconst shouldTriggerMetaboxesSave =\n\t\t\thasMetaBoxes &&\n\t\t\twasSavingPost &&\n\t\t\t! isSavingPost &&\n\t\t\t! wasAutosavingPost;\n\n\t\t// Save current state for next inspection.\n\t\twasSavingPost = isSavingPost;\n\t\twasAutosavingPost = isAutosavingPost;\n\n\t\tif ( shouldTriggerMetaboxesSave ) {\n\t\t\tawait dispatch.requestMetaBoxUpdates();\n\t\t}\n\t} );\n\n\tdispatch( {\n\t\ttype: 'META_BOXES_INITIALIZED',\n\t} );\n};\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { get, includes, some, flatten, values } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport { store as interfaceStore } from '@wordpress/interface';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as editorStore } from '@wordpress/editor';\n/**\n * Returns the current editing mode.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Editing mode.\n */\nexport function getEditorMode( state ) {\n\treturn getPreference( state, 'editorMode', 'visual' );\n}\n\n/**\n * Returns true if the editor sidebar is opened.\n *\n * @param {Object} state Global application state\n *\n * @return {boolean} Whether the editor sidebar is opened.\n */\nexport const isEditorSidebarOpened = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst activeGeneralSidebar = select(\n\t\t\tinterfaceStore\n\t\t).getActiveComplementaryArea( 'core/edit-post' );\n\t\treturn includes(\n\t\t\t[ 'edit-post/document', 'edit-post/block' ],\n\t\t\tactiveGeneralSidebar\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the plugin sidebar is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the plugin sidebar is opened.\n */\nexport const isPluginSidebarOpened = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst activeGeneralSidebar = select(\n\t\t\tinterfaceStore\n\t\t).getActiveComplementaryArea( 'core/edit-post' );\n\t\treturn (\n\t\t\t!! activeGeneralSidebar &&\n\t\t\t! includes(\n\t\t\t\t[ 'edit-post/document', 'edit-post/block' ],\n\t\t\t\tactiveGeneralSidebar\n\t\t\t)\n\t\t);\n\t}\n);\n\n/**\n * Returns the current active general sidebar name, or null if there is no\n * general sidebar active. The active general sidebar is a unique name to\n * identify either an editor or plugin sidebar.\n *\n * Examples:\n *\n *  - `edit-post/document`\n *  - `my-plugin/insert-image-sidebar`\n *\n * @param {Object} state Global application state.\n *\n * @return {?string} Active general sidebar name.\n */\nexport const getActiveGeneralSidebarName = createRegistrySelector(\n\t( select ) => () => {\n\t\treturn select( interfaceStore ).getActiveComplementaryArea(\n\t\t\t'core/edit-post'\n\t\t);\n\t}\n);\n\n/**\n * Returns the preferences (these preferences are persisted locally).\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} Preferences Object.\n */\nexport function getPreferences( state ) {\n\treturn state.preferences;\n}\n\n/**\n *\n * @param {Object} state         Global application state.\n * @param {string} preferenceKey Preference Key.\n * @param {*}      defaultValue  Default Value.\n *\n * @return {*} Preference Value.\n */\nexport function getPreference( state, preferenceKey, defaultValue ) {\n\tconst preferences = getPreferences( state );\n\tconst value = preferences[ preferenceKey ];\n\treturn value === undefined ? defaultValue : value;\n}\n\n/**\n * Returns true if the publish sidebar is opened.\n *\n * @param {Object} state Global application state\n *\n * @return {boolean} Whether the publish sidebar is open.\n */\nexport function isPublishSidebarOpened( state ) {\n\treturn state.publishSidebarActive;\n}\n\n/**\n * Returns true if the given panel was programmatically removed, or false otherwise.\n * All panels are not removed by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is removed.\n */\nexport function isEditorPanelRemoved( state, panelName ) {\n\treturn includes( state.removedPanels, panelName );\n}\n\n/**\n * Returns true if the given panel is enabled, or false otherwise. Panels are\n * enabled by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is enabled.\n */\nexport function isEditorPanelEnabled( state, panelName ) {\n\tconst panels = getPreference( state, 'panels' );\n\n\treturn (\n\t\t! isEditorPanelRemoved( state, panelName ) &&\n\t\tget( panels, [ panelName, 'enabled' ], true )\n\t);\n}\n\n/**\n * Returns true if the given panel is open, or false otherwise. Panels are\n * closed by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is open.\n */\nexport function isEditorPanelOpened( state, panelName ) {\n\tconst panels = getPreference( state, 'panels' );\n\treturn (\n\t\tget( panels, [ panelName ] ) === true ||\n\t\tget( panels, [ panelName, 'opened' ] ) === true\n\t);\n}\n\n/**\n * Returns true if a modal is active, or false otherwise.\n *\n * @param {Object} state     Global application state.\n * @param {string} modalName A string that uniquely identifies the modal.\n *\n * @return {boolean} Whether the modal is active.\n */\nexport function isModalActive( state, modalName ) {\n\treturn state.activeModal === modalName;\n}\n\n/**\n * Returns whether the given feature is enabled or not.\n *\n * @param {Object} state   Global application state.\n * @param {string} feature Feature slug.\n *\n * @return {boolean} Is active.\n */\nexport const isFeatureActive = createRegistrySelector(\n\t( select ) => ( state, feature ) => {\n\t\treturn select( interfaceStore ).isFeatureActive(\n\t\t\t'core/edit-post',\n\t\t\tfeature\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the plugin item is pinned to the header.\n * When the value is not set it defaults to true.\n *\n * @param {Object} state      Global application state.\n * @param {string} pluginName Plugin item name.\n *\n * @return {boolean} Whether the plugin item is pinned.\n */\nexport const isPluginItemPinned = createRegistrySelector(\n\t( select ) => ( state, pluginName ) => {\n\t\treturn select( interfaceStore ).isItemPinned(\n\t\t\t'core/edit-post',\n\t\t\tpluginName\n\t\t);\n\t}\n);\n\n/**\n * Returns an array of active meta box locations.\n *\n * @param {Object} state Post editor state.\n *\n * @return {string[]} Active meta box locations.\n */\nexport const getActiveMetaBoxLocations = createSelector(\n\t( state ) => {\n\t\treturn Object.keys( state.metaBoxes.locations ).filter( ( location ) =>\n\t\t\tisMetaBoxLocationActive( state, location )\n\t\t);\n\t},\n\t( state ) => [ state.metaBoxes.locations ]\n);\n\n/**\n * Returns true if a metabox location is active and visible\n *\n * @param {Object} state    Post editor state.\n * @param {string} location Meta box location to test.\n *\n * @return {boolean} Whether the meta box location is active and visible.\n */\nexport function isMetaBoxLocationVisible( state, location ) {\n\treturn (\n\t\tisMetaBoxLocationActive( state, location ) &&\n\t\tsome( getMetaBoxesPerLocation( state, location ), ( { id } ) => {\n\t\t\treturn isEditorPanelEnabled( state, `meta-box-${ id }` );\n\t\t} )\n\t);\n}\n\n/**\n * Returns true if there is an active meta box in the given location, or false\n * otherwise.\n *\n * @param {Object} state    Post editor state.\n * @param {string} location Meta box location to test.\n *\n * @return {boolean} Whether the meta box location is active.\n */\nexport function isMetaBoxLocationActive( state, location ) {\n\tconst metaBoxes = getMetaBoxesPerLocation( state, location );\n\treturn !! metaBoxes && metaBoxes.length !== 0;\n}\n\n/**\n * Returns the list of all the available meta boxes for a given location.\n *\n * @param {Object} state    Global application state.\n * @param {string} location Meta box location to test.\n *\n * @return {?Array} List of meta boxes.\n */\nexport function getMetaBoxesPerLocation( state, location ) {\n\treturn state.metaBoxes.locations[ location ];\n}\n\n/**\n * Returns the list of all the available meta boxes.\n *\n * @param {Object} state Global application state.\n *\n * @return {Array} List of meta boxes.\n */\nexport const getAllMetaBoxes = createSelector(\n\t( state ) => {\n\t\treturn flatten( values( state.metaBoxes.locations ) );\n\t},\n\t( state ) => [ state.metaBoxes.locations ]\n);\n\n/**\n * Returns true if the post is using Meta Boxes\n *\n * @param {Object} state Global application state\n *\n * @return {boolean} Whether there are metaboxes or not.\n */\nexport function hasMetaBoxes( state ) {\n\treturn getActiveMetaBoxLocations( state ).length > 0;\n}\n\n/**\n * Returns true if the Meta Boxes are being saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the metaboxes are being saved.\n */\nexport function isSavingMetaBoxes( state ) {\n\treturn state.metaBoxes.isSaving;\n}\n\n/**\n * Returns the current editing canvas device type.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Device type.\n */\nexport function __experimentalGetPreviewDeviceType( state ) {\n\treturn state.deviceType;\n}\n\n/**\n * Returns true if the inserter is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the inserter is opened.\n */\nexport function isInserterOpened( state ) {\n\treturn !! state.blockInserterPanel;\n}\n\n/**\n * Get the insertion point for the inserter.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The root client ID, index to insert at and starting filter value.\n */\nexport function __experimentalGetInsertionPoint( state ) {\n\tconst {\n\t\trootClientId,\n\t\tinsertionIndex,\n\t\tfilterValue,\n\t} = state.blockInserterPanel;\n\treturn { rootClientId, insertionIndex, filterValue };\n}\n\n/**\n * Returns true if the list view is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the list view is opened.\n */\nexport function isListViewOpened( state ) {\n\treturn state.listViewPanel;\n}\n\n/**\n * Returns true if the template editing mode is enabled.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether we're editing the template.\n */\nexport function isEditingTemplate( state ) {\n\treturn state.isEditingTemplate;\n}\n\n/**\n * Returns true if meta boxes are initialized.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether meta boxes are initialized.\n */\nexport function areMetaBoxesInitialized( state ) {\n\treturn state.metaBoxes.initialized;\n}\n\n/**\n * Retrieves the template of the currently edited post.\n *\n * @return {Object?} Post Template.\n */\nexport const getEditedPostTemplate = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst currentTemplate = select( editorStore ).getEditedPostAttribute(\n\t\t\t'template'\n\t\t);\n\t\tif ( currentTemplate ) {\n\t\t\tconst templateWithSameSlug = select( coreStore )\n\t\t\t\t.getEntityRecords( 'postType', 'wp_template', { per_page: -1 } )\n\t\t\t\t?.find( ( template ) => template.slug === currentTemplate );\n\t\t\tif ( ! templateWithSameSlug ) {\n\t\t\t\treturn templateWithSameSlug;\n\t\t\t}\n\t\t\treturn select( coreStore ).getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'wp_template',\n\t\t\t\ttemplateWithSameSlug.id\n\t\t\t);\n\t\t}\n\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\tif ( post.link ) {\n\t\t\treturn select( coreStore ).__experimentalGetTemplateForLink(\n\t\t\t\tpost.link\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n);\n","/**\n * The identifier for the data store.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/edit-post';\n\n/**\n * CSS selector string for the admin bar view post link anchor tag.\n *\n * @type {string}\n */\nexport const VIEW_AS_LINK_SELECTOR = '#wp-admin-bar-view a';\n\n/**\n * CSS selector string for the admin bar preview post link anchor tag.\n *\n * @type {string}\n */\nexport const VIEW_AS_PREVIEW_LINK_SELECTOR = '#wp-admin-bar-preview a';\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { STORE_NAME } from './constants';\n\nconst storeConfig = {\n\treducer,\n\tactions,\n\tselectors,\n\tpersist: [ 'preferences' ],\n};\n\n/**\n * Store definition for the edit post namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig );\n\n// Ideally we use register instead of register store.\nregisterStore( STORE_NAME, storeConfig );\n","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { withDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { displayShortcut } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nexport function KeyboardShortcutsHelpMenuItem( { openModal } ) {\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={ () => {\n\t\t\t\topenModal( 'edit-post/keyboard-shortcut-help' );\n\t\t\t} }\n\t\t\tshortcut={ displayShortcut.access( 'h' ) }\n\t\t>\n\t\t\t{ __( 'Keyboard shortcuts' ) }\n\t\t</MenuItem>\n\t);\n}\n\nexport default withDispatch( ( dispatch ) => {\n\tconst { openModal } = dispatch( editPostStore );\n\n\treturn {\n\t\topenModal,\n\t};\n} )( KeyboardShortcutsHelpMenuItem );\n","/**\n * External dependencies\n */\nimport { isEmpty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createSlotFill, MenuGroup } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nconst { Fill: ToolsMoreMenuGroup, Slot } = createSlotFill(\n\t'ToolsMoreMenuGroup'\n);\n\nToolsMoreMenuGroup.Slot = ( { fillProps } ) => (\n\t<Slot fillProps={ fillProps }>\n\t\t{ ( fills ) =>\n\t\t\t! isEmpty( fills ) && (\n\t\t\t\t<MenuGroup label={ __( 'Tools' ) }>{ fills }</MenuGroup>\n\t\t\t)\n\t\t}\n\t</Slot>\n);\n\nexport default ToolsMoreMenuGroup;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { MoreMenuFeatureToggle } from '@wordpress/interface';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nexport default function WelcomeGuideMenuItem() {\n\tconst isTemplateMode = useSelect(\n\t\t( select ) => select( editPostStore ).isEditingTemplate(),\n\t\t[]\n\t);\n\n\treturn (\n\t\t<MoreMenuFeatureToggle\n\t\t\tscope=\"core/edit-post\"\n\t\t\tfeature={ isTemplateMode ? 'welcomeGuideTemplate' : 'welcomeGuide' }\n\t\t\tlabel={ __( 'Welcome Guide' ) }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { MenuItem, VisuallyHidden } from '@wordpress/components';\nimport { external } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport CopyContentMenuItem from './copy-content-menu-item';\nimport KeyboardShortcutsHelpMenuItem from './keyboard-shortcuts-help-menu-item';\nimport ToolsMoreMenuGroup from '../components/header/tools-more-menu-group';\nimport WelcomeGuideMenuItem from './welcome-guide-menu-item';\n\nregisterPlugin( 'edit-post', {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ToolsMoreMenuGroup>\n\t\t\t\t\t{ ( { onClose } ) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\t\thref={ addQueryArgs( 'edit.php', {\n\t\t\t\t\t\t\t\t\tpost_type: 'wp_block',\n\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Manage Reusable blocks' ) }\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<KeyboardShortcutsHelpMenuItem\n\t\t\t\t\t\t\t\tonSelect={ onClose }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<WelcomeGuideMenuItem />\n\t\t\t\t\t\t\t<CopyContentMenuItem />\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\t\ticon={ external }\n\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t'https://wordpress.org/support/article/wordpress-editor/'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Help' ) }\n\t\t\t\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</ToolsMoreMenuGroup>\n\t\t\t</>\n\t\t);\n\t},\n} );\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keyboardShortcuts\"];","/**\n * WordPress dependencies\n */\nimport {\n\tPostTextEditor,\n\tPostTitle,\n\tTextEditorGlobalKeyboardShortcuts,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport { Button } from '@wordpress/components';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nfunction TextEditor( { onExit, isRichEditingEnabled } ) {\n\treturn (\n\t\t<div className=\"edit-post-text-editor\">\n\t\t\t{ isRichEditingEnabled && (\n\t\t\t\t<div className=\"edit-post-text-editor__toolbar\">\n\t\t\t\t\t<h2>{ __( 'Editing code' ) }</h2>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tonClick={ onExit }\n\t\t\t\t\t\tshortcut={ displayShortcut.secondary( 'm' ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Exit code editor' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<TextEditorGlobalKeyboardShortcuts />\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<div className=\"edit-post-text-editor__body\">\n\t\t\t\t<PostTitle />\n\t\t\t\t<PostTextEditor />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select ) => ( {\n\t\tisRichEditingEnabled: select( editorStore ).getEditorSettings()\n\t\t\t.richEditingEnabled,\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\treturn {\n\t\t\tonExit() {\n\t\t\t\tdispatch( editPostStore ).switchEditorMode( 'visual' );\n\t\t\t},\n\t\t};\n\t} )\n)( TextEditor );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst arrowLeft = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M20 10.8H6.7l4.1-4.5-1.1-1.1-5.8 6.3 5.8 5.8 1.1-1.1-4-3.9H20z\" />\n\t</SVG>\n);\n\nexport default arrowLeft;\n","/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItem } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { speak } from '@wordpress/a11y';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nexport function BlockInspectorButton( { onClick = noop, small = false } ) {\n\tconst { shortcut, areAdvancedSettingsOpened } = useSelect(\n\t\t( select ) => ( {\n\t\t\tshortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getShortcutRepresentation( 'core/edit-post/toggle-sidebar' ),\n\t\t\tareAdvancedSettingsOpened:\n\t\t\t\tselect( editPostStore ).getActiveGeneralSidebarName() ===\n\t\t\t\t'edit-post/block',\n\t\t} ),\n\t\t[]\n\t);\n\tconst { openGeneralSidebar, closeGeneralSidebar } = useDispatch(\n\t\teditPostStore\n\t);\n\n\tconst label = areAdvancedSettingsOpened\n\t\t? __( 'Hide more settings' )\n\t\t: __( 'Show more settings' );\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={ () => {\n\t\t\t\tif ( areAdvancedSettingsOpened ) {\n\t\t\t\t\tcloseGeneralSidebar();\n\t\t\t\t\tspeak( __( 'Block settings closed' ) );\n\t\t\t\t} else {\n\t\t\t\t\topenGeneralSidebar( 'edit-post/block' );\n\t\t\t\t\tspeak(\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'Additional settings are now available in the Editor block settings sidebar'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tonClick();\n\t\t\t} }\n\t\t\tshortcut={ shortcut }\n\t\t>\n\t\t\t{ ! small && label }\n\t\t</MenuItem>\n\t);\n}\n\nexport default BlockInspectorButton;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tVisualEditorGlobalKeyboardShortcuts,\n\tPostTitle,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport {\n\tWritingFlow,\n\tBlockList,\n\tBlockTools,\n\tstore as blockEditorStore,\n\t__unstableUseBlockSelectionClearer as useBlockSelectionClearer,\n\t__unstableUseTypewriter as useTypewriter,\n\t__unstableUseClipboardHandler as useClipboardHandler,\n\t__unstableUseTypingObserver as useTypingObserver,\n\t__unstableBlockSettingsMenuFirstItem,\n\t__experimentalUseResizeCanvas as useResizeCanvas,\n\t__unstableEditorStyles as EditorStyles,\n\tuseSetting,\n\t__experimentalLayoutStyle as LayoutStyle,\n\t__unstableUseMouseMoveTypingReset as useMouseMoveTypingReset,\n\t__unstableIframe as Iframe,\n\t__experimentalUseNoRecursiveRenders as useNoRecursiveRenders,\n} from '@wordpress/block-editor';\nimport { useRef, useMemo } from '@wordpress/element';\nimport { Button, __unstableMotion as motion } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useMergeRefs } from '@wordpress/compose';\nimport { arrowLeft } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport BlockInspectorButton from './block-inspector-button';\nimport { store as editPostStore } from '../../store';\n\nfunction MaybeIframe( {\n\tchildren,\n\tcontentRef,\n\tshouldIframe,\n\tstyles,\n\tassets,\n\tstyle,\n} ) {\n\tconst ref = useMouseMoveTypingReset();\n\n\tif ( ! shouldIframe ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EditorStyles styles={ styles } />\n\t\t\t\t<WritingFlow\n\t\t\t\t\tref={ contentRef }\n\t\t\t\t\tclassName=\"editor-styles-wrapper\"\n\t\t\t\t\tstyle={ { flex: '1', ...style } }\n\t\t\t\t\ttabIndex={ -1 }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</WritingFlow>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Iframe\n\t\t\thead={ <EditorStyles styles={ styles } /> }\n\t\t\tassets={ assets }\n\t\t\tref={ ref }\n\t\t\tcontentRef={ contentRef }\n\t\t\tstyle={ { width: '100%', height: '100%', display: 'block' } }\n\t\t\tname=\"editor-canvas\"\n\t\t>\n\t\t\t{ children }\n\t\t</Iframe>\n\t);\n}\n\nexport default function VisualEditor( { styles } ) {\n\tconst {\n\t\tdeviceType,\n\t\tisTemplateMode,\n\t\twrapperBlockName,\n\t\twrapperUniqueId,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisEditingTemplate,\n\t\t\t__experimentalGetPreviewDeviceType,\n\t\t} = select( editPostStore );\n\t\tconst { getCurrentPostId, getCurrentPostType } = select( editorStore );\n\t\tconst _isTemplateMode = isEditingTemplate();\n\t\tlet _wrapperBlockName;\n\n\t\tif ( getCurrentPostType() === 'wp_block' ) {\n\t\t\t_wrapperBlockName = 'core/block';\n\t\t} else if ( ! _isTemplateMode ) {\n\t\t\t_wrapperBlockName = 'core/post-content';\n\t\t}\n\n\t\treturn {\n\t\t\tdeviceType: __experimentalGetPreviewDeviceType(),\n\t\t\tisTemplateMode: _isTemplateMode,\n\t\t\twrapperBlockName: _wrapperBlockName,\n\t\t\twrapperUniqueId: getCurrentPostId(),\n\t\t};\n\t}, [] );\n\tconst hasMetaBoxes = useSelect(\n\t\t( select ) => select( editPostStore ).hasMetaBoxes(),\n\t\t[]\n\t);\n\tconst { themeSupportsLayout, assets } = useSelect( ( select ) => {\n\t\tconst _settings = select( blockEditorStore ).getSettings();\n\t\treturn {\n\t\t\tthemeSupportsLayout: _settings.supportsLayout,\n\t\t\tassets: _settings.__unstableResolvedAssets,\n\t\t};\n\t}, [] );\n\tconst { clearSelectedBlock } = useDispatch( blockEditorStore );\n\tconst { setIsEditingTemplate } = useDispatch( editPostStore );\n\tconst desktopCanvasStyles = {\n\t\t// We intentionally omit a 100% height here. The container is a flex item, so the 100% height is granted by default.\n\t\t// If a percentage height is present, older browsers such as Safari 13 apply that, but do so incorrectly as the inheritance is buggy.\n\t\twidth: '100%',\n\t\tmargin: 0,\n\t\tdisplay: 'flex',\n\t\tflexFlow: 'column',\n\t\t// Default background color so that grey\n\t\t// .edit-post-editor-regions__content color doesn't show through.\n\t\tbackground: 'white',\n\t};\n\tconst templateModeStyles = {\n\t\t...desktopCanvasStyles,\n\t\tborderRadius: '2px 2px 0 0',\n\t\tborder: '1px solid #ddd',\n\t\tborderBottom: 0,\n\t};\n\tconst resizedCanvasStyles = useResizeCanvas( deviceType, isTemplateMode );\n\tconst defaultLayout = useSetting( 'layout' );\n\tconst previewMode = 'is-' + deviceType.toLowerCase() + '-preview';\n\n\tlet animatedStyles = isTemplateMode\n\t\t? templateModeStyles\n\t\t: desktopCanvasStyles;\n\tif ( resizedCanvasStyles ) {\n\t\tanimatedStyles = resizedCanvasStyles;\n\t}\n\n\tlet paddingBottom;\n\n\t// Add a constant padding for the typewritter effect. When typing at the\n\t// bottom, there needs to be room to scroll up.\n\tif ( ! hasMetaBoxes && ! resizedCanvasStyles && ! isTemplateMode ) {\n\t\tpaddingBottom = '40vh';\n\t}\n\n\tconst ref = useRef();\n\tconst contentRef = useMergeRefs( [\n\t\tref,\n\t\tuseClipboardHandler(),\n\t\tuseTypewriter(),\n\t\tuseTypingObserver(),\n\t\tuseBlockSelectionClearer(),\n\t] );\n\n\tconst blockSelectionClearerRef = useBlockSelectionClearer();\n\n\tconst [ , RecursionProvider ] = useNoRecursiveRenders(\n\t\twrapperUniqueId,\n\t\twrapperBlockName\n\t);\n\n\tconst layout = useMemo( () => {\n\t\tif ( isTemplateMode ) {\n\t\t\treturn { type: 'default' };\n\t\t}\n\n\t\tif ( themeSupportsLayout ) {\n\t\t\treturn defaultLayout;\n\t\t}\n\n\t\treturn undefined;\n\t}, [ isTemplateMode, themeSupportsLayout, defaultLayout ] );\n\n\treturn (\n\t\t<BlockTools\n\t\t\t__unstableContentRef={ ref }\n\t\t\tclassName={ classnames( 'edit-post-visual-editor', {\n\t\t\t\t'is-template-mode': isTemplateMode,\n\t\t\t} ) }\n\t\t>\n\t\t\t<VisualEditorGlobalKeyboardShortcuts />\n\t\t\t<motion.div\n\t\t\t\tclassName=\"edit-post-visual-editor__content-area\"\n\t\t\t\tanimate={ {\n\t\t\t\t\tpadding: isTemplateMode ? '48px 48px 0' : '0',\n\t\t\t\t} }\n\t\t\t\tref={ blockSelectionClearerRef }\n\t\t\t>\n\t\t\t\t{ isTemplateMode && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"edit-post-visual-editor__exit-template-mode\"\n\t\t\t\t\t\ticon={ arrowLeft }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tclearSelectedBlock();\n\t\t\t\t\t\t\tsetIsEditingTemplate( false );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Back' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\t<motion.div\n\t\t\t\t\tanimate={ animatedStyles }\n\t\t\t\t\tinitial={ desktopCanvasStyles }\n\t\t\t\t\tclassName={ previewMode }\n\t\t\t\t>\n\t\t\t\t\t<MaybeIframe\n\t\t\t\t\t\tshouldIframe={\n\t\t\t\t\t\t\tisTemplateMode ||\n\t\t\t\t\t\t\tdeviceType === 'Tablet' ||\n\t\t\t\t\t\t\tdeviceType === 'Mobile'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontentRef={ contentRef }\n\t\t\t\t\t\tstyles={ styles }\n\t\t\t\t\t\tassets={ assets }\n\t\t\t\t\t\tstyle={ { paddingBottom } }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ themeSupportsLayout && ! isTemplateMode && (\n\t\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\t\tselector=\".edit-post-visual-editor__post-title-wrapper, .block-editor-block-list__layout.is-root-container\"\n\t\t\t\t\t\t\t\tlayout={ defaultLayout }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ ! isTemplateMode && (\n\t\t\t\t\t\t\t<div className=\"edit-post-visual-editor__post-title-wrapper\">\n\t\t\t\t\t\t\t\t<PostTitle />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<RecursionProvider>\n\t\t\t\t\t\t\t<BlockList\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tisTemplateMode\n\t\t\t\t\t\t\t\t\t\t? 'wp-site-blocks'\n\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t__experimentalLayout={ layout }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</RecursionProvider>\n\t\t\t\t\t</MaybeIframe>\n\t\t\t\t</motion.div>\n\t\t\t</motion.div>\n\t\t\t<__unstableBlockSettingsMenuFirstItem>\n\t\t\t\t{ ( { onClose } ) => (\n\t\t\t\t\t<BlockInspectorButton onClick={ onClose } />\n\t\t\t\t) }\n\t\t\t</__unstableBlockSettingsMenuFirstItem>\n\t\t</BlockTools>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tuseShortcut,\n\tstore as keyboardShortcutsStore,\n} from '@wordpress/keyboard-shortcuts';\nimport { __ } from '@wordpress/i18n';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nfunction KeyboardShortcuts() {\n\tconst { getBlockSelectionStart } = useSelect( blockEditorStore );\n\tconst {\n\t\tgetEditorMode,\n\t\tisEditorSidebarOpened,\n\t\tisListViewOpened,\n\t} = useSelect( editPostStore );\n\tconst isModeToggleDisabled = useSelect( ( select ) => {\n\t\tconst { richEditingEnabled, codeEditingEnabled } = select(\n\t\t\teditorStore\n\t\t).getEditorSettings();\n\t\treturn ! richEditingEnabled || ! codeEditingEnabled;\n\t}, [] );\n\n\tconst {\n\t\tswitchEditorMode,\n\t\topenGeneralSidebar,\n\t\tcloseGeneralSidebar,\n\t\ttoggleFeature,\n\t\tsetIsListViewOpened,\n\t} = useDispatch( editPostStore );\n\tconst { registerShortcut } = useDispatch( keyboardShortcutsStore );\n\n\tuseEffect( () => {\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-post/toggle-mode',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Switch between visual editor and code editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'secondary',\n\t\t\t\tcharacter: 'm',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-post/toggle-fullscreen',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Toggle fullscreen mode.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'secondary',\n\t\t\t\tcharacter: 'f',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-post/toggle-list-view',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Open the block list view.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'access',\n\t\t\t\tcharacter: 'o',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-post/toggle-sidebar',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Show or hide the settings sidebar.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primaryShift',\n\t\t\t\tcharacter: ',',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-post/next-region',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Navigate to the next part of the editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'ctrl',\n\t\t\t\tcharacter: '`',\n\t\t\t},\n\t\t\taliases: [\n\t\t\t\t{\n\t\t\t\t\tmodifier: 'access',\n\t\t\t\t\tcharacter: 'n',\n\t\t\t\t},\n\t\t\t],\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-post/previous-region',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Navigate to the previous part of the editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'ctrlShift',\n\t\t\t\tcharacter: '`',\n\t\t\t},\n\t\t\taliases: [\n\t\t\t\t{\n\t\t\t\t\tmodifier: 'access',\n\t\t\t\t\tcharacter: 'p',\n\t\t\t\t},\n\t\t\t],\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-post/keyboard-shortcuts',\n\t\t\tcategory: 'main',\n\t\t\tdescription: __( 'Display these keyboard shortcuts.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'access',\n\t\t\t\tcharacter: 'h',\n\t\t\t},\n\t\t} );\n\t}, [] );\n\n\tuseShortcut(\n\t\t'core/edit-post/toggle-mode',\n\t\t() => {\n\t\t\tswitchEditorMode(\n\t\t\t\tgetEditorMode() === 'visual' ? 'text' : 'visual'\n\t\t\t);\n\t\t},\n\t\t{\n\t\t\tisDisabled: isModeToggleDisabled,\n\t\t}\n\t);\n\n\tuseShortcut( 'core/edit-post/toggle-fullscreen', () => {\n\t\ttoggleFeature( 'fullscreenMode' );\n\t} );\n\n\tuseShortcut( 'core/edit-post/toggle-sidebar', ( event ) => {\n\t\t// This shortcut has no known clashes, but use preventDefault to prevent any\n\t\t// obscure shortcuts from triggering.\n\t\tevent.preventDefault();\n\n\t\tif ( isEditorSidebarOpened() ) {\n\t\t\tcloseGeneralSidebar();\n\t\t} else {\n\t\t\tconst sidebarToOpen = getBlockSelectionStart()\n\t\t\t\t? 'edit-post/block'\n\t\t\t\t: 'edit-post/document';\n\t\t\topenGeneralSidebar( sidebarToOpen );\n\t\t}\n\t} );\n\n\tuseShortcut( 'core/edit-post/toggle-list-view', () =>\n\t\tsetIsListViewOpened( ! isListViewOpened() )\n\t);\n\n\treturn null;\n}\n\nexport default KeyboardShortcuts;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nexport const textFormattingShortcuts = [\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'b' },\n\t\tdescription: __( 'Make the selected text bold.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'i' },\n\t\tdescription: __( 'Make the selected text italic.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'k' },\n\t\tdescription: __( 'Convert the selected text into a link.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primaryShift', character: 'k' },\n\t\tdescription: __( 'Remove a link.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'u' },\n\t\tdescription: __( 'Underline the selected text.' ),\n\t},\n];\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { displayShortcutList, shortcutAriaLabel } from '@wordpress/keycodes';\n\nfunction KeyCombination( { keyCombination, forceAriaLabel } ) {\n\tconst shortcut = keyCombination.modifier\n\t\t? displayShortcutList[ keyCombination.modifier ](\n\t\t\t\tkeyCombination.character\n\t\t  )\n\t\t: keyCombination.character;\n\tconst ariaLabel = keyCombination.modifier\n\t\t? shortcutAriaLabel[ keyCombination.modifier ](\n\t\t\t\tkeyCombination.character\n\t\t  )\n\t\t: keyCombination.character;\n\n\treturn (\n\t\t<kbd\n\t\t\tclassName=\"edit-post-keyboard-shortcut-help-modal__shortcut-key-combination\"\n\t\t\taria-label={ forceAriaLabel || ariaLabel }\n\t\t>\n\t\t\t{ castArray( shortcut ).map( ( character, index ) => {\n\t\t\t\tif ( character === '+' ) {\n\t\t\t\t\treturn <Fragment key={ index }>{ character }</Fragment>;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<kbd\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tclassName=\"edit-post-keyboard-shortcut-help-modal__shortcut-key\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ character }\n\t\t\t\t\t</kbd>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</kbd>\n\t);\n}\n\nfunction Shortcut( { description, keyCombination, aliases = [], ariaLabel } ) {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"edit-post-keyboard-shortcut-help-modal__shortcut-description\">\n\t\t\t\t{ description }\n\t\t\t</div>\n\t\t\t<div className=\"edit-post-keyboard-shortcut-help-modal__shortcut-term\">\n\t\t\t\t<KeyCombination\n\t\t\t\t\tkeyCombination={ keyCombination }\n\t\t\t\t\tforceAriaLabel={ ariaLabel }\n\t\t\t\t/>\n\t\t\t\t{ aliases.map( ( alias, index ) => (\n\t\t\t\t\t<KeyCombination\n\t\t\t\t\t\tkeyCombination={ alias }\n\t\t\t\t\t\tforceAriaLabel={ ariaLabel }\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Shortcut;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport Shortcut from './shortcut';\n\nfunction DynamicShortcut( { name } ) {\n\tconst { keyCombination, description, aliases } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetShortcutKeyCombination,\n\t\t\t\tgetShortcutDescription,\n\t\t\t\tgetShortcutAliases,\n\t\t\t} = select( keyboardShortcutsStore );\n\n\t\t\treturn {\n\t\t\t\tkeyCombination: getShortcutKeyCombination( name ),\n\t\t\t\taliases: getShortcutAliases( name ),\n\t\t\t\tdescription: getShortcutDescription( name ),\n\t\t\t};\n\t\t},\n\t\t[ name ]\n\t);\n\n\tif ( ! keyCombination ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Shortcut\n\t\t\tkeyCombination={ keyCombination }\n\t\t\tdescription={ description }\n\t\t\taliases={ aliases }\n\t\t/>\n\t);\n}\n\nexport default DynamicShortcut;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { isString } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Modal } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tuseShortcut,\n\tstore as keyboardShortcutsStore,\n} from '@wordpress/keyboard-shortcuts';\nimport { withSelect, withDispatch, useSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { textFormattingShortcuts } from './config';\nimport Shortcut from './shortcut';\nimport DynamicShortcut from './dynamic-shortcut';\nimport { store as editPostStore } from '../../store';\n\nconst MODAL_NAME = 'edit-post/keyboard-shortcut-help';\n\nconst ShortcutList = ( { shortcuts } ) => (\n\t/*\n\t * Disable reason: The `list` ARIA role is redundant but\n\t * Safari+VoiceOver won't announce the list otherwise.\n\t */\n\t/* eslint-disable jsx-a11y/no-redundant-roles */\n\t<ul\n\t\tclassName=\"edit-post-keyboard-shortcut-help-modal__shortcut-list\"\n\t\trole=\"list\"\n\t>\n\t\t{ shortcuts.map( ( shortcut, index ) => (\n\t\t\t<li\n\t\t\t\tclassName=\"edit-post-keyboard-shortcut-help-modal__shortcut\"\n\t\t\t\tkey={ index }\n\t\t\t>\n\t\t\t\t{ isString( shortcut ) ? (\n\t\t\t\t\t<DynamicShortcut name={ shortcut } />\n\t\t\t\t) : (\n\t\t\t\t\t<Shortcut { ...shortcut } />\n\t\t\t\t) }\n\t\t\t</li>\n\t\t) ) }\n\t</ul>\n\t/* eslint-enable jsx-a11y/no-redundant-roles */\n);\n\nconst ShortcutSection = ( { title, shortcuts, className } ) => (\n\t<section\n\t\tclassName={ classnames(\n\t\t\t'edit-post-keyboard-shortcut-help-modal__section',\n\t\t\tclassName\n\t\t) }\n\t>\n\t\t{ !! title && (\n\t\t\t<h2 className=\"edit-post-keyboard-shortcut-help-modal__section-title\">\n\t\t\t\t{ title }\n\t\t\t</h2>\n\t\t) }\n\t\t<ShortcutList shortcuts={ shortcuts } />\n\t</section>\n);\n\nconst ShortcutCategorySection = ( {\n\ttitle,\n\tcategoryName,\n\tadditionalShortcuts = [],\n} ) => {\n\tconst categoryShortcuts = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( keyboardShortcutsStore ).getCategoryShortcuts(\n\t\t\t\tcategoryName\n\t\t\t);\n\t\t},\n\t\t[ categoryName ]\n\t);\n\n\treturn (\n\t\t<ShortcutSection\n\t\t\ttitle={ title }\n\t\t\tshortcuts={ categoryShortcuts.concat( additionalShortcuts ) }\n\t\t/>\n\t);\n};\n\nexport function KeyboardShortcutHelpModal( { isModalActive, toggleModal } ) {\n\tuseShortcut( 'core/edit-post/keyboard-shortcuts', toggleModal );\n\n\tif ( ! isModalActive ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\tclassName=\"edit-post-keyboard-shortcut-help-modal\"\n\t\t\ttitle={ __( 'Keyboard shortcuts' ) }\n\t\t\tcloseLabel={ __( 'Close' ) }\n\t\t\tonRequestClose={ toggleModal }\n\t\t>\n\t\t\t<ShortcutSection\n\t\t\t\tclassName=\"edit-post-keyboard-shortcut-help-modal__main-shortcuts\"\n\t\t\t\tshortcuts={ [ 'core/edit-post/keyboard-shortcuts' ] }\n\t\t\t/>\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Global shortcuts' ) }\n\t\t\t\tcategoryName=\"global\"\n\t\t\t/>\n\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Selection shortcuts' ) }\n\t\t\t\tcategoryName=\"selection\"\n\t\t\t/>\n\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Block shortcuts' ) }\n\t\t\t\tcategoryName=\"block\"\n\t\t\t\tadditionalShortcuts={ [\n\t\t\t\t\t{\n\t\t\t\t\t\tkeyCombination: { character: '/' },\n\t\t\t\t\t\tdescription: __(\n\t\t\t\t\t\t\t'Change the block type after adding a new paragraph.'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t/* translators: The forward-slash character. e.g. '/'. */\n\t\t\t\t\t\tariaLabel: __( 'Forward-slash' ),\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t/>\n\t\t\t<ShortcutSection\n\t\t\t\ttitle={ __( 'Text formatting' ) }\n\t\t\t\tshortcuts={ textFormattingShortcuts }\n\t\t\t/>\n\t\t</Modal>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tisModalActive: select( editPostStore ).isModalActive( MODAL_NAME ),\n\t} ) ),\n\twithDispatch( ( dispatch, { isModalActive } ) => {\n\t\tconst { openModal, closeModal } = dispatch( editPostStore );\n\n\t\treturn {\n\t\t\ttoggleModal: () =>\n\t\t\t\tisModalActive ? closeModal() : openModal( MODAL_NAME ),\n\t\t};\n\t} ),\n] )( KeyboardShortcutHelpModal );\n","/**\n * WordPress dependencies\n */\nimport { cloneElement } from '@wordpress/element';\n\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps} props icon is the SVG component to render\n *                          size is a number specifiying the icon size in pixels\n *                          Other props will be passed to wrapped SVG component\n *\n * @return {JSX.Element}  Icon component\n */\nfunction Icon( { icon, size = 24, ...props } ) {\n\treturn cloneElement( icon, {\n\t\twidth: size,\n\t\theight: size,\n\t\t...props,\n\t} );\n}\n\nexport default Icon;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronLeft = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M14.6 7l-1.2-1L8 12l5.4 6 1.2-1-4.6-5z\" />\n\t</SVG>\n);\n\nexport default chevronLeft;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronRight = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M10.6 6L9.4 7l4.6 5-4.6 5 1.2 1 5.4-6z\" />\n\t</SVG>\n);\n\nexport default chevronRight;\n","const Section = ( { description, title, children } ) => (\n\t<section className=\"edit-post-preferences-modal__section\">\n\t\t<h2 className=\"edit-post-preferences-modal__section-title\">\n\t\t\t{ title }\n\t\t</h2>\n\t\t{ description && (\n\t\t\t<p className=\"edit-post-preferences-modal__section-description\">\n\t\t\t\t{ description }\n\t\t\t</p>\n\t\t) }\n\t\t{ children }\n\t</section>\n);\n\nexport default Section;\n","/**\n * WordPress dependencies\n */\nimport { ToggleControl } from '@wordpress/components';\n\nfunction BaseOption( { help, label, isChecked, onChange, children } ) {\n\treturn (\n\t\t<div className=\"edit-post-preferences-modal__option\">\n\t\t\t<ToggleControl\n\t\t\t\thelp={ help }\n\t\t\t\tlabel={ label }\n\t\t\t\tchecked={ isChecked }\n\t\t\t\tonChange={ onChange }\n\t\t\t/>\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n\nexport default BaseOption;\n","/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport BaseOption from './base';\n\nexport function CustomFieldsConfirmation( { willEnable } ) {\n\tconst [ isReloading, setIsReloading ] = useState( false );\n\n\treturn (\n\t\t<>\n\t\t\t<p className=\"edit-post-preferences-modal__custom-fields-confirmation-message\">\n\t\t\t\t{ __(\n\t\t\t\t\t'A page reload is required for this change. Make sure your content is saved before reloading.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<Button\n\t\t\t\tclassName=\"edit-post-preferences-modal__custom-fields-confirmation-button\"\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tisBusy={ isReloading }\n\t\t\t\tdisabled={ isReloading }\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tsetIsReloading( true );\n\t\t\t\t\tdocument\n\t\t\t\t\t\t.getElementById( 'toggle-custom-fields-form' )\n\t\t\t\t\t\t.submit();\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ willEnable\n\t\t\t\t\t? __( 'Enable & Reload' )\n\t\t\t\t\t: __( 'Disable & Reload' ) }\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\nexport function EnableCustomFieldsOption( { label, areCustomFieldsEnabled } ) {\n\tconst [ isChecked, setIsChecked ] = useState( areCustomFieldsEnabled );\n\n\treturn (\n\t\t<BaseOption\n\t\t\tlabel={ label }\n\t\t\tisChecked={ isChecked }\n\t\t\tonChange={ setIsChecked }\n\t\t>\n\t\t\t{ isChecked !== areCustomFieldsEnabled && (\n\t\t\t\t<CustomFieldsConfirmation willEnable={ isChecked } />\n\t\t\t) }\n\t\t</BaseOption>\n\t);\n}\n\nexport default withSelect( ( select ) => ( {\n\tareCustomFieldsEnabled: !! select( editorStore ).getEditorSettings()\n\t\t.enableCustomFields,\n} ) )( EnableCustomFieldsOption );\n","/**\n * WordPress dependencies\n */\nimport { compose, ifCondition } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BaseOption from './base';\nimport { store as editPostStore } from '../../../store';\n\nexport default compose(\n\twithSelect( ( select, { panelName } ) => {\n\t\tconst { isEditorPanelEnabled, isEditorPanelRemoved } = select(\n\t\t\teditPostStore\n\t\t);\n\t\treturn {\n\t\t\tisRemoved: isEditorPanelRemoved( panelName ),\n\t\t\tisChecked: isEditorPanelEnabled( panelName ),\n\t\t};\n\t} ),\n\tifCondition( ( { isRemoved } ) => ! isRemoved ),\n\twithDispatch( ( dispatch, { panelName } ) => ( {\n\t\tonChange: () =>\n\t\t\tdispatch( editPostStore ).toggleEditorPanelEnabled( panelName ),\n\t} ) )\n)( BaseOption );\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { EnablePanelOption } from './index';\n\nconst { Fill, Slot } = createSlotFill(\n\t'EnablePluginDocumentSettingPanelOption'\n);\n\nconst EnablePluginDocumentSettingPanelOption = ( { label, panelName } ) => (\n\t<Fill>\n\t\t<EnablePanelOption label={ label } panelName={ panelName } />\n\t</Fill>\n);\n\nEnablePluginDocumentSettingPanelOption.Slot = Slot;\n\nexport default EnablePluginDocumentSettingPanelOption;\n","/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { ifViewportMatches } from '@wordpress/viewport';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport BaseOption from './base';\n\nexport default compose(\n\twithSelect( ( select ) => ( {\n\t\tisChecked: select( editorStore ).isPublishSidebarEnabled(),\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { enablePublishSidebar, disablePublishSidebar } = dispatch(\n\t\t\teditorStore\n\t\t);\n\t\treturn {\n\t\t\tonChange: ( isEnabled ) =>\n\t\t\t\tisEnabled ? enablePublishSidebar() : disablePublishSidebar(),\n\t\t};\n\t} ),\n\t// In < medium viewports we override this option and always show the publish sidebar.\n\t// See the edit-post's header component for the specific logic.\n\tifViewportMatches( 'medium' )\n)( BaseOption );\n","/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BaseOption from './base';\nimport { store as editPostStore } from '../../../store';\n\nexport default compose(\n\twithSelect( ( select, { featureName } ) => {\n\t\tconst { isFeatureActive } = select( editPostStore );\n\t\treturn {\n\t\t\tisChecked: isFeatureActive( featureName ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { featureName } ) => ( {\n\t\tonChange: () => dispatch( editPostStore ).toggleFeature( featureName ),\n\t} ) )\n)( BaseOption );\n","/**\n * External dependencies\n */\nimport { filter, map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { withSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport Section from './section';\nimport { EnableCustomFieldsOption, EnablePanelOption } from './options';\nimport { store as editPostStore } from '../../store';\n\nexport function MetaBoxesSection( {\n\tareCustomFieldsRegistered,\n\tmetaBoxes,\n\t...sectionProps\n} ) {\n\t// The 'Custom Fields' meta box is a special case that we handle separately.\n\tconst thirdPartyMetaBoxes = filter(\n\t\tmetaBoxes,\n\t\t( { id } ) => id !== 'postcustom'\n\t);\n\n\tif ( ! areCustomFieldsRegistered && thirdPartyMetaBoxes.length === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Section { ...sectionProps }>\n\t\t\t{ areCustomFieldsRegistered && (\n\t\t\t\t<EnableCustomFieldsOption label={ __( 'Custom fields' ) } />\n\t\t\t) }\n\t\t\t{ map( thirdPartyMetaBoxes, ( { id, title } ) => (\n\t\t\t\t<EnablePanelOption\n\t\t\t\t\tkey={ id }\n\t\t\t\t\tlabel={ title }\n\t\t\t\t\tpanelName={ `meta-box-${ id }` }\n\t\t\t\t/>\n\t\t\t) ) }\n\t\t</Section>\n\t);\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getEditorSettings } = select( editorStore );\n\tconst { getAllMetaBoxes } = select( editPostStore );\n\n\treturn {\n\t\t// This setting should not live in the block editor's store.\n\t\tareCustomFieldsRegistered:\n\t\t\tgetEditorSettings().enableCustomFields !== undefined,\n\t\tmetaBoxes: getAllMetaBoxes(),\n\t};\n} )( MetaBoxesSection );\n","/**\n * External dependencies\n */\nimport { partial } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { BlockIcon } from '@wordpress/block-editor';\nimport { CheckboxControl } from '@wordpress/components';\n\nfunction BlockTypesChecklist( { blockTypes, value, onItemChange } ) {\n\treturn (\n\t\t<ul className=\"edit-post-block-manager__checklist\">\n\t\t\t{ blockTypes.map( ( blockType ) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={ blockType.name }\n\t\t\t\t\tclassName=\"edit-post-block-manager__checklist-item\"\n\t\t\t\t>\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{ blockType.title }\n\t\t\t\t\t\t\t\t<BlockIcon icon={ blockType.icon } />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchecked={ value.includes( blockType.name ) }\n\t\t\t\t\t\tonChange={ partial( onItemChange, blockType.name ) }\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t) ) }\n\t\t</ul>\n\t);\n}\n\nexport default BlockTypesChecklist;\n","/**\n * External dependencies\n */\nimport { includes, map, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { CheckboxControl } from '@wordpress/components';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesChecklist from './checklist';\nimport { store as editPostStore } from '../../store';\n\nfunction BlockManagerCategory( { title, blockTypes } ) {\n\tconst instanceId = useInstanceId( BlockManagerCategory );\n\tconst { defaultAllowedBlockTypes, hiddenBlockTypes } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditorSettings } = select( editorStore );\n\t\t\tconst { getPreference } = select( editPostStore );\n\t\t\treturn {\n\t\t\t\tdefaultAllowedBlockTypes: getEditorSettings()\n\t\t\t\t\t.defaultAllowedBlockTypes,\n\t\t\t\thiddenBlockTypes: getPreference( 'hiddenBlockTypes' ),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\tconst filteredBlockTypes = useMemo( () => {\n\t\tif ( defaultAllowedBlockTypes === true ) {\n\t\t\treturn blockTypes;\n\t\t}\n\t\treturn blockTypes.filter( ( { name } ) => {\n\t\t\treturn includes( defaultAllowedBlockTypes || [], name );\n\t\t} );\n\t}, [ defaultAllowedBlockTypes, blockTypes ] );\n\tconst { showBlockTypes, hideBlockTypes } = useDispatch( editPostStore );\n\tconst toggleVisible = useCallback( ( blockName, nextIsChecked ) => {\n\t\tif ( nextIsChecked ) {\n\t\t\tshowBlockTypes( blockName );\n\t\t} else {\n\t\t\thideBlockTypes( blockName );\n\t\t}\n\t}, [] );\n\tconst toggleAllVisible = useCallback(\n\t\t( nextIsChecked ) => {\n\t\t\tconst blockNames = map( blockTypes, 'name' );\n\t\t\tif ( nextIsChecked ) {\n\t\t\t\tshowBlockTypes( blockNames );\n\t\t\t} else {\n\t\t\t\thideBlockTypes( blockNames );\n\t\t\t}\n\t\t},\n\t\t[ blockTypes ]\n\t);\n\n\tif ( ! filteredBlockTypes.length ) {\n\t\treturn null;\n\t}\n\n\tconst checkedBlockNames = without(\n\t\tmap( filteredBlockTypes, 'name' ),\n\t\t...hiddenBlockTypes\n\t);\n\n\tconst titleId = 'edit-post-block-manager__category-title-' + instanceId;\n\n\tconst isAllChecked = checkedBlockNames.length === filteredBlockTypes.length;\n\n\tlet ariaChecked;\n\tif ( isAllChecked ) {\n\t\tariaChecked = 'true';\n\t} else if ( checkedBlockNames.length > 0 ) {\n\t\tariaChecked = 'mixed';\n\t} else {\n\t\tariaChecked = 'false';\n\t}\n\n\treturn (\n\t\t<div\n\t\t\trole=\"group\"\n\t\t\taria-labelledby={ titleId }\n\t\t\tclassName=\"edit-post-block-manager__category\"\n\t\t>\n\t\t\t<CheckboxControl\n\t\t\t\tchecked={ isAllChecked }\n\t\t\t\tonChange={ toggleAllVisible }\n\t\t\t\tclassName=\"edit-post-block-manager__category-title\"\n\t\t\t\taria-checked={ ariaChecked }\n\t\t\t\tlabel={ <span id={ titleId }>{ title }</span> }\n\t\t\t/>\n\t\t\t<BlockTypesChecklist\n\t\t\t\tblockTypes={ filteredBlockTypes }\n\t\t\t\tvalue={ checkedBlockNames }\n\t\t\t\tonItemChange={ toggleVisible }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default BlockManagerCategory;\n","/**\n * External dependencies\n */\nimport { filter, includes, isArray } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { withSelect } from '@wordpress/data';\nimport { SearchControl } from '@wordpress/components';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { useEffect, useState } from '@wordpress/element';\nimport { useDebounce } from '@wordpress/compose';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport BlockManagerCategory from './category';\nimport { store as editPostStore } from '../../store';\n\nfunction BlockManager( {\n\tblockTypes,\n\tcategories,\n\thasBlockSupport,\n\tisMatchingSearchTerm,\n\tnumberOfHiddenBlocks,\n} ) {\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\tconst [ search, setSearch ] = useState( '' );\n\n\t// Filtering occurs here (as opposed to `withSelect`) to avoid\n\t// wasted renders by consequence of `Array#filter` producing\n\t// a new value reference on each call.\n\tblockTypes = blockTypes.filter(\n\t\t( blockType ) =>\n\t\t\thasBlockSupport( blockType, 'inserter', true ) &&\n\t\t\t( ! search || isMatchingSearchTerm( blockType, search ) ) &&\n\t\t\t( ! blockType.parent ||\n\t\t\t\tincludes( blockType.parent, 'core/post-content' ) )\n\t);\n\n\t// Announce search results on change\n\tuseEffect( () => {\n\t\tif ( ! search ) {\n\t\t\treturn;\n\t\t}\n\t\tconst count = blockTypes.length;\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', count ),\n\t\t\tcount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ blockTypes.length, search, debouncedSpeak ] );\n\n\treturn (\n\t\t<div className=\"edit-post-block-manager__content\">\n\t\t\t{ !! numberOfHiddenBlocks && (\n\t\t\t\t<div className=\"edit-post-block-manager__disabled-blocks-count\">\n\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t/* translators: %d: number of blocks. */\n\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t'%d block is hidden.',\n\t\t\t\t\t\t\t'%d blocks are hidden.',\n\t\t\t\t\t\t\tnumberOfHiddenBlocks\n\t\t\t\t\t\t),\n\t\t\t\t\t\tnumberOfHiddenBlocks\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<SearchControl\n\t\t\t\tlabel={ __( 'Search for a block' ) }\n\t\t\t\tplaceholder={ __( 'Search for a block' ) }\n\t\t\t\tvalue={ search }\n\t\t\t\tonChange={ ( nextSearch ) => setSearch( nextSearch ) }\n\t\t\t\tclassName=\"edit-post-block-manager__search\"\n\t\t\t/>\n\t\t\t<div\n\t\t\t\ttabIndex=\"0\"\n\t\t\t\trole=\"region\"\n\t\t\t\taria-label={ __( 'Available block types' ) }\n\t\t\t\tclassName=\"edit-post-block-manager__results\"\n\t\t\t>\n\t\t\t\t{ blockTypes.length === 0 && (\n\t\t\t\t\t<p className=\"edit-post-block-manager__no-results\">\n\t\t\t\t\t\t{ __( 'No blocks found.' ) }\n\t\t\t\t\t</p>\n\t\t\t\t) }\n\t\t\t\t{ categories.map( ( category ) => (\n\t\t\t\t\t<BlockManagerCategory\n\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\tblockTypes={ filter( blockTypes, {\n\t\t\t\t\t\t\tcategory: category.slug,\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t\t<BlockManagerCategory\n\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t\tblockTypes={ filter(\n\t\t\t\t\t\tblockTypes,\n\t\t\t\t\t\t( { category } ) => ! category\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default withSelect( ( select ) => {\n\tconst {\n\t\tgetBlockTypes,\n\t\tgetCategories,\n\t\thasBlockSupport,\n\t\tisMatchingSearchTerm,\n\t} = select( blocksStore );\n\tconst { getPreference } = select( editPostStore );\n\tconst hiddenBlockTypes = getPreference( 'hiddenBlockTypes' );\n\tconst numberOfHiddenBlocks =\n\t\tisArray( hiddenBlockTypes ) && hiddenBlockTypes.length;\n\n\treturn {\n\t\tblockTypes: getBlockTypes(),\n\t\tcategories: getCategories(),\n\t\thasBlockSupport,\n\t\tisMatchingSearchTerm,\n\t\tnumberOfHiddenBlocks,\n\t};\n} )( BlockManager );\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalNavigatorProvider as NavigatorProvider,\n\t__experimentalNavigatorScreen as NavigatorScreen,\n\t__experimentalNavigatorButton as NavigatorButton,\n\t__experimentalNavigatorBackButton as NavigatorBackButton,\n\t__experimentalItemGroup as ItemGroup,\n\t__experimentalItem as Item,\n\t__experimentalHStack as HStack,\n\t__experimentalText as Text,\n\t__experimentalTruncate as Truncate,\n\tFlexItem,\n\tModal,\n\tTabPanel,\n\tCard,\n\tCardHeader,\n\tCardBody,\n} from '@wordpress/components';\nimport { isRTL, __ } from '@wordpress/i18n';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useMemo, useCallback, useState } from '@wordpress/element';\nimport {\n\tPostTaxonomies,\n\tPostExcerptCheck,\n\tPageAttributesCheck,\n\tPostFeaturedImageCheck,\n\tPostTypeSupportCheck,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { chevronLeft, chevronRight, Icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport Section from './section';\nimport {\n\tEnablePluginDocumentSettingPanelOption,\n\tEnablePublishSidebarOption,\n\tEnablePanelOption,\n\tEnableFeature,\n} from './options';\nimport MetaBoxesSection from './meta-boxes-section';\nimport { store as editPostStore } from '../../store';\nimport BlockManager from '../block-manager';\n\nconst MODAL_NAME = 'edit-post/preferences';\nconst PREFERENCES_MENU = 'preferences-menu';\n\nexport default function PreferencesModal() {\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst { closeModal } = useDispatch( editPostStore );\n\tconst { isModalActive, isViewable } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\t\treturn {\n\t\t\tisModalActive: select( editPostStore ).isModalActive( MODAL_NAME ),\n\t\t\tisViewable: get( postType, [ 'viewable' ], false ),\n\t\t};\n\t}, [] );\n\tconst showBlockBreadcrumbsOption = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditorSettings } = select( editorStore );\n\t\t\tconst { getEditorMode, isFeatureActive } = select( editPostStore );\n\t\t\tconst mode = getEditorMode();\n\t\t\tconst isRichEditingEnabled = getEditorSettings().richEditingEnabled;\n\t\t\tconst hasReducedUI = isFeatureActive( 'reducedUI' );\n\t\t\treturn (\n\t\t\t\t! hasReducedUI &&\n\t\t\t\tisLargeViewport &&\n\t\t\t\tisRichEditingEnabled &&\n\t\t\t\tmode === 'visual'\n\t\t\t);\n\t\t},\n\t\t[ isLargeViewport ]\n\t);\n\tconst sections = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tname: 'general',\n\t\t\t\ttabLabel: __( 'General' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ isLargeViewport && (\n\t\t\t\t\t\t\t<Section\n\t\t\t\t\t\t\t\ttitle={ __( 'Publishing' ) }\n\t\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t\t'Change options related to publishing.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EnablePublishSidebarOption\n\t\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t\t'Review settings, such as visibility and tags.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t\t'Include pre-publish checklist'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t<Section\n\t\t\t\t\t\t\ttitle={ __( 'Appearance' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t'Customize options related to the block editor interface and editing flow.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<EnableFeature\n\t\t\t\t\t\t\t\tfeatureName=\"reducedUI\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Compacts options and outlines in the toolbar.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Reduce the interface' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EnableFeature\n\t\t\t\t\t\t\t\tfeatureName=\"focusMode\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Highlights the current block and fades other content.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Spotlight mode' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EnableFeature\n\t\t\t\t\t\t\t\tfeatureName=\"showIconLabels\"\n\t\t\t\t\t\t\t\thelp={ __( 'Shows text instead of icons.' ) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Display button labels' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EnableFeature\n\t\t\t\t\t\t\t\tfeatureName=\"themeStyles\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Make the editor look like your theme.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Use theme styles' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ showBlockBreadcrumbsOption && (\n\t\t\t\t\t\t\t\t<EnableFeature\n\t\t\t\t\t\t\t\t\tfeatureName=\"showBlockBreadcrumbs\"\n\t\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t\t'Shows block breadcrumbs at the bottom of the editor.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Display block breadcrumbs' ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</Section>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'blocks',\n\t\t\t\ttabLabel: __( 'Blocks' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Section\n\t\t\t\t\t\t\ttitle={ __( 'Block interactions' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t'Customize how you interact with blocks in the block library and editing canvas.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<EnableFeature\n\t\t\t\t\t\t\t\tfeatureName=\"mostUsedBlocks\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Places the most frequent blocks in the block library.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Show most used blocks' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EnableFeature\n\t\t\t\t\t\t\t\tfeatureName=\"keepCaretInsideBlock\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Aids screen readers by stopping text caret from leaving blocks.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Contain text cursor inside block'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t<Section\n\t\t\t\t\t\t\ttitle={ __( 'Visible blocks' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t\"Disable blocks that you don't want to appear in the inserter. They can always be toggled back on later.\"\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockManager />\n\t\t\t\t\t\t</Section>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'panels',\n\t\t\t\ttabLabel: __( 'Panels' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Section\n\t\t\t\t\t\t\ttitle={ __( 'Document settings' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t'Choose what displays in the panel.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<EnablePluginDocumentSettingPanelOption.Slot />\n\t\t\t\t\t\t\t{ isViewable && (\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Permalink' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"post-link\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ isViewable && (\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Template' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"template\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<PostTaxonomies\n\t\t\t\t\t\t\t\ttaxonomyWrapper={ ( content, taxonomy ) => (\n\t\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\t\tlabel={ get( taxonomy, [\n\t\t\t\t\t\t\t\t\t\t\t'labels',\n\t\t\t\t\t\t\t\t\t\t\t'menu_name',\n\t\t\t\t\t\t\t\t\t\t] ) }\n\t\t\t\t\t\t\t\t\t\tpanelName={ `taxonomy-panel-${ taxonomy.slug }` }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PostFeaturedImageCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Featured image' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"featured-image\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostFeaturedImageCheck>\n\t\t\t\t\t\t\t<PostExcerptCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Excerpt' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"post-excerpt\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostExcerptCheck>\n\t\t\t\t\t\t\t<PostTypeSupportCheck\n\t\t\t\t\t\t\t\tsupportKeys={ [ 'comments', 'trackbacks' ] }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Discussion' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"discussion-panel\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostTypeSupportCheck>\n\t\t\t\t\t\t\t<PageAttributesCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Page attributes' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"page-attributes\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PageAttributesCheck>\n\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t<MetaBoxesSection\n\t\t\t\t\t\t\ttitle={ __( 'Additional' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t'Add extra areas to the editor.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\t[ isViewable, isLargeViewport, showBlockBreadcrumbsOption ]\n\t);\n\n\t// This is also used to sync the two different rendered components\n\t// between small and large viewports.\n\tconst [ activeMenu, setActiveMenu ] = useState( PREFERENCES_MENU );\n\t/**\n\t * Create helper objects from `sections` for easier data handling.\n\t * `tabs` is used for creating the `TabPanel` and `sectionsContentMap`\n\t * is used for easier access to active tab's content.\n\t */\n\tconst { tabs, sectionsContentMap } = useMemo(\n\t\t() =>\n\t\t\tsections.reduce(\n\t\t\t\t( accumulator, { name, tabLabel: title, content } ) => {\n\t\t\t\t\taccumulator.tabs.push( { name, title } );\n\t\t\t\t\taccumulator.sectionsContentMap[ name ] = content;\n\t\t\t\t\treturn accumulator;\n\t\t\t\t},\n\t\t\t\t{ tabs: [], sectionsContentMap: {} }\n\t\t\t),\n\t\t[ sections ]\n\t);\n\tconst getCurrentTab = useCallback(\n\t\t( tab ) => sectionsContentMap[ tab.name ] || null,\n\t\t[ sectionsContentMap ]\n\t);\n\tif ( ! isModalActive ) {\n\t\treturn null;\n\t}\n\tlet modalContent;\n\t// We render different components based on the viewport size.\n\tif ( isLargeViewport ) {\n\t\tmodalContent = (\n\t\t\t<TabPanel\n\t\t\t\tclassName=\"edit-post-preferences__tabs\"\n\t\t\t\ttabs={ tabs }\n\t\t\t\tinitialTabName={\n\t\t\t\t\tactiveMenu !== PREFERENCES_MENU ? activeMenu : undefined\n\t\t\t\t}\n\t\t\t\tonSelect={ setActiveMenu }\n\t\t\t\torientation=\"vertical\"\n\t\t\t>\n\t\t\t\t{ getCurrentTab }\n\t\t\t</TabPanel>\n\t\t);\n\t} else {\n\t\tmodalContent = (\n\t\t\t<NavigatorProvider initialPath=\"/\">\n\t\t\t\t<NavigatorScreen path=\"/\">\n\t\t\t\t\t<Card isBorderless size=\"small\">\n\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t<ItemGroup>\n\t\t\t\t\t\t\t\t{ tabs.map( ( tab ) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<NavigatorButton\n\t\t\t\t\t\t\t\t\t\t\tkey={ tab.name }\n\t\t\t\t\t\t\t\t\t\t\tpath={ tab.name }\n\t\t\t\t\t\t\t\t\t\t\tas={ Item }\n\t\t\t\t\t\t\t\t\t\t\tisAction\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<HStack justify=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Truncate>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ tab.title }\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Truncate>\n\t\t\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisRTL()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? chevronLeft\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: chevronRight\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t\t\t\t</NavigatorButton>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t</ItemGroup>\n\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t</Card>\n\t\t\t\t</NavigatorScreen>\n\t\t\t\t{ sections.map( ( section ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<NavigatorScreen\n\t\t\t\t\t\t\tkey={ `${ section.name }-menu` }\n\t\t\t\t\t\t\tpath={ section.name }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Card isBorderless size=\"large\">\n\t\t\t\t\t\t\t\t<CardHeader\n\t\t\t\t\t\t\t\t\tisBorderless={ false }\n\t\t\t\t\t\t\t\t\tjustify=\"left\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tgap=\"6\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<NavigatorBackButton\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\tisRTL() ? chevronRight : chevronLeft\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\taria-label={ __(\n\t\t\t\t\t\t\t\t\t\t\t'Navigate to the previous view'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Text size=\"16\">{ section.tabLabel }</Text>\n\t\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t\t<CardBody>{ section.content }</CardBody>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</NavigatorScreen>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</NavigatorProvider>\n\t\t);\n\t}\n\treturn (\n\t\t<Modal\n\t\t\tclassName=\"edit-post-preferences-modal\"\n\t\t\ttitle={ __( 'Preferences' ) }\n\t\t\tcloseLabel={ __( 'Close' ) }\n\t\t\tonRequestClose={ closeModal }\n\t\t>\n\t\t\t{ modalContent }\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Returns the Post's Edit URL.\n *\n * @param {number} postId Post ID.\n *\n * @return {string} Post edit URL.\n */\nexport function getPostEditURL( postId ) {\n\treturn addQueryArgs( 'post.php', { post: postId, action: 'edit' } );\n}\n\n/**\n * Returns the Post's Trashed URL.\n *\n * @param {number} postId   Post ID.\n * @param {string} postType Post Type.\n *\n * @return {string} Post trashed URL.\n */\nexport function getPostTrashedURL( postId, postType ) {\n\treturn addQueryArgs( 'edit.php', {\n\t\ttrashed: 1,\n\t\tpost_type: postType,\n\t\tids: postId,\n\t} );\n}\n\nexport class BrowserURL extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.state = {\n\t\t\thistoryId: null,\n\t\t};\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { postId, postStatus, postType, isSavingPost } = this.props;\n\t\tconst { historyId } = this.state;\n\n\t\t// Posts are still dirty while saving so wait for saving to finish\n\t\t// to avoid the unsaved changes warning when trashing posts.\n\t\tif ( postStatus === 'trash' && ! isSavingPost ) {\n\t\t\tthis.setTrashURL( postId, postType );\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\t( postId !== prevProps.postId || postId !== historyId ) &&\n\t\t\tpostStatus !== 'auto-draft' &&\n\t\t\tpostId\n\t\t) {\n\t\t\tthis.setBrowserURL( postId );\n\t\t}\n\t}\n\n\t/**\n\t * Navigates the browser to the post trashed URL to show a notice about the trashed post.\n\t *\n\t * @param {number} postId   Post ID.\n\t * @param {string} postType Post Type.\n\t */\n\tsetTrashURL( postId, postType ) {\n\t\twindow.location.href = getPostTrashedURL( postId, postType );\n\t}\n\n\t/**\n\t * Replaces the browser URL with a post editor link for the given post ID.\n\t *\n\t * Note it is important that, since this function may be called when the\n\t * editor first loads, the result generated `getPostEditURL` matches that\n\t * produced by the server. Otherwise, the URL will change unexpectedly.\n\t *\n\t * @param {number} postId Post ID for which to generate post editor URL.\n\t */\n\tsetBrowserURL( postId ) {\n\t\twindow.history.replaceState(\n\t\t\t{ id: postId },\n\t\t\t'Post ' + postId,\n\t\t\tgetPostEditURL( postId )\n\t\t);\n\n\t\tthis.setState( () => ( {\n\t\t\thistoryId: postId,\n\t\t} ) );\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getCurrentPost, isSavingPost } = select( editorStore );\n\tconst post = getCurrentPost();\n\tlet { id, status, type } = post;\n\tconst isTemplate = [ 'wp_template', 'wp_template_part' ].includes( type );\n\tif ( isTemplate ) {\n\t\tid = post.wp_id;\n\t}\n\n\treturn {\n\t\tpostId: id,\n\t\tpostStatus: status,\n\t\tpostType: type,\n\t\tisSavingPost: isSavingPost(),\n\t};\n} )( BrowserURL );\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst wordpress = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 24 24\">\n\t\t<Path d=\"M20 10c0-5.51-4.49-10-10-10C4.48 0 0 4.49 0 10c0 5.52 4.48 10 10 10 5.51 0 10-4.48 10-10zM7.78 15.37L4.37 6.22c.55-.02 1.17-.08 1.17-.08.5-.06.44-1.13-.06-1.11 0 0-1.45.11-2.37.11-.18 0-.37 0-.58-.01C4.12 2.69 6.87 1.11 10 1.11c2.33 0 4.45.87 6.05 2.34-.68-.11-1.65.39-1.65 1.58 0 .74.45 1.36.9 2.1.35.61.55 1.36.55 2.46 0 1.49-1.4 5-1.4 5l-3.03-8.37c.54-.02.82-.17.82-.17.5-.05.44-1.25-.06-1.22 0 0-1.44.12-2.38.12-.87 0-2.33-.12-2.33-.12-.5-.03-.56 1.2-.06 1.22l.92.08 1.26 3.41zM17.41 10c.24-.64.74-1.87.43-4.25.7 1.29 1.05 2.71 1.05 4.25 0 3.29-1.73 6.24-4.4 7.78.97-2.59 1.94-5.2 2.92-7.78zM6.1 18.09C3.12 16.65 1.11 13.53 1.11 10c0-1.3.23-2.48.72-3.59C3.25 10.3 4.67 14.2 6.1 18.09zm4.03-6.63l2.58 6.98c-.86.29-1.76.45-2.71.45-.79 0-1.57-.11-2.29-.33.81-2.38 1.62-4.74 2.42-7.1z\" />\n\t</SVG>\n);\n\nexport default wordpress;\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\tButton,\n\tIcon,\n\t__unstableMotion as motion,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { wordpress } from '@wordpress/icons';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useReducedMotion } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nfunction FullscreenModeClose( { showTooltip, icon, href } ) {\n\tconst { isActive, isRequestingSiteIcon, postType, siteIconUrl } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPostType } = select( editorStore );\n\t\t\tconst { isFeatureActive } = select( editPostStore );\n\t\t\tconst { getEntityRecord, getPostType, isResolving } = select(\n\t\t\t\tcoreStore\n\t\t\t);\n\t\t\tconst siteData =\n\t\t\t\tgetEntityRecord( 'root', '__unstableBase', undefined ) || {};\n\n\t\t\treturn {\n\t\t\t\tisActive: isFeatureActive( 'fullscreenMode' ),\n\t\t\t\tisRequestingSiteIcon: isResolving( 'getEntityRecord', [\n\t\t\t\t\t'root',\n\t\t\t\t\t'__unstableBase',\n\t\t\t\t\tundefined,\n\t\t\t\t] ),\n\t\t\t\tpostType: getPostType( getCurrentPostType() ),\n\t\t\t\tsiteIconUrl: siteData.site_icon_url,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst disableMotion = useReducedMotion();\n\n\tif ( ! isActive || ! postType ) {\n\t\treturn null;\n\t}\n\n\tlet buttonIcon = <Icon size=\"36px\" icon={ wordpress } />;\n\n\tconst effect = {\n\t\texpand: {\n\t\t\tscale: 1.25,\n\t\t\ttransition: { type: 'tween', duration: '0.3' },\n\t\t},\n\t};\n\n\tif ( siteIconUrl ) {\n\t\tbuttonIcon = (\n\t\t\t<motion.img\n\t\t\t\tvariants={ ! disableMotion && effect }\n\t\t\t\talt={ __( 'Site Icon' ) }\n\t\t\t\tclassName=\"edit-post-fullscreen-mode-close_site-icon\"\n\t\t\t\tsrc={ siteIconUrl }\n\t\t\t/>\n\t\t);\n\t}\n\n\tif ( isRequestingSiteIcon ) {\n\t\tbuttonIcon = null;\n\t}\n\n\t// Override default icon if custom icon is provided via props.\n\tif ( icon ) {\n\t\tbuttonIcon = <Icon size=\"36px\" icon={ icon } />;\n\t}\n\n\tconst classes = classnames( {\n\t\t'edit-post-fullscreen-mode-close': true,\n\t\t'has-icon': siteIconUrl,\n\t} );\n\n\treturn (\n\t\t<motion.div whileHover=\"expand\">\n\t\t\t<Button\n\t\t\t\tclassName={ classes }\n\t\t\t\thref={\n\t\t\t\t\thref ??\n\t\t\t\t\taddQueryArgs( 'edit.php', {\n\t\t\t\t\t\tpost_type: postType.slug,\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t\tlabel={ get(\n\t\t\t\t\tpostType,\n\t\t\t\t\t[ 'labels', 'view_items' ],\n\t\t\t\t\t__( 'Back' )\n\t\t\t\t) }\n\t\t\t\tshowTooltip={ showTooltip }\n\t\t\t>\n\t\t\t\t{ buttonIcon }\n\t\t\t</Button>\n\t\t</motion.div>\n\t);\n}\n\nexport default FullscreenModeClose;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst listView = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M13.8 5.2H3v1.5h10.8V5.2zm-3.6 12v1.5H21v-1.5H10.2zm7.2-6H6.6v1.5h10.8v-1.5z\" />\n\t</SVG>\n);\n\nexport default listView;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst plus = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18 11.2h-5.2V6h-1.6v5.2H6v1.6h5.2V18h1.6v-5.2H18z\" />\n\t</SVG>\n);\n\nexport default plus;\n","/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tNavigableToolbar,\n\tToolSelector,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport {\n\tTableOfContents,\n\tEditorHistoryRedo,\n\tEditorHistoryUndo,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport { Button, ToolbarItem } from '@wordpress/components';\nimport { listView, plus } from '@wordpress/icons';\nimport { useRef, useCallback } from '@wordpress/element';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nconst preventDefault = ( event ) => {\n\tevent.preventDefault();\n};\n\nfunction HeaderToolbar() {\n\tconst inserterButton = useRef();\n\tconst { setIsInserterOpened, setIsListViewOpened } = useDispatch(\n\t\teditPostStore\n\t);\n\tconst {\n\t\tisInserterEnabled,\n\t\tisInserterOpened,\n\t\tisTextModeEnabled,\n\t\tshowIconLabels,\n\t\tisListViewOpen,\n\t\tlistViewShortcut,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\thasInserterItems,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockSelectionEnd,\n\t\t} = select( blockEditorStore );\n\t\tconst { getEditorSettings } = select( editorStore );\n\t\tconst { getEditorMode, isFeatureActive, isListViewOpened } = select(\n\t\t\teditPostStore\n\t\t);\n\t\tconst { getShortcutRepresentation } = select( keyboardShortcutsStore );\n\n\t\treturn {\n\t\t\t// This setting (richEditingEnabled) should not live in the block editor's setting.\n\t\t\tisInserterEnabled:\n\t\t\t\tgetEditorMode() === 'visual' &&\n\t\t\t\tgetEditorSettings().richEditingEnabled &&\n\t\t\t\thasInserterItems(\n\t\t\t\t\tgetBlockRootClientId( getBlockSelectionEnd() )\n\t\t\t\t),\n\t\t\tisInserterOpened: select( editPostStore ).isInserterOpened(),\n\t\t\tisTextModeEnabled: getEditorMode() === 'text',\n\t\t\tshowIconLabels: isFeatureActive( 'showIconLabels' ),\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t\tlistViewShortcut: getShortcutRepresentation(\n\t\t\t\t'core/edit-post/toggle-list-view'\n\t\t\t),\n\t\t};\n\t}, [] );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst isWideViewport = useViewportMatch( 'wide' );\n\n\t/* translators: accessibility text for the editor toolbar */\n\tconst toolbarAriaLabel = __( 'Document tools' );\n\n\tconst toggleListView = useCallback(\n\t\t() => setIsListViewOpened( ! isListViewOpen ),\n\t\t[ setIsListViewOpened, isListViewOpen ]\n\t);\n\tconst overflowItems = (\n\t\t<>\n\t\t\t<ToolbarItem\n\t\t\t\tas={ TableOfContents }\n\t\t\t\thasOutlineItemsDisabled={ isTextModeEnabled }\n\t\t\t\trepositionDropdown={ showIconLabels && ! isWideViewport }\n\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t/>\n\t\t\t<ToolbarItem\n\t\t\t\tas={ Button }\n\t\t\t\tclassName=\"edit-post-header-toolbar__list-view-toggle\"\n\t\t\t\ticon={ listView }\n\t\t\t\tdisabled={ isTextModeEnabled }\n\t\t\t\tisPressed={ isListViewOpen }\n\t\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\t\tlabel={ __( 'List View' ) }\n\t\t\t\tonClick={ toggleListView }\n\t\t\t\tshortcut={ listViewShortcut }\n\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t/>\n\t\t</>\n\t);\n\tconst openInserter = useCallback( () => {\n\t\tif ( isInserterOpened ) {\n\t\t\t// Focusing the inserter button closes the inserter popover\n\t\t\tinserterButton.current.focus();\n\t\t} else {\n\t\t\tsetIsInserterOpened( true );\n\t\t}\n\t}, [ isInserterOpened, setIsInserterOpened ] );\n\treturn (\n\t\t<NavigableToolbar\n\t\t\tclassName=\"edit-post-header-toolbar\"\n\t\t\taria-label={ toolbarAriaLabel }\n\t\t>\n\t\t\t<div className=\"edit-post-header-toolbar__left\">\n\t\t\t\t<ToolbarItem\n\t\t\t\t\tref={ inserterButton }\n\t\t\t\t\tas={ Button }\n\t\t\t\t\tclassName=\"edit-post-header-toolbar__inserter-toggle\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tisPressed={ isInserterOpened }\n\t\t\t\t\tonMouseDown={ preventDefault }\n\t\t\t\t\tonClick={ openInserter }\n\t\t\t\t\tdisabled={ ! isInserterEnabled }\n\t\t\t\t\ticon={ plus }\n\t\t\t\t\t/* translators: button label text should, if possible, be under 16\n\t\t\tcharacters. */\n\t\t\t\t\tlabel={ _x(\n\t\t\t\t\t\t'Toggle block inserter',\n\t\t\t\t\t\t'Generic label for block inserter button'\n\t\t\t\t\t) }\n\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t>\n\t\t\t\t\t{ showIconLabels &&\n\t\t\t\t\t\t( ! isInserterOpened ? __( 'Add' ) : __( 'Close' ) ) }\n\t\t\t\t</ToolbarItem>\n\t\t\t\t{ ( isWideViewport || ! showIconLabels ) && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ isLargeViewport && (\n\t\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\t\tas={ ToolSelector }\n\t\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tshowIconLabels ? 'tertiary' : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisabled={ isTextModeEnabled }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryUndo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryRedo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ overflowItems }\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</NavigableToolbar>\n\t);\n}\n\nexport default HeaderToolbar;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItemsChoice, MenuGroup } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Set of available mode options.\n *\n * @type {Array}\n */\nconst MODES = [\n\t{\n\t\tvalue: 'visual',\n\t\tlabel: __( 'Visual editor' ),\n\t},\n\t{\n\t\tvalue: 'text',\n\t\tlabel: __( 'Code editor' ),\n\t},\n];\n\nfunction ModeSwitcher() {\n\tconst {\n\t\tshortcut,\n\t\tisRichEditingEnabled,\n\t\tisCodeEditingEnabled,\n\t\tisEditingTemplate,\n\t\tmode,\n\t} = useSelect(\n\t\t( select ) => ( {\n\t\t\tshortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getShortcutRepresentation( 'core/edit-post/toggle-mode' ),\n\t\t\tisRichEditingEnabled: select( editorStore ).getEditorSettings()\n\t\t\t\t.richEditingEnabled,\n\t\t\tisCodeEditingEnabled: select( editorStore ).getEditorSettings()\n\t\t\t\t.codeEditingEnabled,\n\t\t\tisEditingTemplate: select( editPostStore ).isEditingTemplate(),\n\t\t\tmode: select( editPostStore ).getEditorMode(),\n\t\t} ),\n\t\t[]\n\t);\n\tconst { switchEditorMode } = useDispatch( editPostStore );\n\n\tif ( isEditingTemplate ) {\n\t\treturn null;\n\t}\n\n\tif ( ! isRichEditingEnabled || ! isCodeEditingEnabled ) {\n\t\treturn null;\n\t}\n\n\tconst choices = MODES.map( ( choice ) => {\n\t\tif ( choice.value !== mode ) {\n\t\t\treturn { ...choice, shortcut };\n\t\t}\n\t\treturn choice;\n\t} );\n\n\treturn (\n\t\t<MenuGroup label={ __( 'Editor' ) }>\n\t\t\t<MenuItemsChoice\n\t\t\t\tchoices={ choices }\n\t\t\t\tvalue={ mode }\n\t\t\t\tonSelect={ switchEditorMode }\n\t\t\t/>\n\t\t</MenuGroup>\n\t);\n}\n\nexport default ModeSwitcher;\n","/**\n * WordPress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { MenuItem } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nexport default function PreferencesMenuItem() {\n\tconst { openModal } = useDispatch( editPostStore );\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={ () => {\n\t\t\t\topenModal( 'edit-post/preferences' );\n\t\t\t} }\n\t\t>\n\t\t\t{ __( 'Preferences' ) }\n\t\t</MenuItem>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { MenuGroup } from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { MoreMenuFeatureToggle } from '@wordpress/interface';\n\nfunction WritingMenu() {\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tif ( ! isLargeViewport ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<MenuGroup label={ _x( 'View', 'noun' ) }>\n\t\t\t<MoreMenuFeatureToggle\n\t\t\t\tscope=\"core/edit-post\"\n\t\t\t\tfeature=\"fixedToolbar\"\n\t\t\t\tlabel={ __( 'Top toolbar' ) }\n\t\t\t\tinfo={ __(\n\t\t\t\t\t'Access all block and document tools in a single place'\n\t\t\t\t) }\n\t\t\t\tmessageActivated={ __( 'Top toolbar activated' ) }\n\t\t\t\tmessageDeactivated={ __( 'Top toolbar deactivated' ) }\n\t\t\t/>\n\t\t\t<MoreMenuFeatureToggle\n\t\t\t\tscope=\"core/edit-post\"\n\t\t\t\tfeature=\"focusMode\"\n\t\t\t\tlabel={ __( 'Spotlight mode' ) }\n\t\t\t\tinfo={ __( 'Focus on one block at a time' ) }\n\t\t\t\tmessageActivated={ __( 'Spotlight mode activated' ) }\n\t\t\t\tmessageDeactivated={ __( 'Spotlight mode deactivated' ) }\n\t\t\t/>\n\t\t\t<MoreMenuFeatureToggle\n\t\t\t\tscope=\"core/edit-post\"\n\t\t\t\tfeature=\"fullscreenMode\"\n\t\t\t\tlabel={ __( 'Fullscreen mode' ) }\n\t\t\t\tinfo={ __( 'Work without distraction' ) }\n\t\t\t\tmessageActivated={ __( 'Fullscreen mode activated' ) }\n\t\t\t\tmessageDeactivated={ __( 'Fullscreen mode deactivated' ) }\n\t\t\t\tshortcut={ displayShortcut.secondary( 'f' ) }\n\t\t\t/>\n\t\t</MenuGroup>\n\t);\n}\n\nexport default WritingMenu;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuGroup } from '@wordpress/components';\nimport {\n\tActionItem,\n\tMoreMenuDropdown,\n\tPinnedItems,\n} from '@wordpress/interface';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport ModeSwitcher from '../mode-switcher';\nimport PreferencesMenuItem from '../preferences-menu-item';\nimport ToolsMoreMenuGroup from '../tools-more-menu-group';\nimport WritingMenu from '../writing-menu';\n\nconst POPOVER_PROPS = {\n\tclassName: 'edit-post-more-menu__content',\n};\n\nconst MoreMenu = ( { showIconLabels } ) => {\n\tconst isLargeViewport = useViewportMatch( 'large' );\n\n\treturn (\n\t\t<MoreMenuDropdown\n\t\t\tclassName=\"edit-post-more-menu\"\n\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\ttoggleProps={ {\n\t\t\t\tshowTooltip: ! showIconLabels,\n\t\t\t\t...( showIconLabels && { variant: 'tertiary' } ),\n\t\t\t} }\n\t\t>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t{ showIconLabels && ! isLargeViewport && (\n\t\t\t\t\t\t<PinnedItems.Slot\n\t\t\t\t\t\t\tclassName={ showIconLabels && 'show-icon-labels' }\n\t\t\t\t\t\t\tscope=\"core/edit-post\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<WritingMenu />\n\t\t\t\t\t<ModeSwitcher />\n\t\t\t\t\t<ActionItem.Slot\n\t\t\t\t\t\tname=\"core/edit-post/plugin-more-menu\"\n\t\t\t\t\t\tlabel={ __( 'Plugins' ) }\n\t\t\t\t\t\tas={ MenuGroup }\n\t\t\t\t\t\tfillProps={ { onClick: onClose } }\n\t\t\t\t\t/>\n\t\t\t\t\t<ToolsMoreMenuGroup.Slot fillProps={ { onClose } } />\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t<PreferencesMenuItem />\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</MoreMenuDropdown>\n\t);\n};\n\nexport default MoreMenu;\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useViewportMatch, compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { PostPublishButton, store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nexport function PostPublishButtonOrToggle( {\n\tforceIsDirty,\n\tforceIsSaving,\n\thasPublishAction,\n\tisBeingScheduled,\n\tisPending,\n\tisPublished,\n\tisPublishSidebarEnabled,\n\tisPublishSidebarOpened,\n\tisScheduled,\n\ttogglePublishSidebar,\n\tsetEntitiesSavedStatesCallback,\n} ) {\n\tconst IS_TOGGLE = 'toggle';\n\tconst IS_BUTTON = 'button';\n\tconst isSmallerThanMediumViewport = useViewportMatch( 'medium', '<' );\n\tlet component;\n\n\t/**\n\t * Conditions to show a BUTTON (publish directly) or a TOGGLE (open publish sidebar):\n\t *\n\t * 1) We want to show a BUTTON when the post status is at the _final stage_\n\t * for a particular role (see https://wordpress.org/support/article/post-status/):\n\t *\n\t * - is published\n\t * - is scheduled to be published\n\t * - is pending and can't be published (but only for viewports >= medium).\n\t * \t Originally, we considered showing a button for pending posts that couldn't be published\n\t * \t (for example, for an author with the contributor role). Some languages can have\n\t * \t long translations for \"Submit for review\", so given the lack of UI real estate available\n\t * \t we decided to take into account the viewport in that case.\n\t *  \t See: https://github.com/WordPress/gutenberg/issues/10475\n\t *\n\t * 2) Then, in small viewports, we'll show a TOGGLE.\n\t *\n\t * 3) Finally, we'll use the publish sidebar status to decide:\n\t *\n\t * - if it is enabled, we show a TOGGLE\n\t * - if it is disabled, we show a BUTTON\n\t */\n\tif (\n\t\tisPublished ||\n\t\t( isScheduled && isBeingScheduled ) ||\n\t\t( isPending && ! hasPublishAction && ! isSmallerThanMediumViewport )\n\t) {\n\t\tcomponent = IS_BUTTON;\n\t} else if ( isSmallerThanMediumViewport ) {\n\t\tcomponent = IS_TOGGLE;\n\t} else if ( isPublishSidebarEnabled ) {\n\t\tcomponent = IS_TOGGLE;\n\t} else {\n\t\tcomponent = IS_BUTTON;\n\t}\n\n\treturn (\n\t\t<PostPublishButton\n\t\t\tforceIsDirty={ forceIsDirty }\n\t\t\tforceIsSaving={ forceIsSaving }\n\t\t\tisOpen={ isPublishSidebarOpened }\n\t\t\tisToggle={ component === IS_TOGGLE }\n\t\t\tonToggle={ togglePublishSidebar }\n\t\t\tsetEntitiesSavedStatesCallback={ setEntitiesSavedStatesCallback }\n\t\t/>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select ) => ( {\n\t\thasPublishAction: get(\n\t\t\tselect( editorStore ).getCurrentPost(),\n\t\t\t[ '_links', 'wp:action-publish' ],\n\t\t\tfalse\n\t\t),\n\t\tisBeingScheduled: select( editorStore ).isEditedPostBeingScheduled(),\n\t\tisPending: select( editorStore ).isCurrentPostPending(),\n\t\tisPublished: select( editorStore ).isCurrentPostPublished(),\n\t\tisPublishSidebarEnabled: select(\n\t\t\teditorStore\n\t\t).isPublishSidebarEnabled(),\n\t\tisPublishSidebarOpened: select(\n\t\t\teditPostStore\n\t\t).isPublishSidebarOpened(),\n\t\tisScheduled: select( editorStore ).isCurrentPostScheduled(),\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { togglePublishSidebar } = dispatch( editPostStore );\n\t\treturn {\n\t\t\ttogglePublishSidebar,\n\t\t};\n\t} )\n)( PostPublishButtonOrToggle );\n","/**\n * WordPress dependencies\n */\nimport { Icon, MenuGroup } from '@wordpress/components';\nimport { PostPreviewButton, store as editorStore } from '@wordpress/editor';\nimport { external } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\nimport { __experimentalPreviewOptions as PreviewOptions } from '@wordpress/block-editor';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nexport default function DevicePreview() {\n\tconst {\n\t\thasActiveMetaboxes,\n\t\tisPostSaveable,\n\t\tisSaving,\n\t\tdeviceType,\n\t} = useSelect(\n\t\t( select ) => ( {\n\t\t\thasActiveMetaboxes: select( editPostStore ).hasMetaBoxes(),\n\t\t\tisSaving: select( editPostStore ).isSavingMetaBoxes(),\n\t\t\tisPostSaveable: select( editorStore ).isEditedPostSaveable(),\n\t\t\tdeviceType: select(\n\t\t\t\teditPostStore\n\t\t\t).__experimentalGetPreviewDeviceType(),\n\t\t} ),\n\t\t[]\n\t);\n\tconst {\n\t\t__experimentalSetPreviewDeviceType: setPreviewDeviceType,\n\t} = useDispatch( editPostStore );\n\n\treturn (\n\t\t<PreviewOptions\n\t\t\tisEnabled={ isPostSaveable }\n\t\t\tclassName=\"edit-post-post-preview-dropdown\"\n\t\t\tdeviceType={ deviceType }\n\t\t\tsetDeviceType={ setPreviewDeviceType }\n\t\t>\n\t\t\t<MenuGroup>\n\t\t\t\t<div className=\"edit-post-header-preview__grouping-external\">\n\t\t\t\t\t<PostPreviewButton\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'edit-post-header-preview__button-external'\n\t\t\t\t\t\t}\n\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\tforceIsAutosaveable={ hasActiveMetaboxes }\n\t\t\t\t\t\tforcePreviewLink={ isSaving ? null : undefined }\n\t\t\t\t\t\ttextContent={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{ __( 'Preview in new tab' ) }\n\t\t\t\t\t\t\t\t<Icon icon={ external } />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</MenuGroup>\n\t\t</PreviewOptions>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalUseSlot as useSlot,\n\tcreateSlotFill,\n} from '@wordpress/components';\n\nconst slotName = '__experimentalMainDashboardButton';\n\nconst { Fill, Slot: MainDashboardButtonSlot } = createSlotFill( slotName );\n\nconst MainDashboardButton = Fill;\n\nconst Slot = ( { children } ) => {\n\tconst slot = useSlot( slotName );\n\tconst hasFills = Boolean( slot.fills && slot.fills.length );\n\n\tif ( ! hasFills ) {\n\t\treturn children;\n\t}\n\n\treturn <MainDashboardButtonSlot bubblesVirtually />;\n};\n\nMainDashboardButton.Slot = Slot;\n\nexport default MainDashboardButton;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronDown = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M17.5 11.6L12 16l-5.5-4.4.9-1.2L12 14l4.5-3.6 1 1.2z\" />\n\t</SVG>\n);\n\nexport default chevronDown;\n","/**\n * External dependencies\n */\nimport { pickBy } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tMenuGroup,\n\tMenuItem,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nexport default function DeleteTemplate() {\n\tconst { clearSelectedBlock } = useDispatch( blockEditorStore );\n\tconst { setIsEditingTemplate } = useDispatch( editPostStore );\n\tconst { getEditorSettings } = useSelect( editorStore );\n\tconst { updateEditorSettings, editPost } = useDispatch( editorStore );\n\tconst { deleteEntityRecord } = useDispatch( coreStore );\n\tconst { template } = useSelect( ( select ) => {\n\t\tconst { isEditingTemplate, getEditedPostTemplate } = select(\n\t\t\teditPostStore\n\t\t);\n\t\tconst _isEditing = isEditingTemplate();\n\t\treturn {\n\t\t\ttemplate: _isEditing ? getEditedPostTemplate() : null,\n\t\t};\n\t}, [] );\n\tconst [ showConfirmDialog, setShowConfirmDialog ] = useState( false );\n\n\tif ( ! template || ! template.wp_id ) {\n\t\treturn null;\n\t}\n\tlet templateTitle = template.slug;\n\tif ( template?.title ) {\n\t\ttemplateTitle = template.title;\n\t}\n\n\tconst onDelete = () => {\n\t\tclearSelectedBlock();\n\t\tsetIsEditingTemplate( false );\n\t\tsetShowConfirmDialog( false );\n\n\t\teditPost( {\n\t\t\ttemplate: '',\n\t\t} );\n\t\tconst settings = getEditorSettings();\n\t\tconst newAvailableTemplates = pickBy(\n\t\t\tsettings.availableTemplates,\n\t\t\t( _title, id ) => {\n\t\t\t\treturn id !== template.slug;\n\t\t\t}\n\t\t);\n\t\tupdateEditorSettings( {\n\t\t\t...settings,\n\t\t\tavailableTemplates: newAvailableTemplates,\n\t\t} );\n\t\tdeleteEntityRecord( 'postType', 'wp_template', template.id );\n\t};\n\n\treturn (\n\t\t<MenuGroup className=\"edit-post-template-top-area__second-menu-group\">\n\t\t\t<>\n\t\t\t\t<MenuItem\n\t\t\t\t\tclassName=\"edit-post-template-top-area__delete-template-button\"\n\t\t\t\t\tisDestructive\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\taria-label={ __( 'Delete template' ) }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tsetShowConfirmDialog( true );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Delete template' ) }\n\t\t\t\t</MenuItem>\n\t\t\t\t<ConfirmDialog\n\t\t\t\t\tisOpen={ showConfirmDialog }\n\t\t\t\t\tonConfirm={ onDelete }\n\t\t\t\t\tonCancel={ () => {\n\t\t\t\t\t\tsetShowConfirmDialog( false );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t/* translators: %s: template name */\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'Are you sure you want to delete the %s template? It may be used by other pages or posts.'\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttemplateTitle\n\t\t\t\t\t) }\n\t\t\t\t</ConfirmDialog>\n\t\t\t</>\n\t\t</MenuGroup>\n\t);\n}\n","/**\n * External dependencies\n */\nimport { mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { TextControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nexport default function EditTemplateTitle() {\n\tconst { template } = useSelect( ( select ) => {\n\t\tconst { getEditedPostTemplate } = select( editPostStore );\n\t\treturn {\n\t\t\ttemplate: getEditedPostTemplate(),\n\t\t};\n\t}, [] );\n\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst { getEditorSettings } = useSelect( editorStore );\n\tconst { updateEditorSettings } = useDispatch( editorStore );\n\n\tif ( template.has_theme_file ) {\n\t\treturn null;\n\t}\n\n\tlet templateTitle = __( 'Default' );\n\tif ( template?.title ) {\n\t\ttemplateTitle = template.title;\n\t} else if ( !! template ) {\n\t\ttemplateTitle = template.slug;\n\t}\n\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Title' ) }\n\t\t\tvalue={ templateTitle }\n\t\t\thelp={ __(\n\t\t\t\t'Give the template a title that indicates its purpose, e.g. \"Full Width\".'\n\t\t\t) }\n\t\t\tonChange={ ( newTitle ) => {\n\t\t\t\tconst settings = getEditorSettings();\n\t\t\t\tconst newAvailableTemplates = mapValues(\n\t\t\t\t\tsettings.availableTemplates,\n\t\t\t\t\t( existingTitle, id ) => {\n\t\t\t\t\t\tif ( id !== template.slug ) {\n\t\t\t\t\t\t\treturn existingTitle;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newTitle;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tupdateEditorSettings( {\n\t\t\t\t\t...settings,\n\t\t\t\t\tavailableTemplates: newAvailableTemplates,\n\t\t\t\t} );\n\t\t\t\teditEntityRecord( 'postType', 'wp_template', template.id, {\n\t\t\t\t\ttitle: newTitle,\n\t\t\t\t} );\n\t\t\t} }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\t__experimentalHeading as Heading,\n\t__experimentalText as Text,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nexport default function TemplateDescription() {\n\tconst { description, title } = useSelect( ( select ) => {\n\t\tconst { getEditedPostTemplate } = select( editPostStore );\n\t\treturn {\n\t\t\ttitle: getEditedPostTemplate().title,\n\t\t\tdescription: getEditedPostTemplate().description,\n\t\t};\n\t}, [] );\n\tif ( ! description ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Heading level={ 4 } weight={ 600 }>\n\t\t\t\t{ title }\n\t\t\t</Heading>\n\t\t\t<Text\n\t\t\t\tclassName=\"edit-post-template-details__description\"\n\t\t\t\tsize=\"body\"\n\t\t\t\tas=\"p\"\n\t\t\t\tstyle={ { marginTop: '12px' } }\n\t\t\t>\n\t\t\t\t{ description }\n\t\t\t</Text>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tDropdown,\n\tButton,\n\t__experimentalText as Text,\n} from '@wordpress/components';\nimport { chevronDown } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as editorStore } from '@wordpress/editor';\nimport DeleteTemplate from './delete-template';\nimport EditTemplateTitle from './edit-template-title';\nimport TemplateDescription from './template-description';\n\nfunction TemplateTitle() {\n\tconst { template, isEditing, title } = useSelect( ( select ) => {\n\t\tconst { isEditingTemplate, getEditedPostTemplate } = select(\n\t\t\teditPostStore\n\t\t);\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\n\t\tconst _isEditing = isEditingTemplate();\n\n\t\treturn {\n\t\t\ttemplate: _isEditing ? getEditedPostTemplate() : null,\n\t\t\tisEditing: _isEditing,\n\t\t\ttitle: getEditedPostAttribute( 'title' )\n\t\t\t\t? getEditedPostAttribute( 'title' )\n\t\t\t\t: __( 'Untitled' ),\n\t\t};\n\t}, [] );\n\n\tconst { clearSelectedBlock } = useDispatch( blockEditorStore );\n\tconst { setIsEditingTemplate } = useDispatch( editPostStore );\n\n\tif ( ! isEditing || ! template ) {\n\t\treturn null;\n\t}\n\n\tlet templateTitle = __( 'Default' );\n\tif ( template?.title ) {\n\t\ttemplateTitle = template.title;\n\t} else if ( !! template ) {\n\t\ttemplateTitle = template.slug;\n\t}\n\n\tconst hasOptions = !! (\n\t\ttemplate.custom ||\n\t\ttemplate.wp_id ||\n\t\ttemplate.description\n\t);\n\n\treturn (\n\t\t<div className=\"edit-post-template-top-area\">\n\t\t\t<Button\n\t\t\t\tclassName=\"edit-post-template-post-title\"\n\t\t\t\tisLink\n\t\t\t\tshowTooltip\n\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t/* translators: %s: Title of the referring post, e.g: \"Hello World!\" */\n\t\t\t\t\t__( 'Edit %s' ),\n\t\t\t\t\ttitle\n\t\t\t\t) }\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tclearSelectedBlock();\n\t\t\t\t\tsetIsEditingTemplate( false );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ title }\n\t\t\t</Button>\n\t\t\t{ hasOptions ? (\n\t\t\t\t<Dropdown\n\t\t\t\t\tposition=\"bottom center\"\n\t\t\t\t\tcontentClassName=\"edit-post-template-top-area__popover\"\n\t\t\t\t\trenderToggle={ ( { onToggle } ) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"edit-post-template-title\"\n\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\ticon={ chevronDown }\n\t\t\t\t\t\t\tshowTooltip\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\tlabel={ __( 'Template Options' ) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ templateTitle }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ () => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<EditTemplateTitle />\n\t\t\t\t\t\t\t<TemplateDescription />\n\t\t\t\t\t\t\t<DeleteTemplate />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Text\n\t\t\t\t\tclassName=\"edit-post-template-title\"\n\t\t\t\t\tsize=\"body\"\n\t\t\t\t\tstyle={ { lineHeight: '24px' } }\n\t\t\t\t>\n\t\t\t\t\t{ templateTitle }\n\t\t\t\t</Text>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nexport default TemplateTitle;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { PostSavedState, PostPreviewButton } from '@wordpress/editor';\nimport { useSelect } from '@wordpress/data';\nimport { PinnedItems } from '@wordpress/interface';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport FullscreenModeClose from './fullscreen-mode-close';\nimport HeaderToolbar from './header-toolbar';\nimport MoreMenu from './more-menu';\nimport PostPublishButtonOrToggle from './post-publish-button-or-toggle';\nimport { default as DevicePreview } from '../device-preview';\nimport MainDashboardButton from './main-dashboard-button';\nimport { store as editPostStore } from '../../store';\nimport TemplateTitle from './template-title';\n\nfunction Header( { setEntitiesSavedStatesCallback } ) {\n\tconst {\n\t\thasActiveMetaboxes,\n\t\tisPublishSidebarOpened,\n\t\tisSaving,\n\t\tshowIconLabels,\n\t\thasReducedUI,\n\t} = useSelect(\n\t\t( select ) => ( {\n\t\t\thasActiveMetaboxes: select( editPostStore ).hasMetaBoxes(),\n\t\t\tisPublishSidebarOpened: select(\n\t\t\t\teditPostStore\n\t\t\t).isPublishSidebarOpened(),\n\t\t\tisSaving: select( editPostStore ).isSavingMetaBoxes(),\n\t\t\tshowIconLabels: select( editPostStore ).isFeatureActive(\n\t\t\t\t'showIconLabels'\n\t\t\t),\n\t\t\thasReducedUI: select( editPostStore ).isFeatureActive(\n\t\t\t\t'reducedUI'\n\t\t\t),\n\t\t} ),\n\t\t[]\n\t);\n\n\tconst isLargeViewport = useViewportMatch( 'large' );\n\n\tconst classes = classnames( 'edit-post-header', {\n\t\t'has-reduced-ui': hasReducedUI,\n\t} );\n\n\treturn (\n\t\t<div className={ classes }>\n\t\t\t<MainDashboardButton.Slot>\n\t\t\t\t<FullscreenModeClose showTooltip />\n\t\t\t</MainDashboardButton.Slot>\n\t\t\t<div className=\"edit-post-header__toolbar\">\n\t\t\t\t<HeaderToolbar />\n\t\t\t\t<TemplateTitle />\n\t\t\t</div>\n\t\t\t<div className=\"edit-post-header__settings\">\n\t\t\t\t{ ! isPublishSidebarOpened && (\n\t\t\t\t\t// This button isn't completely hidden by the publish sidebar.\n\t\t\t\t\t// We can't hide the whole toolbar when the publish sidebar is open because\n\t\t\t\t\t// we want to prevent mounting/unmounting the PostPublishButtonOrToggle DOM node.\n\t\t\t\t\t// We track that DOM node to return focus to the PostPublishButtonOrToggle\n\t\t\t\t\t// when the publish sidebar has been closed.\n\t\t\t\t\t<PostSavedState\n\t\t\t\t\t\tforceIsDirty={ hasActiveMetaboxes }\n\t\t\t\t\t\tforceIsSaving={ isSaving }\n\t\t\t\t\t\tshowIconLabels={ showIconLabels }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<DevicePreview />\n\t\t\t\t<PostPreviewButton\n\t\t\t\t\tforceIsAutosaveable={ hasActiveMetaboxes }\n\t\t\t\t\tforcePreviewLink={ isSaving ? null : undefined }\n\t\t\t\t/>\n\t\t\t\t<PostPublishButtonOrToggle\n\t\t\t\t\tforceIsDirty={ hasActiveMetaboxes }\n\t\t\t\t\tforceIsSaving={ isSaving }\n\t\t\t\t\tsetEntitiesSavedStatesCallback={\n\t\t\t\t\t\tsetEntitiesSavedStatesCallback\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t{ ( isLargeViewport || ! showIconLabels ) && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PinnedItems.Slot scope=\"core/edit-post\" />\n\t\t\t\t\t\t<MoreMenu showIconLabels={ showIconLabels } />\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t\t{ showIconLabels && ! isLargeViewport && (\n\t\t\t\t\t<MoreMenu showIconLabels={ showIconLabels } />\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst close = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M13 11.8l6.1-6.3-1-1-6.1 6.2-6.1-6.2-1 1 6.1 6.3-6.5 6.7 1 1 6.5-6.6 6.5 6.6 1-1z\" />\n\t</SVG>\n);\n\nexport default close;\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { Button, VisuallyHidden } from '@wordpress/components';\nimport { __experimentalLibrary as Library } from '@wordpress/block-editor';\nimport { close } from '@wordpress/icons';\nimport {\n\tuseViewportMatch,\n\t__experimentalUseDialog as useDialog,\n} from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nexport default function InserterSidebar() {\n\tconst { insertionPoint, showMostUsedBlocks } = useSelect( ( select ) => {\n\t\tconst { isFeatureActive, __experimentalGetInsertionPoint } = select(\n\t\t\teditPostStore\n\t\t);\n\t\treturn {\n\t\t\tinsertionPoint: __experimentalGetInsertionPoint(),\n\t\t\tshowMostUsedBlocks: isFeatureActive( 'mostUsedBlocks' ),\n\t\t};\n\t}, [] );\n\tconst { setIsInserterOpened } = useDispatch( editPostStore );\n\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst TagName = ! isMobileViewport ? VisuallyHidden : 'div';\n\tconst [ inserterDialogRef, inserterDialogProps ] = useDialog( {\n\t\tonClose: () => setIsInserterOpened( false ),\n\t\tfocusOnMount: null,\n\t} );\n\n\tconst libraryRef = useRef();\n\tuseEffect( () => {\n\t\tlibraryRef.current.focusSearch();\n\t}, [] );\n\n\treturn (\n\t\t<div\n\t\t\tref={ inserterDialogRef }\n\t\t\t{ ...inserterDialogProps }\n\t\t\tclassName=\"edit-post-editor__inserter-panel\"\n\t\t>\n\t\t\t<TagName className=\"edit-post-editor__inserter-panel-header\">\n\t\t\t\t<Button\n\t\t\t\t\ticon={ close }\n\t\t\t\t\tlabel={ __( 'Close block inserter' ) }\n\t\t\t\t\tonClick={ () => setIsInserterOpened( false ) }\n\t\t\t\t/>\n\t\t\t</TagName>\n\t\t\t<div className=\"edit-post-editor__inserter-panel-content\">\n\t\t\t\t<Library\n\t\t\t\t\tshowMostUsedBlocks={ showMostUsedBlocks }\n\t\t\t\t\tshowInserterHelpPanel\n\t\t\t\t\tshouldFocusBlock={ isMobileViewport }\n\t\t\t\t\trootClientId={ insertionPoint.rootClientId }\n\t\t\t\t\t__experimentalInsertionIndex={\n\t\t\t\t\t\tinsertionPoint.insertionIndex\n\t\t\t\t\t}\n\t\t\t\t\t__experimentalFilterValue={ insertionPoint.filterValue }\n\t\t\t\t\tref={ libraryRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __experimentalListView as ListView } from '@wordpress/block-editor';\nimport { Button } from '@wordpress/components';\nimport {\n\tuseFocusOnMount,\n\tuseFocusReturn,\n\tuseInstanceId,\n\tuseMergeRefs,\n} from '@wordpress/compose';\nimport { useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { closeSmall } from '@wordpress/icons';\nimport { ESCAPE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nexport default function ListViewSidebar() {\n\tconst { setIsListViewOpened } = useDispatch( editPostStore );\n\n\tconst focusOnMountRef = useFocusOnMount( 'firstElement' );\n\tconst headerFocusReturnRef = useFocusReturn();\n\tconst contentFocusReturnRef = useFocusReturn();\n\tfunction closeOnEscape( event ) {\n\t\tif ( event.keyCode === ESCAPE && ! event.defaultPrevented ) {\n\t\t\tevent.preventDefault();\n\t\t\tsetIsListViewOpened( false );\n\t\t}\n\t}\n\n\tconst instanceId = useInstanceId( ListViewSidebar );\n\tconst labelId = `edit-post-editor__list-view-panel-label-${ instanceId }`;\n\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t<div\n\t\t\taria-labelledby={ labelId }\n\t\t\tclassName=\"edit-post-editor__list-view-panel\"\n\t\t\tonKeyDown={ closeOnEscape }\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"edit-post-editor__list-view-panel-header\"\n\t\t\t\tref={ headerFocusReturnRef }\n\t\t\t>\n\t\t\t\t<strong id={ labelId }>{ __( 'List View' ) }</strong>\n\t\t\t\t<Button\n\t\t\t\t\ticon={ closeSmall }\n\t\t\t\t\tlabel={ __( 'Close List View Sidebar' ) }\n\t\t\t\t\tonClick={ () => setIsListViewOpened( false ) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"edit-post-editor__list-view-panel-content\"\n\t\t\t\tref={ useMergeRefs( [\n\t\t\t\t\tcontentFocusReturnRef,\n\t\t\t\t\tfocusOnMountRef,\n\t\t\t\t] ) }\n\t\t\t>\n\t\t\t\t<ListView\n\t\t\t\t\tshowNestedBlocks\n\t\t\t\t\t__experimentalFeatures\n\t\t\t\t\t__experimentalPersistentListViewFeatures\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst cog = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M10.289 4.836A1 1 0 0111.275 4h1.306a1 1 0 01.987.836l.244 1.466c.787.26 1.503.679 2.108 1.218l1.393-.522a1 1 0 011.216.437l.653 1.13a1 1 0 01-.23 1.273l-1.148.944a6.025 6.025 0 010 2.435l1.149.946a1 1 0 01.23 1.272l-.653 1.13a1 1 0 01-1.216.437l-1.394-.522c-.605.54-1.32.958-2.108 1.218l-.244 1.466a1 1 0 01-.987.836h-1.306a1 1 0 01-.986-.836l-.244-1.466a5.995 5.995 0 01-2.108-1.218l-1.394.522a1 1 0 01-1.217-.436l-.653-1.131a1 1 0 01.23-1.272l1.149-.946a6.026 6.026 0 010-2.435l-1.148-.944a1 1 0 01-.23-1.272l.653-1.131a1 1 0 011.217-.437l1.393.522a5.994 5.994 0 012.108-1.218l.244-1.466zM14.929 12a3 3 0 11-6 0 3 3 0 016 0z\"\n\t\t\tclipRule=\"evenodd\"\n\t\t/>\n\t</SVG>\n);\n\nexport default cog;\n","/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nconst SettingsHeader = ( { sidebarName } ) => {\n\tconst { openGeneralSidebar } = useDispatch( editPostStore );\n\tconst openDocumentSettings = () =>\n\t\topenGeneralSidebar( 'edit-post/document' );\n\tconst openBlockSettings = () => openGeneralSidebar( 'edit-post/block' );\n\n\tconst { documentLabel, isTemplateMode } = useSelect( ( select ) => {\n\t\tconst postTypeLabel = select( editorStore ).getPostTypeLabel();\n\n\t\treturn {\n\t\t\t// translators: Default label for the Document sidebar tab, not selected.\n\t\t\tdocumentLabel: postTypeLabel || _x( 'Document', 'noun' ),\n\t\t\tisTemplateMode: select( editPostStore ).isEditingTemplate(),\n\t\t};\n\t}, [] );\n\n\tconst [ documentAriaLabel, documentActiveClass ] =\n\t\tsidebarName === 'edit-post/document'\n\t\t\t? // translators: ARIA label for the Document sidebar tab, selected. %s: Document label.\n\t\t\t  [ sprintf( __( '%s (selected)' ), documentLabel ), 'is-active' ]\n\t\t\t: [ documentLabel, '' ];\n\n\tconst [ blockAriaLabel, blockActiveClass ] =\n\t\tsidebarName === 'edit-post/block'\n\t\t\t? // translators: ARIA label for the Block Settings Sidebar tab, selected.\n\t\t\t  [ __( 'Block (selected)' ), 'is-active' ]\n\t\t\t: // translators: ARIA label for the Block Settings Sidebar tab, not selected.\n\t\t\t  [ __( 'Block' ), '' ];\n\n\tconst [ templateAriaLabel, templateActiveClass ] =\n\t\tsidebarName === 'edit-post/document'\n\t\t\t? [ __( 'Template (selected)' ), 'is-active' ]\n\t\t\t: [ __( 'Template' ), '' ];\n\n\t/* Use a list so screen readers will announce how many tabs there are. */\n\treturn (\n\t\t<ul>\n\t\t\t{ ! isTemplateMode && (\n\t\t\t\t<li>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={ openDocumentSettings }\n\t\t\t\t\t\tclassName={ `edit-post-sidebar__panel-tab ${ documentActiveClass }` }\n\t\t\t\t\t\taria-label={ documentAriaLabel }\n\t\t\t\t\t\tdata-label={ documentLabel }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ documentLabel }\n\t\t\t\t\t</Button>\n\t\t\t\t</li>\n\t\t\t) }\n\t\t\t{ isTemplateMode && (\n\t\t\t\t<li>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={ openDocumentSettings }\n\t\t\t\t\t\tclassName={ `edit-post-sidebar__panel-tab ${ templateActiveClass }` }\n\t\t\t\t\t\taria-label={ templateAriaLabel }\n\t\t\t\t\t\tdata-label={ __( 'Template' ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Template' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</li>\n\t\t\t) }\n\t\t\t<li>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={ openBlockSettings }\n\t\t\t\t\tclassName={ `edit-post-sidebar__panel-tab ${ blockActiveClass }` }\n\t\t\t\t\taria-label={ blockAriaLabel }\n\t\t\t\t\t// translators: Data label for the Block Settings Sidebar tab.\n\t\t\t\t\tdata-label={ __( 'Block' ) }\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\t// translators: Text label for the Block Settings Sidebar tab.\n\t\t\t\t\t\t__( 'Block' )\n\t\t\t\t\t}\n\t\t\t\t</Button>\n\t\t\t</li>\n\t\t</ul>\n\t);\n};\n\nexport default SettingsHeader;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelRow, Dropdown, Button } from '@wordpress/components';\nimport {\n\tPostVisibility as PostVisibilityForm,\n\tPostVisibilityLabel,\n\tPostVisibilityCheck,\n} from '@wordpress/editor';\n\nexport function PostVisibility() {\n\treturn (\n\t\t<PostVisibilityCheck\n\t\t\trender={ ( { canEdit } ) => (\n\t\t\t\t<PanelRow className=\"edit-post-post-visibility\">\n\t\t\t\t\t<span>{ __( 'Visibility' ) }</span>\n\t\t\t\t\t{ ! canEdit && (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<PostVisibilityLabel />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) }\n\t\t\t\t\t{ canEdit && (\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\tposition=\"bottom left\"\n\t\t\t\t\t\t\tcontentClassName=\"edit-post-post-visibility__dialog\"\n\t\t\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\t\t\t\tclassName=\"edit-post-post-visibility__toggle\"\n\t\t\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<PostVisibilityLabel />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\trenderContent={ () => <PostVisibilityForm /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PanelRow>\n\t\t\t) }\n\t\t/>\n\t);\n}\n\nexport default PostVisibility;\n","/**\n * WordPress dependencies\n */\nimport { PanelRow } from '@wordpress/components';\nimport { PostTrash as PostTrashLink, PostTrashCheck } from '@wordpress/editor';\n\nexport default function PostTrash() {\n\treturn (\n\t\t<PostTrashCheck>\n\t\t\t<PanelRow>\n\t\t\t\t<PostTrashLink />\n\t\t\t</PanelRow>\n\t\t</PostTrashCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelRow, Dropdown, Button } from '@wordpress/components';\nimport { useRef } from '@wordpress/element';\nimport {\n\tPostSchedule as PostScheduleForm,\n\tPostScheduleLabel,\n\tPostScheduleCheck,\n} from '@wordpress/editor';\n\nexport function PostSchedule() {\n\tconst anchorRef = useRef();\n\n\treturn (\n\t\t<PostScheduleCheck>\n\t\t\t<PanelRow className=\"edit-post-post-schedule\" ref={ anchorRef }>\n\t\t\t\t<span>{ __( 'Publish' ) }</span>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ { anchorRef: anchorRef.current } }\n\t\t\t\t\tposition=\"bottom left\"\n\t\t\t\t\tcontentClassName=\"edit-post-post-schedule__dialog\"\n\t\t\t\t\trenderToggle={ ( { onToggle, isOpen } ) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"edit-post-post-schedule__toggle\"\n\t\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PostScheduleLabel />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ () => <PostScheduleForm /> }\n\t\t\t\t/>\n\t\t\t</PanelRow>\n\t\t</PostScheduleCheck>\n\t);\n}\n\nexport default PostSchedule;\n","/**\n * WordPress dependencies\n */\nimport { PanelRow } from '@wordpress/components';\nimport {\n\tPostSticky as PostStickyForm,\n\tPostStickyCheck,\n} from '@wordpress/editor';\n\nexport function PostSticky() {\n\treturn (\n\t\t<PostStickyCheck>\n\t\t\t<PanelRow>\n\t\t\t\t<PostStickyForm />\n\t\t\t</PanelRow>\n\t\t</PostStickyCheck>\n\t);\n}\n\nexport default PostSticky;\n","/**\n * WordPress dependencies\n */\nimport { PanelRow } from '@wordpress/components';\nimport {\n\tPostAuthor as PostAuthorForm,\n\tPostAuthorCheck,\n} from '@wordpress/editor';\n\nexport function PostAuthor() {\n\treturn (\n\t\t<PostAuthorCheck>\n\t\t\t<PanelRow className=\"edit-post-post-author\">\n\t\t\t\t<PostAuthorForm />\n\t\t\t</PanelRow>\n\t\t</PostAuthorCheck>\n\t);\n}\n\nexport default PostAuthor;\n","/**\n * WordPress dependencies\n */\nimport { PanelRow } from '@wordpress/components';\nimport { PostSlug as PostSlugForm, PostSlugCheck } from '@wordpress/editor';\n\nexport function PostSlug() {\n\treturn (\n\t\t<PostSlugCheck>\n\t\t\t<PanelRow>\n\t\t\t\t<PostSlugForm />\n\t\t\t</PanelRow>\n\t\t</PostSlugCheck>\n\t);\n}\n\nexport default PostSlug;\n","/**\n * WordPress dependencies\n */\nimport { PanelRow } from '@wordpress/components';\nimport {\n\tPostFormat as PostFormatForm,\n\tPostFormatCheck,\n} from '@wordpress/editor';\n\nexport function PostFormat() {\n\treturn (\n\t\t<PostFormatCheck>\n\t\t\t<PanelRow>\n\t\t\t\t<PostFormatForm />\n\t\t\t</PanelRow>\n\t\t</PostFormatCheck>\n\t);\n}\n\nexport default PostFormat;\n","/**\n * WordPress dependencies\n */\nimport { PanelRow } from '@wordpress/components';\nimport {\n\tPostPendingStatus as PostPendingStatusForm,\n\tPostPendingStatusCheck,\n} from '@wordpress/editor';\n\nexport function PostPendingStatus() {\n\treturn (\n\t\t<PostPendingStatusCheck>\n\t\t\t<PanelRow>\n\t\t\t\t<PostPendingStatusForm />\n\t\t\t</PanelRow>\n\t\t</PostPendingStatusCheck>\n\t);\n}\n\nexport default PostPendingStatus;\n","/**\n * Defines as extensibility slot for the Status & visibility panel.\n */\n\n/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelRow } from '@wordpress/components';\n\nexport const { Fill, Slot } = createSlotFill( 'PluginPostStatusInfo' );\n\n/**\n * Renders a row in the Status & visibility panel of the Document sidebar.\n * It should be noted that this is named and implemented around the function it serves\n * and not its location, which may change in future iterations.\n *\n * @param {Object}    props             Component properties.\n * @param {string}    [props.className] An optional class name added to the row.\n * @param {WPElement} props.children    Children to be rendered.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginPostStatusInfo = wp.editPost.PluginPostStatusInfo;\n *\n * function MyPluginPostStatusInfo() {\n * \treturn wp.element.createElement(\n * \t\tPluginPostStatusInfo,\n * \t\t{\n * \t\t\tclassName: 'my-plugin-post-status-info',\n * \t\t},\n * \t\t__( 'My post status info' )\n * \t)\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginPostStatusInfo } from '@wordpress/edit-post';\n *\n * const MyPluginPostStatusInfo = () => (\n * \t<PluginPostStatusInfo\n * \t\tclassName=\"my-plugin-post-status-info\"\n * \t>\n * \t\t{ __( 'My post status info' ) }\n * \t</PluginPostStatusInfo>\n * );\n * ```\n *\n * @return {WPComponent} The component to be rendered.\n */\nconst PluginPostStatusInfo = ( { children, className } ) => (\n\t<Fill>\n\t\t<PanelRow className={ className }>{ children }</PanelRow>\n\t</Fill>\n);\n\nPluginPostStatusInfo.Slot = Slot;\n\nexport default PluginPostStatusInfo;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose, ifCondition } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PostVisibility from '../post-visibility';\nimport PostTrash from '../post-trash';\nimport PostSchedule from '../post-schedule';\nimport PostSticky from '../post-sticky';\nimport PostAuthor from '../post-author';\nimport PostSlug from '../post-slug';\nimport PostFormat from '../post-format';\nimport PostPendingStatus from '../post-pending-status';\nimport PluginPostStatusInfo from '../plugin-post-status-info';\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'post-status';\n\nfunction PostStatus( { isOpened, onTogglePanel } ) {\n\treturn (\n\t\t<PanelBody\n\t\t\tclassName=\"edit-post-post-status\"\n\t\t\ttitle={ __( 'Status & visibility' ) }\n\t\t\topened={ isOpened }\n\t\t\tonToggle={ onTogglePanel }\n\t\t>\n\t\t\t<PluginPostStatusInfo.Slot>\n\t\t\t\t{ ( fills ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PostVisibility />\n\t\t\t\t\t\t<PostSchedule />\n\t\t\t\t\t\t<PostFormat />\n\t\t\t\t\t\t<PostSticky />\n\t\t\t\t\t\t<PostPendingStatus />\n\t\t\t\t\t\t<PostSlug />\n\t\t\t\t\t\t<PostAuthor />\n\t\t\t\t\t\t{ fills }\n\t\t\t\t\t\t<PostTrash />\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</PluginPostStatusInfo.Slot>\n\t\t</PanelBody>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\t// We use isEditorPanelRemoved to hide the panel if it was programatically removed. We do\n\t\t// not use isEditorPanelEnabled since this panel should not be disabled through the UI.\n\t\tconst { isEditorPanelRemoved, isEditorPanelOpened } = select(\n\t\t\teditPostStore\n\t\t);\n\t\treturn {\n\t\t\tisRemoved: isEditorPanelRemoved( PANEL_NAME ),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t};\n\t} ),\n\tifCondition( ( { isRemoved } ) => ! isRemoved ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonTogglePanel() {\n\t\t\treturn dispatch( editPostStore ).toggleEditorPanelOpened(\n\t\t\t\tPANEL_NAME\n\t\t\t);\n\t\t},\n\t} ) ),\n] )( PostStatus );\n","/**\n * WordPress dependencies\n */\nimport { PanelBody } from '@wordpress/components';\nimport { PostLastRevision, PostLastRevisionCheck } from '@wordpress/editor';\n\nfunction LastRevision() {\n\treturn (\n\t\t<PostLastRevisionCheck>\n\t\t\t<PanelBody className=\"edit-post-last-revision__panel\">\n\t\t\t\t<PostLastRevision />\n\t\t\t</PanelBody>\n\t\t</PostLastRevisionCheck>\n\t);\n}\n\nexport default LastRevision;\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { PanelBody } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nfunction TaxonomyPanel( {\n\tisEnabled,\n\ttaxonomy,\n\tisOpened,\n\tonTogglePanel,\n\tchildren,\n} ) {\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\tconst taxonomyMenuName = get( taxonomy, [ 'labels', 'menu_name' ] );\n\tif ( ! taxonomyMenuName ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={ taxonomyMenuName }\n\t\t\topened={ isOpened }\n\t\t\tonToggle={ onTogglePanel }\n\t\t>\n\t\t\t{ children }\n\t\t</PanelBody>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select, ownProps ) => {\n\t\tconst slug = get( ownProps.taxonomy, [ 'slug' ] );\n\t\tconst panelName = slug ? `taxonomy-panel-${ slug }` : '';\n\t\treturn {\n\t\t\tpanelName,\n\t\t\tisEnabled: slug\n\t\t\t\t? select( editPostStore ).isEditorPanelEnabled( panelName )\n\t\t\t\t: false,\n\t\t\tisOpened: slug\n\t\t\t\t? select( editPostStore ).isEditorPanelOpened( panelName )\n\t\t\t\t: false,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => ( {\n\t\tonTogglePanel: () => {\n\t\t\tdispatch( editPostStore ).toggleEditorPanelOpened(\n\t\t\t\townProps.panelName\n\t\t\t);\n\t\t},\n\t} ) )\n)( TaxonomyPanel );\n","/**\n * WordPress dependencies\n */\nimport {\n\tPostTaxonomies as PostTaxonomiesForm,\n\tPostTaxonomiesCheck,\n} from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport TaxonomyPanel from './taxonomy-panel';\n\nfunction PostTaxonomies() {\n\treturn (\n\t\t<PostTaxonomiesCheck>\n\t\t\t<PostTaxonomiesForm\n\t\t\t\ttaxonomyWrapper={ ( content, taxonomy ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TaxonomyPanel taxonomy={ taxonomy }>\n\t\t\t\t\t\t\t{ content }\n\t\t\t\t\t\t</TaxonomyPanel>\n\t\t\t\t\t);\n\t\t\t\t} }\n\t\t\t/>\n\t\t</PostTaxonomiesCheck>\n\t);\n}\n\nexport default PostTaxonomies;\n","/**\n * External dependencies\n */\nimport { get, partial } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\nimport {\n\tPostFeaturedImage,\n\tPostFeaturedImageCheck,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'featured-image';\n\nfunction FeaturedImage( { isEnabled, isOpened, postType, onTogglePanel } ) {\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostFeaturedImageCheck>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ get(\n\t\t\t\t\tpostType,\n\t\t\t\t\t[ 'labels', 'featured_image' ],\n\t\t\t\t\t__( 'Featured image' )\n\t\t\t\t) }\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ onTogglePanel }\n\t\t\t>\n\t\t\t\t<PostFeaturedImage />\n\t\t\t</PanelBody>\n\t\t</PostFeaturedImageCheck>\n\t);\n}\n\nconst applyWithSelect = withSelect( ( select ) => {\n\tconst { getEditedPostAttribute } = select( editorStore );\n\tconst { getPostType } = select( coreStore );\n\tconst { isEditorPanelEnabled, isEditorPanelOpened } = select(\n\t\teditPostStore\n\t);\n\n\treturn {\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t};\n} );\n\nconst applyWithDispatch = withDispatch( ( dispatch ) => {\n\tconst { toggleEditorPanelOpened } = dispatch( editPostStore );\n\n\treturn {\n\t\tonTogglePanel: partial( toggleEditorPanelOpened, PANEL_NAME ),\n\t};\n} );\n\nexport default compose( applyWithSelect, applyWithDispatch )( FeaturedImage );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\nimport {\n\tPostExcerpt as PostExcerptForm,\n\tPostExcerptCheck,\n} from '@wordpress/editor';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'post-excerpt';\n\nfunction PostExcerpt( { isEnabled, isOpened, onTogglePanel } ) {\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostExcerptCheck>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ __( 'Excerpt' ) }\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ onTogglePanel }\n\t\t\t>\n\t\t\t\t<PostExcerptForm />\n\t\t\t</PanelBody>\n\t\t</PostExcerptCheck>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\treturn {\n\t\t\tisEnabled: select( editPostStore ).isEditorPanelEnabled(\n\t\t\t\tPANEL_NAME\n\t\t\t),\n\t\t\tisOpened: select( editPostStore ).isEditorPanelOpened( PANEL_NAME ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonTogglePanel() {\n\t\t\treturn dispatch( editPostStore ).toggleEditorPanelOpened(\n\t\t\t\tPANEL_NAME\n\t\t\t);\n\t\t},\n\t} ) ),\n] )( PostExcerpt );\n","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, TextControl, ExternalLink } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose, ifCondition } from '@wordpress/compose';\nimport { cleanForSlug, store as editorStore } from '@wordpress/editor';\nimport { safeDecodeURIComponent } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'post-link';\n\nfunction PostLink( {\n\tisOpened,\n\tonTogglePanel,\n\tisEditable,\n\tpostLink,\n\tpermalinkPrefix,\n\tpermalinkSuffix,\n\teditPermalink,\n\tpostSlug,\n\tpostTypeLabel,\n} ) {\n\tconst [ forceEmptyField, setForceEmptyField ] = useState( false );\n\n\tlet prefixElement, postNameElement, suffixElement;\n\tif ( isEditable ) {\n\t\tprefixElement = permalinkPrefix && (\n\t\t\t<span className=\"edit-post-post-link__link-prefix\">\n\t\t\t\t{ permalinkPrefix }\n\t\t\t</span>\n\t\t);\n\t\tpostNameElement = postSlug && (\n\t\t\t<span className=\"edit-post-post-link__link-post-name\">\n\t\t\t\t{ postSlug }\n\t\t\t</span>\n\t\t);\n\t\tsuffixElement = permalinkSuffix && (\n\t\t\t<span className=\"edit-post-post-link__link-suffix\">\n\t\t\t\t{ permalinkSuffix }\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={ __( 'Permalink' ) }\n\t\t\topened={ isOpened }\n\t\t\tonToggle={ onTogglePanel }\n\t\t>\n\t\t\t{ isEditable && (\n\t\t\t\t<div className=\"editor-post-link\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'URL Slug' ) }\n\t\t\t\t\t\tvalue={ forceEmptyField ? '' : postSlug }\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\teditPermalink( newValue );\n\t\t\t\t\t\t\t// When we delete the field the permalink gets\n\t\t\t\t\t\t\t// reverted to the original value.\n\t\t\t\t\t\t\t// The forceEmptyField logic allows the user to have\n\t\t\t\t\t\t\t// the field temporarily empty while typing.\n\t\t\t\t\t\t\tif ( ! newValue ) {\n\t\t\t\t\t\t\t\tif ( ! forceEmptyField ) {\n\t\t\t\t\t\t\t\t\tsetForceEmptyField( true );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( forceEmptyField ) {\n\t\t\t\t\t\t\t\tsetForceEmptyField( false );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonBlur={ ( event ) => {\n\t\t\t\t\t\t\teditPermalink( cleanForSlug( event.target.value ) );\n\t\t\t\t\t\t\tif ( forceEmptyField ) {\n\t\t\t\t\t\t\t\tsetForceEmptyField( false );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{ __( 'The last part of the URL.' ) }{ ' ' }\n\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t'https://wordpress.org/support/article/writing-posts/#post-field-descriptions'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Read about permalinks' ) }\n\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<h3 className=\"edit-post-post-link__preview-label\">\n\t\t\t\t{ postTypeLabel || __( 'View post' ) }\n\t\t\t</h3>\n\t\t\t<div className=\"edit-post-post-link__preview-link-container\">\n\t\t\t\t<ExternalLink\n\t\t\t\t\tclassName=\"edit-post-post-link__link\"\n\t\t\t\t\thref={ postLink }\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t>\n\t\t\t\t\t{ isEditable ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ prefixElement }\n\t\t\t\t\t\t\t{ postNameElement }\n\t\t\t\t\t\t\t{ suffixElement }\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tpostLink\n\t\t\t\t\t) }\n\t\t\t\t</ExternalLink>\n\t\t\t</div>\n\t\t</PanelBody>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisPermalinkEditable,\n\t\t\tgetCurrentPost,\n\t\t\tisCurrentPostPublished,\n\t\t\tgetPermalinkParts,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostSlug,\n\t\t} = select( editorStore );\n\t\tconst { isEditorPanelEnabled, isEditorPanelOpened } = select(\n\t\t\teditPostStore\n\t\t);\n\t\tconst { getPostType } = select( coreStore );\n\n\t\tconst { link } = getCurrentPost();\n\n\t\tconst postTypeName = getEditedPostAttribute( 'type' );\n\t\tconst postType = getPostType( postTypeName );\n\t\tconst permalinkParts = getPermalinkParts();\n\n\t\treturn {\n\t\t\tpostLink: link,\n\t\t\tisEditable: isPermalinkEditable(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tisViewable: get( postType, [ 'viewable' ], false ),\n\t\t\tpostSlug: safeDecodeURIComponent( getEditedPostSlug() ),\n\t\t\tpostTypeLabel: get( postType, [ 'labels', 'view_item' ] ),\n\t\t\thasPermalinkParts: !! permalinkParts,\n\t\t\tpermalinkPrefix: permalinkParts?.prefix,\n\t\t\tpermalinkSuffix: permalinkParts?.suffix,\n\t\t};\n\t} ),\n\tifCondition( ( { isEnabled, postLink, isViewable, hasPermalinkParts } ) => {\n\t\treturn isEnabled && postLink && isViewable && hasPermalinkParts;\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { toggleEditorPanelOpened } = dispatch( editPostStore );\n\t\tconst { editPost } = dispatch( editorStore );\n\t\treturn {\n\t\t\tonTogglePanel: () => toggleEditorPanelOpened( PANEL_NAME ),\n\t\t\teditPermalink: ( newSlug ) => {\n\t\t\t\teditPost( { slug: newSlug } );\n\t\t\t},\n\t\t};\n\t} ),\n] )( PostLink );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, PanelRow } from '@wordpress/components';\nimport {\n\tPostComments,\n\tPostPingbacks,\n\tPostTypeSupportCheck,\n} from '@wordpress/editor';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'discussion-panel';\n\nfunction DiscussionPanel( { isEnabled, isOpened, onTogglePanel } ) {\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys={ [ 'comments', 'trackbacks' ] }>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ __( 'Discussion' ) }\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ onTogglePanel }\n\t\t\t>\n\t\t\t\t<PostTypeSupportCheck supportKeys=\"comments\">\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<PostComments />\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PostTypeSupportCheck>\n\n\t\t\t\t<PostTypeSupportCheck supportKeys=\"trackbacks\">\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<PostPingbacks />\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PostTypeSupportCheck>\n\t\t\t</PanelBody>\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\treturn {\n\t\t\tisEnabled: select( editPostStore ).isEditorPanelEnabled(\n\t\t\t\tPANEL_NAME\n\t\t\t),\n\t\t\tisOpened: select( editPostStore ).isEditorPanelOpened( PANEL_NAME ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonTogglePanel() {\n\t\t\treturn dispatch( editPostStore ).toggleEditorPanelOpened(\n\t\t\t\tPANEL_NAME\n\t\t\t);\n\t\t},\n\t} ) ),\n] )( DiscussionPanel );\n","/**\n * External dependencies\n */\nimport { get, partial } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, PanelRow } from '@wordpress/components';\nimport {\n\tstore as editorStore,\n\tPageAttributesCheck,\n\tPageAttributesOrder,\n\tPageAttributesParent,\n} from '@wordpress/editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'page-attributes';\n\nexport function PageAttributes() {\n\tconst { isEnabled, isOpened, postType } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { isEditorPanelEnabled, isEditorPanelOpened } = select(\n\t\t\teditPostStore\n\t\t);\n\t\tconst { getPostType } = select( coreStore );\n\t\treturn {\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t};\n\t}, [] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editPostStore );\n\n\tif ( ! isEnabled || ! postType ) {\n\t\treturn null;\n\t}\n\n\tconst onTogglePanel = partial( toggleEditorPanelOpened, PANEL_NAME );\n\n\treturn (\n\t\t<PageAttributesCheck>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ get(\n\t\t\t\t\tpostType,\n\t\t\t\t\t[ 'labels', 'attributes' ],\n\t\t\t\t\t__( 'Page attributes' )\n\t\t\t\t) }\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ onTogglePanel }\n\t\t\t>\n\t\t\t\t<PageAttributesParent />\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<PageAttributesOrder />\n\t\t\t\t</PanelRow>\n\t\t\t</PanelBody>\n\t\t</PageAttributesCheck>\n\t);\n}\n\nexport default PageAttributes;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect } from '@wordpress/element';\nimport { Spinner } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Render metabox area.\n *\n * @param {Object} props          Component props.\n * @param {string} props.location metabox location.\n * @return {WPComponent} The component to be rendered.\n */\nfunction MetaBoxesArea( { location } ) {\n\tconst container = useRef( null );\n\tconst formRef = useRef( null );\n\n\tuseEffect( () => {\n\t\tformRef.current = document.querySelector(\n\t\t\t'.metabox-location-' + location\n\t\t);\n\n\t\tif ( formRef.current ) {\n\t\t\tcontainer.current.appendChild( formRef.current );\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( formRef.current ) {\n\t\t\t\tdocument\n\t\t\t\t\t.querySelector( '#metaboxes' )\n\t\t\t\t\t.appendChild( formRef.current );\n\t\t\t}\n\t\t};\n\t}, [ location ] );\n\n\tconst isSaving = useSelect( ( select ) => {\n\t\treturn select( editPostStore ).isSavingMetaBoxes();\n\t}, [] );\n\n\tconst classes = classnames(\n\t\t'edit-post-meta-boxes-area',\n\t\t`is-${ location }`,\n\t\t{\n\t\t\t'is-loading': isSaving,\n\t\t}\n\t);\n\n\treturn (\n\t\t<div className={ classes }>\n\t\t\t{ isSaving && <Spinner /> }\n\t\t\t<div\n\t\t\t\tclassName=\"edit-post-meta-boxes-area__container\"\n\t\t\t\tref={ container }\n\t\t\t/>\n\t\t\t<div className=\"edit-post-meta-boxes-area__clear\" />\n\t\t</div>\n\t);\n}\n\nexport default MetaBoxesArea;\n","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nclass MetaBoxVisibility extends Component {\n\tcomponentDidMount() {\n\t\tthis.updateDOM();\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.isVisible !== prevProps.isVisible ) {\n\t\t\tthis.updateDOM();\n\t\t}\n\t}\n\n\tupdateDOM() {\n\t\tconst { id, isVisible } = this.props;\n\n\t\tconst element = document.getElementById( id );\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isVisible ) {\n\t\t\telement.classList.remove( 'is-hidden' );\n\t\t} else {\n\t\t\telement.classList.add( 'is-hidden' );\n\t\t}\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default withSelect( ( select, { id } ) => ( {\n\tisVisible: select( editPostStore ).isEditorPanelEnabled(\n\t\t`meta-box-${ id }`\n\t),\n} ) )( MetaBoxVisibility );\n","/**\n * External dependencies\n */\nimport { map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect, useRegistry } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport MetaBoxesArea from './meta-boxes-area';\nimport MetaBoxVisibility from './meta-box-visibility';\nimport { store as editPostStore } from '../../store';\n\nexport default function MetaBoxes( { location } ) {\n\tconst registry = useRegistry();\n\tconst { metaBoxes, areMetaBoxesInitialized, isEditorReady } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { __unstableIsEditorReady } = select( editorStore );\n\t\t\tconst {\n\t\t\t\tgetMetaBoxesPerLocation,\n\t\t\t\tareMetaBoxesInitialized: _areMetaBoxesInitialized,\n\t\t\t} = select( editPostStore );\n\t\t\treturn {\n\t\t\t\tmetaBoxes: getMetaBoxesPerLocation( location ),\n\t\t\t\tareMetaBoxesInitialized: _areMetaBoxesInitialized(),\n\t\t\t\tisEditorReady: __unstableIsEditorReady(),\n\t\t\t};\n\t\t},\n\t\t[ location ]\n\t);\n\n\t// When editor is ready, initialize postboxes (wp core script) and metabox\n\t// saving. This initializes all meta box locations, not just this specific\n\t// one.\n\tuseEffect( () => {\n\t\tif ( isEditorReady && ! areMetaBoxesInitialized ) {\n\t\t\tregistry.dispatch( editPostStore ).initializeMetaBoxes();\n\t\t}\n\t}, [ isEditorReady, areMetaBoxesInitialized ] );\n\n\tif ( ! areMetaBoxesInitialized ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ map( metaBoxes, ( { id } ) => (\n\t\t\t\t<MetaBoxVisibility key={ id } id={ id } />\n\t\t\t) ) }\n\t\t\t<MetaBoxesArea location={ location } />\n\t\t</>\n\t);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"warning\"];","/**\n * Defines as extensibility slot for the Settings sidebar\n */\n\n/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelBody } from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\nimport { withPluginContext } from '@wordpress/plugins';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\nimport { EnablePluginDocumentSettingPanelOption } from '../../preferences-modal/options';\nimport { store as editPostStore } from '../../../store';\n\nexport const { Fill, Slot } = createSlotFill( 'PluginDocumentSettingPanel' );\n\nconst PluginDocumentSettingFill = ( {\n\tisEnabled,\n\tpanelName,\n\topened,\n\tonToggle,\n\tclassName,\n\ttitle,\n\ticon,\n\tchildren,\n} ) => {\n\treturn (\n\t\t<>\n\t\t\t<EnablePluginDocumentSettingPanelOption\n\t\t\t\tlabel={ title }\n\t\t\t\tpanelName={ panelName }\n\t\t\t/>\n\t\t\t<Fill>\n\t\t\t\t{ isEnabled && (\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\ttitle={ title }\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\topened={ opened }\n\t\t\t\t\t\tonToggle={ onToggle }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t) }\n\t\t\t</Fill>\n\t\t</>\n\t);\n};\n\n/**\n * Renders items below the Status & Availability panel in the Document Sidebar.\n *\n * @param {Object}                props                                 Component properties.\n * @param {string}                [props.name]                          The machine-friendly name for the panel.\n * @param {string}                [props.className]                     An optional class name added to the row.\n * @param {string}                [props.title]                         The title of the panel\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var el = wp.element.createElement;\n * var __ = wp.i18n.__;\n * var registerPlugin = wp.plugins.registerPlugin;\n * var PluginDocumentSettingPanel = wp.editPost.PluginDocumentSettingPanel;\n *\n * function MyDocumentSettingPlugin() {\n * \treturn el(\n * \t\tPluginDocumentSettingPanel,\n * \t\t{\n * \t\t\tclassName: 'my-document-setting-plugin',\n * \t\t\ttitle: 'My Panel',\n * \t\t},\n * \t\t__( 'My Document Setting Panel' )\n * \t);\n * }\n *\n * registerPlugin( 'my-document-setting-plugin', {\n * \t\trender: MyDocumentSettingPlugin\n * } );\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { registerPlugin } from '@wordpress/plugins';\n * import { PluginDocumentSettingPanel } from '@wordpress/edit-post';\n *\n * const MyDocumentSettingTest = () => (\n * \t\t<PluginDocumentSettingPanel className=\"my-document-setting-plugin\" title=\"My Panel\">\n *\t\t\t<p>My Document Setting Panel</p>\n *\t\t</PluginDocumentSettingPanel>\n *\t);\n *\n *  registerPlugin( 'document-setting-test', { render: MyDocumentSettingTest } );\n * ```\n *\n * @return {WPComponent} The component to be rendered.\n */\nconst PluginDocumentSettingPanel = compose(\n\twithPluginContext( ( context, ownProps ) => {\n\t\tif ( undefined === ownProps.name ) {\n\t\t\twarning( 'PluginDocumentSettingPanel requires a name property.' );\n\t\t}\n\t\treturn {\n\t\t\ticon: ownProps.icon || context.icon,\n\t\t\tpanelName: `${ context.name }/${ ownProps.name }`,\n\t\t};\n\t} ),\n\twithSelect( ( select, { panelName } ) => {\n\t\treturn {\n\t\t\topened: select( editPostStore ).isEditorPanelOpened( panelName ),\n\t\t\tisEnabled: select( editPostStore ).isEditorPanelEnabled(\n\t\t\t\tpanelName\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { panelName } ) => ( {\n\t\tonToggle() {\n\t\t\treturn dispatch( editPostStore ).toggleEditorPanelOpened(\n\t\t\t\tpanelName\n\t\t\t);\n\t\t},\n\t} ) )\n)( PluginDocumentSettingFill );\n\nPluginDocumentSettingPanel.Slot = Slot;\n\nexport default PluginDocumentSettingPanel;\n","/**\n * WordPress dependencies\n */\nimport { ComplementaryArea } from '@wordpress/interface';\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Renders a sidebar when activated. The contents within the `PluginSidebar` will appear as content within the sidebar.\n * It also automatically renders a corresponding `PluginSidebarMenuItem` component when `isPinnable` flag is set to `true`.\n * If you wish to display the sidebar, you can with use the `PluginSidebarMoreMenuItem` component or the `wp.data.dispatch` API:\n *\n * ```js\n * wp.data.dispatch( 'core/edit-post' ).openGeneralSidebar( 'plugin-name/sidebar-name' );\n * ```\n *\n * @see PluginSidebarMoreMenuItem\n *\n * @param {Object}                props                                 Element props.\n * @param {string}                props.name                            A string identifying the sidebar. Must be unique for every sidebar registered within the scope of your plugin.\n * @param {string}                [props.className]                     An optional class name added to the sidebar body.\n * @param {string}                props.title                           Title displayed at the top of the sidebar.\n * @param {boolean}               [props.isPinnable=true]               Whether to allow to pin sidebar to the toolbar. When set to `true` it also automatically renders a corresponding menu item.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var el = wp.element.createElement;\n * var PanelBody = wp.components.PanelBody;\n * var PluginSidebar = wp.editPost.PluginSidebar;\n * var moreIcon = wp.element.createElement( 'svg' ); //... svg element.\n *\n * function MyPluginSidebar() {\n * \treturn el(\n * \t\t\tPluginSidebar,\n * \t\t\t{\n * \t\t\t\tname: 'my-sidebar',\n * \t\t\t\ttitle: 'My sidebar title',\n * \t\t\t\ticon: moreIcon,\n * \t\t\t},\n * \t\t\tel(\n * \t\t\t\tPanelBody,\n * \t\t\t\t{},\n * \t\t\t\t__( 'My sidebar content' )\n * \t\t\t)\n * \t);\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PanelBody } from '@wordpress/components';\n * import { PluginSidebar } from '@wordpress/edit-post';\n * import { more } from '@wordpress/icons';\n *\n * const MyPluginSidebar = () => (\n * \t<PluginSidebar\n * \t\tname=\"my-sidebar\"\n * \t\ttitle=\"My sidebar title\"\n * \t\ticon={ more }\n * \t>\n * \t\t<PanelBody>\n * \t\t\t{ __( 'My sidebar content' ) }\n * \t\t</PanelBody>\n * \t</PluginSidebar>\n * );\n * ```\n */\nexport default function PluginSidebarEditPost( { className, ...props } ) {\n\tconst { postTitle, shortcut, showIconLabels } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostTitle: select( editorStore ).getEditedPostAttribute( 'title' ),\n\t\t\tshortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getShortcutRepresentation( 'core/edit-post/toggle-sidebar' ),\n\t\t\tshowIconLabels: select( editPostStore ).isFeatureActive(\n\t\t\t\t'showIconLabels'\n\t\t\t),\n\t\t};\n\t}, [] );\n\treturn (\n\t\t<ComplementaryArea\n\t\t\tpanelClassName={ className }\n\t\t\tclassName=\"edit-post-sidebar\"\n\t\t\tsmallScreenTitle={ postTitle || __( '(no title)' ) }\n\t\t\tscope=\"core/edit-post\"\n\t\t\ttoggleShortcut={ shortcut }\n\t\t\tshowIconLabels={ showIconLabels }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * External dependencies\n */\nimport { kebabCase } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tButton,\n\tModal,\n\tTextControl,\n\tFlex,\n\tFlexItem,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\nimport { createBlock, serialize } from '@wordpress/blocks';\n\nfunction PostTemplateActions( { isPostsPage } ) {\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst [ isBusy, setIsBusy ] = useState( false );\n\tconst [ title, setTitle ] = useState( '' );\n\tconst { template, supportsTemplateMode, defaultTemplate } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPostType, getEditorSettings } = select(\n\t\t\t\teditorStore\n\t\t\t);\n\t\t\tconst { getPostType } = select( coreStore );\n\t\t\tconst { getEditedPostTemplate } = select( editPostStore );\n\n\t\t\tconst isViewable =\n\t\t\t\tgetPostType( getCurrentPostType() )?.viewable ?? false;\n\t\t\tconst _supportsTemplateMode =\n\t\t\t\tgetEditorSettings().supportsTemplateMode && isViewable;\n\n\t\t\treturn {\n\t\t\t\ttemplate: _supportsTemplateMode && getEditedPostTemplate(),\n\t\t\t\tsupportsTemplateMode: _supportsTemplateMode,\n\t\t\t\tdefaultTemplate: getEditorSettings().defaultBlockTemplate,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\tconst {\n\t\t__unstableCreateTemplate,\n\t\t__unstableSwitchToTemplateMode,\n\t} = useDispatch( editPostStore );\n\n\tif ( ! supportsTemplateMode ) {\n\t\treturn null;\n\t}\n\n\tconst defaultTitle = __( 'Custom Template' );\n\n\tasync function onCreateTemplate( event ) {\n\t\tevent.preventDefault();\n\n\t\tif ( isBusy ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsBusy( true );\n\n\t\tconst newTemplateContent =\n\t\t\tdefaultTemplate ??\n\t\t\tserialize( [\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/group',\n\t\t\t\t\t{\n\t\t\t\t\t\ttagName: 'header',\n\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock( 'core/site-title' ),\n\t\t\t\t\t\tcreateBlock( 'core/site-tagline' ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\tcreateBlock( 'core/separator' ),\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/group',\n\t\t\t\t\t{\n\t\t\t\t\t\ttagName: 'main',\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock(\n\t\t\t\t\t\t\t'core/group',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[ createBlock( 'core/post-title' ) ]\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcreateBlock( 'core/post-content', {\n\t\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t\t} ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t] );\n\n\t\tawait __unstableCreateTemplate( {\n\t\t\tslug: 'wp-custom-template-' + kebabCase( title || defaultTitle ),\n\t\t\tcontent: newTemplateContent,\n\t\t\ttitle: title || defaultTitle,\n\t\t} );\n\n\t\tsetIsBusy( false );\n\t\tsetIsModalOpen( false );\n\n\t\t__unstableSwitchToTemplateMode( true );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"edit-post-template__actions\">\n\t\t\t\t{ !! template && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={ () => __unstableSwitchToTemplateMode() }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Edit' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\t{ ! isPostsPage && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={ () => setIsModalOpen( true ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* translators: button to create a new template */\n\t\t\t\t\t\t\t_x( 'New', 'action' )\n\t\t\t\t\t\t}\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ __( 'Create custom template' ) }\n\t\t\t\t\tcloseLabel={ __( 'Close' ) }\n\t\t\t\t\tonRequestClose={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t} }\n\t\t\t\t\toverlayClassName=\"edit-post-template__modal\"\n\t\t\t\t>\n\t\t\t\t\t<form onSubmit={ onCreateTemplate }>\n\t\t\t\t\t\t<Flex align=\"flex-start\" gap={ 8 }>\n\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\t\t\t\tplaceholder={ defaultTitle }\n\t\t\t\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t\t'Describe the purpose of the template, e.g. \"Full Width\". Custom templates can be applied to any post or page.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t</Flex>\n\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tclassName=\"edit-post-template__modal-actions\"\n\t\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t\t\texpanded={ false }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tisBusy={ isBusy }\n\t\t\t\t\t\t\t\t\taria-disabled={ isBusy }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Create' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default PostTemplateActions;\n","/**\n * External dependencies\n */\nimport { partial, isEmpty, map, fromPairs } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useMemo } from '@wordpress/element';\nimport { Notice, PanelBody, SelectControl } from '@wordpress/components';\nimport { store as editorStore } from '@wordpress/editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostTemplateActions from './actions';\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'template';\n\nexport function TemplatePanel() {\n\tconst {\n\t\tisEnabled,\n\t\tisOpened,\n\t\tisPostsPage,\n\t\tselectedTemplate,\n\t\tavailableTemplates,\n\t\tfetchedTemplates,\n\t\tisViewable,\n\t\ttemplate,\n\t\tsupportsTemplateMode,\n\t\tcanUserCreate,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisEditorPanelEnabled,\n\t\t\tisEditorPanelOpened,\n\t\t\tgetEditedPostTemplate,\n\t\t} = select( editPostStore );\n\t\tconst {\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditorSettings,\n\t\t\tgetCurrentPostId,\n\t\t\tgetCurrentPostType,\n\t\t} = select( editorStore );\n\t\tconst {\n\t\t\tgetPostType,\n\t\t\tgetEntityRecord,\n\t\t\tgetEntityRecords,\n\t\t\tcanUser,\n\t\t} = select( coreStore );\n\n\t\tconst currentPostId = getCurrentPostId();\n\t\tconst currentPostType = getCurrentPostType();\n\t\tconst settings = getEntityRecord( 'root', 'site' );\n\t\tconst _isViewable = getPostType( currentPostType )?.viewable ?? false;\n\t\tconst _supportsTemplateMode =\n\t\t\tselect( editorStore ).getEditorSettings().supportsTemplateMode &&\n\t\t\t_isViewable;\n\n\t\tconst templateRecords = getEntityRecords( 'postType', 'wp_template', {\n\t\t\tpost_type: currentPostType,\n\t\t\tper_page: -1,\n\t\t} );\n\n\t\treturn {\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t\tisPostsPage: currentPostId === settings?.page_for_posts,\n\t\t\tselectedTemplate: getEditedPostAttribute( 'template' ),\n\t\t\tavailableTemplates: getEditorSettings().availableTemplates,\n\t\t\tfetchedTemplates: templateRecords,\n\t\t\ttemplate: _supportsTemplateMode && getEditedPostTemplate(),\n\t\t\tisViewable: _isViewable,\n\t\t\tsupportsTemplateMode: _supportsTemplateMode,\n\t\t\tcanUserCreate: canUser( 'create', 'templates' ),\n\t\t};\n\t}, [] );\n\n\tconst templates = useMemo( () => {\n\t\treturn {\n\t\t\t...availableTemplates,\n\t\t\t...fromPairs(\n\t\t\t\t( fetchedTemplates ?? [] ).map( ( { slug, title } ) => [\n\t\t\t\t\tslug,\n\t\t\t\t\ttitle.rendered,\n\t\t\t\t] )\n\t\t\t),\n\t\t};\n\t}, [ availableTemplates, fetchedTemplates ] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editPostStore );\n\tconst { editPost } = useDispatch( editorStore );\n\n\tif (\n\t\t! isEnabled ||\n\t\t! isViewable ||\n\t\t( isEmpty( availableTemplates ) &&\n\t\t\t( ! supportsTemplateMode || ! canUserCreate ) )\n\t) {\n\t\treturn null;\n\t}\n\n\tconst onTogglePanel = partial( toggleEditorPanelOpened, PANEL_NAME );\n\n\tlet panelTitle = __( 'Template' );\n\tif ( !! template ) {\n\t\tpanelTitle = sprintf(\n\t\t\t/* translators: %s: template title */\n\t\t\t__( 'Template: %s' ),\n\t\t\ttemplate?.title ?? template.slug\n\t\t);\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={ panelTitle }\n\t\t\topened={ isOpened }\n\t\t\tonToggle={ onTogglePanel }\n\t\t>\n\t\t\t{ isPostsPage ? (\n\t\t\t\t<Notice\n\t\t\t\t\tclassName=\"edit-post-template__notice\"\n\t\t\t\t\tstatus=\"warning\"\n\t\t\t\t\tisDismissible={ false }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'The posts page template cannot be changed.' ) }\n\t\t\t\t</Notice>\n\t\t\t) : (\n\t\t\t\t<SelectControl\n\t\t\t\t\thideLabelFromVision\n\t\t\t\t\tlabel={ __( 'Template:' ) }\n\t\t\t\t\tvalue={\n\t\t\t\t\t\tObject.keys( templates ).includes( selectedTemplate )\n\t\t\t\t\t\t\t? selectedTemplate\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t}\n\t\t\t\t\tonChange={ ( templateSlug ) => {\n\t\t\t\t\t\teditPost( {\n\t\t\t\t\t\t\ttemplate: templateSlug || '',\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\toptions={ map(\n\t\t\t\t\t\ttemplates,\n\t\t\t\t\t\t( templateName, templateSlug ) => ( {\n\t\t\t\t\t\t\tvalue: templateSlug,\n\t\t\t\t\t\t\tlabel: templateName,\n\t\t\t\t\t\t} )\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ canUserCreate && (\n\t\t\t\t<PostTemplateActions isPostsPage={ isPostsPage } />\n\t\t\t) }\n\t\t</PanelBody>\n\t);\n}\n\nexport default TemplatePanel;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst layout = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18 5.5H6a.5.5 0 00-.5.5v3h13V6a.5.5 0 00-.5-.5zm.5 5H10v8h8a.5.5 0 00.5-.5v-7.5zm-10 0h-3V18a.5.5 0 00.5.5h2.5v-8zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\" />\n\t</SVG>\n);\n\nexport default layout;\n","/**\n * WordPress dependencies\n */\nimport { Icon, layout } from '@wordpress/icons';\nimport { useSelect } from '@wordpress/data';\nimport { Flex, FlexItem, FlexBlock, PanelBody } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nfunction TemplateSummary() {\n\tconst template = useSelect( ( select ) => {\n\t\tconst { getEditedPostTemplate } = select( editPostStore );\n\t\treturn getEditedPostTemplate();\n\t}, [] );\n\n\tif ( ! template ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody>\n\t\t\t<Flex align=\"flex-start\" gap=\"3\">\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<Icon icon={ layout } />\n\t\t\t\t</FlexItem>\n\n\t\t\t\t<FlexBlock>\n\t\t\t\t\t<h2 className=\"edit-post-template-summary__title\">\n\t\t\t\t\t\t{ template?.title || template?.slug }\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p>{ template?.description }</p>\n\t\t\t\t</FlexBlock>\n\t\t\t</Flex>\n\t\t</PanelBody>\n\t);\n}\n\nexport default TemplateSummary;\n","/**\n * WordPress dependencies\n */\nimport {\n\tBlockInspector,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { cog } from '@wordpress/icons';\nimport { Platform } from '@wordpress/element';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport SettingsHeader from '../settings-header';\nimport PostStatus from '../post-status';\nimport LastRevision from '../last-revision';\nimport PostTaxonomies from '../post-taxonomies';\nimport FeaturedImage from '../featured-image';\nimport PostExcerpt from '../post-excerpt';\nimport PostLink from '../post-link';\nimport DiscussionPanel from '../discussion-panel';\nimport PageAttributes from '../page-attributes';\nimport MetaBoxes from '../../meta-boxes';\nimport PluginDocumentSettingPanel from '../plugin-document-setting-panel';\nimport PluginSidebarEditPost from '../plugin-sidebar';\nimport Template from '../template';\nimport TemplateSummary from '../template-summary';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as editPostStore } from '../../../store';\n\nconst SIDEBAR_ACTIVE_BY_DEFAULT = Platform.select( {\n\tweb: true,\n\tnative: false,\n} );\n\nconst SettingsSidebar = () => {\n\tconst { sidebarName, keyboardShortcut, isTemplateMode } = useSelect(\n\t\t( select ) => {\n\t\t\t// The settings sidebar is used by the edit-post/document and edit-post/block sidebars.\n\t\t\t// sidebarName represents the sidebar that is active or that should be active when the SettingsSidebar toggle button is pressed.\n\t\t\t// If one of the two sidebars is active the component will contain the content of that sidebar.\n\t\t\t// When neither of the the two sidebars is active we can not simply return null, because the PluginSidebarEditPost\n\t\t\t// component, besides being used to render the sidebar, also renders the toggle button. In that case sidebarName\n\t\t\t// should contain the sidebar that will be active when the toggle button is pressed. If a block\n\t\t\t// is selected, that should be edit-post/block otherwise it's edit-post/document.\n\t\t\tlet sidebar = select( interfaceStore ).getActiveComplementaryArea(\n\t\t\t\teditPostStore.name\n\t\t\t);\n\t\t\tif (\n\t\t\t\t! [ 'edit-post/document', 'edit-post/block' ].includes(\n\t\t\t\t\tsidebar\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tif ( select( blockEditorStore ).getBlockSelectionStart() ) {\n\t\t\t\t\tsidebar = 'edit-post/block';\n\t\t\t\t}\n\t\t\t\tsidebar = 'edit-post/document';\n\t\t\t}\n\t\t\tconst shortcut = select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getShortcutRepresentation( 'core/edit-post/toggle-sidebar' );\n\t\t\treturn {\n\t\t\t\tsidebarName: sidebar,\n\t\t\t\tkeyboardShortcut: shortcut,\n\t\t\t\tisTemplateMode: select( editPostStore ).isEditingTemplate(),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\treturn (\n\t\t<PluginSidebarEditPost\n\t\t\tidentifier={ sidebarName }\n\t\t\theader={ <SettingsHeader sidebarName={ sidebarName } /> }\n\t\t\tcloseLabel={ __( 'Close settings' ) }\n\t\t\theaderClassName=\"edit-post-sidebar__panel-tabs\"\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\ttitle={ __( 'Settings' ) }\n\t\t\ttoggleShortcut={ keyboardShortcut }\n\t\t\ticon={ cog }\n\t\t\tisActiveByDefault={ SIDEBAR_ACTIVE_BY_DEFAULT }\n\t\t>\n\t\t\t{ ! isTemplateMode && sidebarName === 'edit-post/document' && (\n\t\t\t\t<>\n\t\t\t\t\t<PostStatus />\n\t\t\t\t\t<Template />\n\t\t\t\t\t<PluginDocumentSettingPanel.Slot />\n\t\t\t\t\t<LastRevision />\n\t\t\t\t\t<PostLink />\n\t\t\t\t\t<PostTaxonomies />\n\t\t\t\t\t<FeaturedImage />\n\t\t\t\t\t<PostExcerpt />\n\t\t\t\t\t<DiscussionPanel />\n\t\t\t\t\t<PageAttributes />\n\t\t\t\t\t<MetaBoxes location=\"side\" />\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t{ isTemplateMode && sidebarName === 'edit-post/document' && (\n\t\t\t\t<TemplateSummary />\n\t\t\t) }\n\t\t\t{ sidebarName === 'edit-post/block' && <BlockInspector /> }\n\t\t</PluginSidebarEditPost>\n\t);\n};\n\nexport default SettingsSidebar;\n","export default function WelcomeGuideImage( { nonAnimatedSrc, animatedSrc } ) {\n\treturn (\n\t\t<picture className=\"edit-post-welcome-guide__image\">\n\t\t\t<source\n\t\t\t\tsrcSet={ nonAnimatedSrc }\n\t\t\t\tmedia=\"(prefers-reduced-motion: reduce)\"\n\t\t\t/>\n\t\t\t<img src={ animatedSrc } width=\"312\" height=\"240\" alt=\"\" />\n\t\t</picture>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { ExternalLink, Guide } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { createInterpolateElement } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport WelcomeGuideImage from './image';\nimport { store as editPostStore } from '../../store';\n\nexport default function WelcomeGuideDefault() {\n\tconst { toggleFeature } = useDispatch( editPostStore );\n\n\treturn (\n\t\t<Guide\n\t\t\tclassName=\"edit-post-welcome-guide\"\n\t\t\tcontentLabel={ __( 'Welcome to the block editor' ) }\n\t\t\tfinishButtonText={ __( 'Get started' ) }\n\t\t\tonFinish={ () => toggleFeature( 'welcomeGuide' ) }\n\t\t\tpages={ [\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-canvas.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-canvas.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Welcome to the block editor' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'In the WordPress editor, each paragraph, image, or video is presented as a distinct “block” of content.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-editor.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-editor.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Make each block your own' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Each block comes with its own set of controls for changing things like color, width, and alignment. These will show and hide automatically when you have a block selected.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-library.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-library.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Get to know the block library' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ createInterpolateElement(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t'All of the blocks available to you live in the block library. You’ll find it wherever you see the <InserterIconImage /> icon.'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tInserterIconImage: (\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\talt={ __( 'inserter' ) }\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='18' height='18' rx='2' fill='%231E1E1E'/%3E%3Cpath d='M9.22727 4V14M4 8.77273H14' stroke='white' stroke-width='1.5'/%3E%3C/svg%3E%0A\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-documentation.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-documentation.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Learn how to use the block editor' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'New to the block editor? Want to learn more about using it? '\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t\t'https://wordpress.org/support/article/wordpress-editor/'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( \"Here's a detailed guide.\" ) }\n\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t] }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { Guide } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport WelcomeGuideImage from './image';\nimport { store as editPostStore } from '../../store';\n\nexport default function WelcomeGuideTemplate() {\n\tconst { toggleFeature } = useDispatch( editPostStore );\n\n\treturn (\n\t\t<Guide\n\t\t\tclassName=\"edit-template-welcome-guide\"\n\t\t\tcontentLabel={ __( 'Welcome to the template editor' ) }\n\t\t\tfinishButtonText={ __( 'Get started' ) }\n\t\t\tonFinish={ () => toggleFeature( 'welcomeGuideTemplate' ) }\n\t\t\tpages={ [\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-template-editor.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-template-editor.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Welcome to the template editor' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Templates help define the layout of the site. You can customize all aspects of your posts and pages using blocks and patterns in this editor.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t] }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport WelcomeGuideDefault from './default';\nimport WelcomeGuideTemplate from './template';\nimport { store as editPostStore } from '../../store';\n\nexport default function WelcomeGuide() {\n\tconst { isActive, isTemplateMode } = useSelect( ( select ) => {\n\t\tconst { isFeatureActive, isEditingTemplate } = select( editPostStore );\n\t\tconst _isTemplateMode = isEditingTemplate();\n\t\tconst feature = _isTemplateMode\n\t\t\t? 'welcomeGuideTemplate'\n\t\t\t: 'welcomeGuide';\n\n\t\treturn {\n\t\t\tisActive: isFeatureActive( feature ),\n\t\t\tisTemplateMode: _isTemplateMode,\n\t\t};\n\t}, [] );\n\n\tif ( ! isActive ) {\n\t\treturn null;\n\t}\n\n\treturn isTemplateMode ? <WelcomeGuideTemplate /> : <WelcomeGuideDefault />;\n}\n","/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { withPluginContext } from '@wordpress/plugins';\nimport { createSlotFill, PanelBody } from '@wordpress/components';\n\nconst { Fill, Slot } = createSlotFill( 'PluginPostPublishPanel' );\n\nconst PluginPostPublishPanelFill = ( {\n\tchildren,\n\tclassName,\n\ttitle,\n\tinitialOpen = false,\n\ticon,\n} ) => (\n\t<Fill>\n\t\t<PanelBody\n\t\t\tclassName={ className }\n\t\t\tinitialOpen={ initialOpen || ! title }\n\t\t\ttitle={ title }\n\t\t\ticon={ icon }\n\t\t>\n\t\t\t{ children }\n\t\t</PanelBody>\n\t</Fill>\n);\n/**\n * Renders provided content to the post-publish panel in the publish flow\n * (side panel that opens after a user publishes the post).\n *\n * @param {Object}                props                                 Component properties.\n * @param {string}                [props.className]                     An optional class name added to the panel.\n * @param {string}                [props.title]                         Title displayed at the top of the panel.\n * @param {boolean}               [props.initialOpen=false]             Whether to have the panel initially opened. When no title is provided it is always opened.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginPostPublishPanel = wp.editPost.PluginPostPublishPanel;\n *\n * function MyPluginPostPublishPanel() {\n * \treturn wp.element.createElement(\n * \t\tPluginPostPublishPanel,\n * \t\t{\n * \t\t\tclassName: 'my-plugin-post-publish-panel',\n * \t\t\ttitle: __( 'My panel title' ),\n * \t\t\tinitialOpen: true,\n * \t\t},\n * \t\t__( 'My panel content' )\n * \t);\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginPostPublishPanel } from '@wordpress/edit-post';\n *\n * const MyPluginPostPublishPanel = () => (\n * \t<PluginPostPublishPanel\n * \t\tclassName=\"my-plugin-post-publish-panel\"\n * \t\ttitle={ __( 'My panel title' ) }\n * \t\tinitialOpen={ true }\n * \t>\n *         { __( 'My panel content' ) }\n * \t</PluginPostPublishPanel>\n * );\n * ```\n *\n * @return {WPComponent} The component to be rendered.\n */\n\nconst PluginPostPublishPanel = compose(\n\twithPluginContext( ( context, ownProps ) => {\n\t\treturn {\n\t\t\ticon: ownProps.icon || context.icon,\n\t\t};\n\t} )\n)( PluginPostPublishPanelFill );\n\nPluginPostPublishPanel.Slot = Slot;\n\nexport default PluginPostPublishPanel;\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelBody } from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\nimport { withPluginContext } from '@wordpress/plugins';\nconst { Fill, Slot } = createSlotFill( 'PluginPrePublishPanel' );\n\nconst PluginPrePublishPanelFill = ( {\n\tchildren,\n\tclassName,\n\ttitle,\n\tinitialOpen = false,\n\ticon,\n} ) => (\n\t<Fill>\n\t\t<PanelBody\n\t\t\tclassName={ className }\n\t\t\tinitialOpen={ initialOpen || ! title }\n\t\t\ttitle={ title }\n\t\t\ticon={ icon }\n\t\t>\n\t\t\t{ children }\n\t\t</PanelBody>\n\t</Fill>\n);\n\n/**\n * Renders provided content to the pre-publish side panel in the publish flow\n * (side panel that opens when a user first pushes \"Publish\" from the main editor).\n *\n * @param {Object}                props                                 Component props.\n * @param {string}                [props.className]                     An optional class name added to the panel.\n * @param {string}                [props.title]                         Title displayed at the top of the panel.\n * @param {boolean}               [props.initialOpen=false]             Whether to have the panel initially opened.\n *                                                                      When no title is provided it is always opened.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/)\n *                                                                      icon slug string, or an SVG WP element, to be rendered when\n *                                                                      the sidebar is pinned to toolbar.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginPrePublishPanel = wp.editPost.PluginPrePublishPanel;\n *\n * function MyPluginPrePublishPanel() {\n * \treturn wp.element.createElement(\n * \t\tPluginPrePublishPanel,\n * \t\t{\n * \t\t\tclassName: 'my-plugin-pre-publish-panel',\n * \t\t\ttitle: __( 'My panel title' ),\n * \t\t\tinitialOpen: true,\n * \t\t},\n * \t\t__( 'My panel content' )\n * \t);\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginPrePublishPanel } from '@wordpress/edit-post';\n *\n * const MyPluginPrePublishPanel = () => (\n * \t<PluginPrePublishPanel\n * \t\tclassName=\"my-plugin-pre-publish-panel\"\n * \t\ttitle={ __( 'My panel title' ) }\n * \t\tinitialOpen={ true }\n * \t>\n * \t    { __( 'My panel content' ) }\n * \t</PluginPrePublishPanel>\n * );\n * ```\n *\n * @return {WPComponent} The component to be rendered.\n */\nconst PluginPrePublishPanel = compose(\n\twithPluginContext( ( context, ownProps ) => {\n\t\treturn {\n\t\t\ticon: ownProps.icon || context.icon,\n\t\t};\n\t} )\n)( PluginPrePublishPanelFill );\n\nPluginPrePublishPanel.Slot = Slot;\n\nexport default PluginPrePublishPanel;\n","/**\n * WordPress dependencies\n */\nimport {\n\tEntitiesSavedStates,\n\tPostPublishPanel,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { Button, createSlotFill } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useCallback } from '@wordpress/element';\n/**\n * Internal dependencies\n */\nimport PluginPostPublishPanel from '../sidebar/plugin-post-publish-panel';\nimport PluginPrePublishPanel from '../sidebar/plugin-pre-publish-panel';\nimport { store as editPostStore } from '../../store';\n\nconst { Fill, Slot } = createSlotFill( 'ActionsPanel' );\n\nexport const ActionsPanelFill = Fill;\n\nexport default function ActionsPanel( {\n\tsetEntitiesSavedStatesCallback,\n\tcloseEntitiesSavedStates,\n\tisEntitiesSavedStatesOpen,\n} ) {\n\tconst { closePublishSidebar, togglePublishSidebar } = useDispatch(\n\t\teditPostStore\n\t);\n\tconst {\n\t\tpublishSidebarOpened,\n\t\thasActiveMetaboxes,\n\t\tisSavingMetaBoxes,\n\t\thasNonPostEntityChanges,\n\t} = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tpublishSidebarOpened: select(\n\t\t\t\teditPostStore\n\t\t\t).isPublishSidebarOpened(),\n\t\t\thasActiveMetaboxes: select( editPostStore ).hasMetaBoxes(),\n\t\t\tisSavingMetaBoxes: select( editPostStore ).isSavingMetaBoxes(),\n\t\t\thasNonPostEntityChanges: select(\n\t\t\t\teditorStore\n\t\t\t).hasNonPostEntityChanges(),\n\t\t};\n\t}, [] );\n\n\tconst openEntitiesSavedStates = useCallback(\n\t\t() => setEntitiesSavedStatesCallback( true ),\n\t\t[]\n\t);\n\n\t// It is ok for these components to be unmounted when not in visual use.\n\t// We don't want more than one present at a time, decide which to render.\n\tlet unmountableContent;\n\tif ( publishSidebarOpened ) {\n\t\tunmountableContent = (\n\t\t\t<PostPublishPanel\n\t\t\t\tonClose={ closePublishSidebar }\n\t\t\t\tforceIsDirty={ hasActiveMetaboxes }\n\t\t\t\tforceIsSaving={ isSavingMetaBoxes }\n\t\t\t\tPrePublishExtension={ PluginPrePublishPanel.Slot }\n\t\t\t\tPostPublishExtension={ PluginPostPublishPanel.Slot }\n\t\t\t/>\n\t\t);\n\t} else if ( hasNonPostEntityChanges ) {\n\t\tunmountableContent = (\n\t\t\t<div className=\"edit-post-layout__toggle-entities-saved-states-panel\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tclassName=\"edit-post-layout__toggle-entities-saved-states-panel-button\"\n\t\t\t\t\tonClick={ openEntitiesSavedStates }\n\t\t\t\t\taria-expanded={ false }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Open save panel' ) }\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tunmountableContent = (\n\t\t\t<div className=\"edit-post-layout__toggle-publish-panel\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tclassName=\"edit-post-layout__toggle-publish-panel-button\"\n\t\t\t\t\tonClick={ togglePublishSidebar }\n\t\t\t\t\taria-expanded={ false }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Open publish panel' ) }\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Since EntitiesSavedStates controls its own panel, we can keep it\n\t// always mounted to retain its own component state (such as checkboxes).\n\treturn (\n\t\t<>\n\t\t\t{ isEntitiesSavedStatesOpen && (\n\t\t\t\t<EntitiesSavedStates close={ closeEntitiesSavedStates } />\n\t\t\t) }\n\t\t\t<Slot bubblesVirtually />\n\t\t\t{ ! isEntitiesSavedStatesOpen && unmountableContent }\n\t\t</>\n\t);\n}\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAutosaveMonitor,\n\tLocalAutosaveMonitor,\n\tUnsavedChangesWarning,\n\tEditorNotices,\n\tEditorKeyboardShortcutsRegister,\n\tEditorSnackbars,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { BlockBreadcrumb, BlockStyles } from '@wordpress/block-editor';\nimport { Button, ScrollLock, Popover } from '@wordpress/components';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { PluginArea } from '@wordpress/plugins';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport {\n\tComplementaryArea,\n\tFullscreenMode,\n\tInterfaceSkeleton,\n\tstore as interfaceStore,\n} from '@wordpress/interface';\nimport { useState, useEffect, useCallback } from '@wordpress/element';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport TextEditor from '../text-editor';\nimport VisualEditor from '../visual-editor';\nimport EditPostKeyboardShortcuts from '../keyboard-shortcuts';\nimport KeyboardShortcutHelpModal from '../keyboard-shortcut-help-modal';\nimport PreferencesModal from '../preferences-modal';\nimport BrowserURL from '../browser-url';\nimport Header from '../header';\nimport InserterSidebar from '../secondary-sidebar/inserter-sidebar';\nimport ListViewSidebar from '../secondary-sidebar/list-view-sidebar';\nimport SettingsSidebar from '../sidebar/settings-sidebar';\nimport MetaBoxes from '../meta-boxes';\nimport WelcomeGuide from '../welcome-guide';\nimport ActionsPanel from './actions-panel';\nimport { store as editPostStore } from '../../store';\n\nconst interfaceLabels = {\n\tsecondarySidebar: __( 'Block library' ),\n\t/* translators: accessibility text for the editor top bar landmark region. */\n\theader: __( 'Editor top bar' ),\n\t/* translators: accessibility text for the editor content landmark region. */\n\tbody: __( 'Editor content' ),\n\t/* translators: accessibility text for the editor settings landmark region. */\n\tsidebar: __( 'Editor settings' ),\n\t/* translators: accessibility text for the editor publish landmark region. */\n\tactions: __( 'Editor publish' ),\n\t/* translators: accessibility text for the editor footer landmark region. */\n\tfooter: __( 'Editor footer' ),\n};\n\nfunction Layout( { styles } ) {\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst isHugeViewport = useViewportMatch( 'huge', '>=' );\n\tconst {\n\t\topenGeneralSidebar,\n\t\tcloseGeneralSidebar,\n\t\tsetIsInserterOpened,\n\t} = useDispatch( editPostStore );\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\tconst {\n\t\tmode,\n\t\tisFullscreenActive,\n\t\tisRichEditingEnabled,\n\t\tsidebarIsOpened,\n\t\thasActiveMetaboxes,\n\t\thasFixedToolbar,\n\t\tpreviousShortcut,\n\t\tnextShortcut,\n\t\thasBlockSelected,\n\t\tisInserterOpened,\n\t\tisListViewOpened,\n\t\tshowIconLabels,\n\t\thasReducedUI,\n\t\tshowBlockBreadcrumbs,\n\t\tisTemplateMode,\n\t\tdocumentLabel,\n\t} = useSelect( ( select ) => {\n\t\tconst { getEditorSettings, getPostTypeLabel } = select( editorStore );\n\t\tconst editorSettings = getEditorSettings();\n\t\tconst postTypeLabel = getPostTypeLabel();\n\n\t\treturn {\n\t\t\tisTemplateMode: select( editPostStore ).isEditingTemplate(),\n\t\t\thasFixedToolbar: select( editPostStore ).isFeatureActive(\n\t\t\t\t'fixedToolbar'\n\t\t\t),\n\t\t\tsidebarIsOpened: !! (\n\t\t\t\tselect( interfaceStore ).getActiveComplementaryArea(\n\t\t\t\t\teditPostStore.name\n\t\t\t\t) || select( editPostStore ).isPublishSidebarOpened()\n\t\t\t),\n\t\t\tisFullscreenActive: select( editPostStore ).isFeatureActive(\n\t\t\t\t'fullscreenMode'\n\t\t\t),\n\t\t\tisInserterOpened: select( editPostStore ).isInserterOpened(),\n\t\t\tisListViewOpened: select( editPostStore ).isListViewOpened(),\n\t\t\tmode: select( editPostStore ).getEditorMode(),\n\t\t\tisRichEditingEnabled: editorSettings.richEditingEnabled,\n\t\t\thasActiveMetaboxes: select( editPostStore ).hasMetaBoxes(),\n\t\t\tpreviousShortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getAllShortcutKeyCombinations( 'core/edit-post/previous-region' ),\n\t\t\tnextShortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getAllShortcutKeyCombinations( 'core/edit-post/next-region' ),\n\t\t\tshowIconLabels: select( editPostStore ).isFeatureActive(\n\t\t\t\t'showIconLabels'\n\t\t\t),\n\t\t\thasReducedUI: select( editPostStore ).isFeatureActive(\n\t\t\t\t'reducedUI'\n\t\t\t),\n\t\t\tshowBlockBreadcrumbs: select( editPostStore ).isFeatureActive(\n\t\t\t\t'showBlockBreadcrumbs'\n\t\t\t),\n\t\t\t// translators: Default label for the Document in the Block Breadcrumb.\n\t\t\tdocumentLabel: postTypeLabel || _x( 'Document', 'noun' ),\n\t\t};\n\t}, [] );\n\tconst className = classnames( 'edit-post-layout', 'is-mode-' + mode, {\n\t\t'is-sidebar-opened': sidebarIsOpened,\n\t\t'has-fixed-toolbar': hasFixedToolbar,\n\t\t'has-metaboxes': hasActiveMetaboxes,\n\t\t'show-icon-labels': showIconLabels,\n\t} );\n\tconst openSidebarPanel = () =>\n\t\topenGeneralSidebar(\n\t\t\thasBlockSelected ? 'edit-post/block' : 'edit-post/document'\n\t\t);\n\n\t// Inserter and Sidebars are mutually exclusive\n\tuseEffect( () => {\n\t\tif ( sidebarIsOpened && ! isHugeViewport ) {\n\t\t\tsetIsInserterOpened( false );\n\t\t}\n\t}, [ sidebarIsOpened, isHugeViewport ] );\n\tuseEffect( () => {\n\t\tif ( isInserterOpened && ! isHugeViewport ) {\n\t\t\tcloseGeneralSidebar();\n\t\t}\n\t}, [ isInserterOpened, isHugeViewport ] );\n\n\t// Local state for save panel.\n\t// Note 'truthy' callback implies an open panel.\n\tconst [\n\t\tentitiesSavedStatesCallback,\n\t\tsetEntitiesSavedStatesCallback,\n\t] = useState( false );\n\tconst closeEntitiesSavedStates = useCallback(\n\t\t( arg ) => {\n\t\t\tif ( typeof entitiesSavedStatesCallback === 'function' ) {\n\t\t\t\tentitiesSavedStatesCallback( arg );\n\t\t\t}\n\t\t\tsetEntitiesSavedStatesCallback( false );\n\t\t},\n\t\t[ entitiesSavedStatesCallback ]\n\t);\n\n\tconst secondarySidebar = () => {\n\t\tif ( mode === 'visual' && isInserterOpened ) {\n\t\t\treturn <InserterSidebar />;\n\t\t}\n\t\tif ( mode === 'visual' && isListViewOpened ) {\n\t\t\treturn <ListViewSidebar />;\n\t\t}\n\t\treturn null;\n\t};\n\n\tfunction onPluginAreaError( name ) {\n\t\tcreateErrorNotice(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s: plugin name */\n\t\t\t\t__(\n\t\t\t\t\t'The \"%s\" plugin has encountered an error and cannot be rendered.'\n\t\t\t\t),\n\t\t\t\tname\n\t\t\t)\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FullscreenMode isActive={ isFullscreenActive } />\n\t\t\t<BrowserURL />\n\t\t\t<UnsavedChangesWarning />\n\t\t\t<AutosaveMonitor />\n\t\t\t<LocalAutosaveMonitor />\n\t\t\t<EditPostKeyboardShortcuts />\n\t\t\t<EditorKeyboardShortcutsRegister />\n\t\t\t<SettingsSidebar />\n\t\t\t<InterfaceSkeleton\n\t\t\t\tclassName={ className }\n\t\t\t\tlabels={ interfaceLabels }\n\t\t\t\theader={\n\t\t\t\t\t<Header\n\t\t\t\t\t\tsetEntitiesSavedStatesCallback={\n\t\t\t\t\t\t\tsetEntitiesSavedStatesCallback\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tsecondarySidebar={ secondarySidebar() }\n\t\t\t\tsidebar={\n\t\t\t\t\t( ! isMobileViewport || sidebarIsOpened ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ ! isMobileViewport && ! sidebarIsOpened && (\n\t\t\t\t\t\t\t\t<div className=\"edit-post-layout__toggle-sidebar-panel\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"edit-post-layout__toggle-sidebar-panel-button\"\n\t\t\t\t\t\t\t\t\t\tonClick={ openSidebarPanel }\n\t\t\t\t\t\t\t\t\t\taria-expanded={ false }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ hasBlockSelected\n\t\t\t\t\t\t\t\t\t\t\t? __( 'Open block settings' )\n\t\t\t\t\t\t\t\t\t\t\t: __( 'Open document settings' ) }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<ComplementaryArea.Slot scope=\"core/edit-post\" />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tnotices={ <EditorSnackbars /> }\n\t\t\t\tcontent={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<EditorNotices />\n\t\t\t\t\t\t{ ( mode === 'text' || ! isRichEditingEnabled ) && (\n\t\t\t\t\t\t\t<TextEditor />\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ isRichEditingEnabled && mode === 'visual' && (\n\t\t\t\t\t\t\t<VisualEditor styles={ styles } />\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ ! isTemplateMode && (\n\t\t\t\t\t\t\t<div className=\"edit-post-layout__metaboxes\">\n\t\t\t\t\t\t\t\t<MetaBoxes location=\"normal\" />\n\t\t\t\t\t\t\t\t<MetaBoxes location=\"advanced\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ isMobileViewport && sidebarIsOpened && (\n\t\t\t\t\t\t\t<ScrollLock />\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<BlockStyles.Slot scope=\"core/block-inspector\" />\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\tfooter={\n\t\t\t\t\t! hasReducedUI &&\n\t\t\t\t\tshowBlockBreadcrumbs &&\n\t\t\t\t\t! isMobileViewport &&\n\t\t\t\t\tisRichEditingEnabled &&\n\t\t\t\t\tmode === 'visual' && (\n\t\t\t\t\t\t<div className=\"edit-post-layout__footer\">\n\t\t\t\t\t\t\t<BlockBreadcrumb rootLabelText={ documentLabel } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tactions={\n\t\t\t\t\t<ActionsPanel\n\t\t\t\t\t\tcloseEntitiesSavedStates={ closeEntitiesSavedStates }\n\t\t\t\t\t\tisEntitiesSavedStatesOpen={\n\t\t\t\t\t\t\tentitiesSavedStatesCallback\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetEntitiesSavedStatesCallback={\n\t\t\t\t\t\t\tsetEntitiesSavedStatesCallback\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tshortcuts={ {\n\t\t\t\t\tprevious: previousShortcut,\n\t\t\t\t\tnext: nextShortcut,\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t<PreferencesModal />\n\t\t\t<KeyboardShortcutHelpModal />\n\t\t\t<WelcomeGuide />\n\t\t\t<Popover.Slot />\n\t\t\t<PluginArea onError={ onPluginAreaError } />\n\t\t</>\n\t);\n}\n\nexport default Layout;\n","/**\n * Internal dependencies\n */\nimport {\n\tuseBlockSelectionListener,\n\tuseUpdatePostLinkListener,\n} from './listener-hooks';\n\n/**\n * Data component used for initializing the editor and re-initializes\n * when postId changes or on unmount.\n *\n * @param {number} postId The id of the post.\n * @return {null} This is a data component so does not render any ui.\n */\nexport default function EditorInitialization( { postId } ) {\n\tuseBlockSelectionListener( postId );\n\tuseUpdatePostLinkListener( postId );\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport {\n\tSTORE_NAME,\n\tVIEW_AS_LINK_SELECTOR,\n\tVIEW_AS_PREVIEW_LINK_SELECTOR,\n} from '../../store/constants';\n\n/**\n * This listener hook monitors for block selection and triggers the appropriate\n * sidebar state.\n *\n * @param {number} postId The current post id.\n */\nexport const useBlockSelectionListener = ( postId ) => {\n\tconst { hasBlockSelection, isEditorSidebarOpened } = useSelect(\n\t\t( select ) => ( {\n\t\t\thasBlockSelection: !! select(\n\t\t\t\tblockEditorStore\n\t\t\t).getBlockSelectionStart(),\n\t\t\tisEditorSidebarOpened: select( STORE_NAME ).isEditorSidebarOpened(),\n\t\t} ),\n\t\t[ postId ]\n\t);\n\n\tconst { openGeneralSidebar } = useDispatch( STORE_NAME );\n\n\tuseEffect( () => {\n\t\tif ( ! isEditorSidebarOpened ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( hasBlockSelection ) {\n\t\t\topenGeneralSidebar( 'edit-post/block' );\n\t\t} else {\n\t\t\topenGeneralSidebar( 'edit-post/document' );\n\t\t}\n\t}, [ hasBlockSelection, isEditorSidebarOpened ] );\n};\n\n/**\n * This listener hook monitors any change in permalink and updates the view\n * post link in the admin bar.\n *\n * @param {number} postId\n */\nexport const useUpdatePostLinkListener = ( postId ) => {\n\tconst { newPermalink } = useSelect(\n\t\t( select ) => ( {\n\t\t\tnewPermalink: select( editorStore ).getCurrentPost().link,\n\t\t} ),\n\t\t[ postId ]\n\t);\n\tconst nodeToUpdate = useRef();\n\n\tuseEffect( () => {\n\t\tnodeToUpdate.current =\n\t\t\tdocument.querySelector( VIEW_AS_PREVIEW_LINK_SELECTOR ) ||\n\t\t\tdocument.querySelector( VIEW_AS_LINK_SELECTOR );\n\t}, [ postId ] );\n\n\tuseEffect( () => {\n\t\tif ( ! newPermalink || ! nodeToUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\t\tnodeToUpdate.current.setAttribute( 'href', newPermalink );\n\t}, [ newPermalink ] );\n};\n","/**\n * External dependencies\n */\nimport { size, map, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tEditorProvider,\n\tErrorBoundary,\n\tPostLockedModal,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport { StrictMode, useMemo } from '@wordpress/element';\nimport { SlotFillProvider } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { ShortcutProvider } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport Layout from './components/layout';\nimport EditorInitialization from './components/editor-initialization';\nimport { store as editPostStore } from './store';\n\nfunction Editor( {\n\tpostId,\n\tpostType,\n\tsettings,\n\tinitialEdits,\n\tonError,\n\t...props\n} ) {\n\tconst {\n\t\thasFixedToolbar,\n\t\tfocusMode,\n\t\thasReducedUI,\n\t\thasThemeStyles,\n\t\tpost,\n\t\tpreferredStyleVariations,\n\t\thiddenBlockTypes,\n\t\tblockTypes,\n\t\t__experimentalLocalAutosaveInterval,\n\t\tkeepCaretInsideBlock,\n\t\tisTemplateMode,\n\t\ttemplate,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tisFeatureActive,\n\t\t\t\tgetPreference,\n\t\t\t\t__experimentalGetPreviewDeviceType,\n\t\t\t\tisEditingTemplate,\n\t\t\t\tgetEditedPostTemplate,\n\t\t\t} = select( editPostStore );\n\t\t\tconst { getEntityRecord, getPostType, getEntityRecords } = select(\n\t\t\t\tcoreStore\n\t\t\t);\n\t\t\tconst { getEditorSettings } = select( editorStore );\n\t\t\tconst { getBlockTypes } = select( blocksStore );\n\t\t\tconst isTemplate = [ 'wp_template', 'wp_template_part' ].includes(\n\t\t\t\tpostType\n\t\t\t);\n\t\t\t// Ideally the initializeEditor function should be called using the ID of the REST endpoint.\n\t\t\t// to avoid the special case.\n\t\t\tlet postObject;\n\t\t\tif ( isTemplate ) {\n\t\t\t\tconst posts = getEntityRecords( 'postType', postType, {\n\t\t\t\t\twp_id: postId,\n\t\t\t\t} );\n\t\t\t\tpostObject = posts?.[ 0 ];\n\t\t\t} else {\n\t\t\t\tpostObject = getEntityRecord( 'postType', postType, postId );\n\t\t\t}\n\t\t\tconst supportsTemplateMode = getEditorSettings()\n\t\t\t\t.supportsTemplateMode;\n\t\t\tconst isViewable = getPostType( postType )?.viewable ?? false;\n\n\t\t\treturn {\n\t\t\t\thasFixedToolbar:\n\t\t\t\t\tisFeatureActive( 'fixedToolbar' ) ||\n\t\t\t\t\t__experimentalGetPreviewDeviceType() !== 'Desktop',\n\t\t\t\tfocusMode: isFeatureActive( 'focusMode' ),\n\t\t\t\thasReducedUI: isFeatureActive( 'reducedUI' ),\n\t\t\t\thasThemeStyles: isFeatureActive( 'themeStyles' ),\n\t\t\t\tpreferredStyleVariations: getPreference(\n\t\t\t\t\t'preferredStyleVariations'\n\t\t\t\t),\n\t\t\t\thiddenBlockTypes: getPreference( 'hiddenBlockTypes' ),\n\t\t\t\tblockTypes: getBlockTypes(),\n\t\t\t\t__experimentalLocalAutosaveInterval: getPreference(\n\t\t\t\t\t'localAutosaveInterval'\n\t\t\t\t),\n\t\t\t\tkeepCaretInsideBlock: isFeatureActive( 'keepCaretInsideBlock' ),\n\t\t\t\tisTemplateMode: isEditingTemplate(),\n\t\t\t\ttemplate:\n\t\t\t\t\tsupportsTemplateMode && isViewable\n\t\t\t\t\t\t? getEditedPostTemplate()\n\t\t\t\t\t\t: null,\n\t\t\t\tpost: postObject,\n\t\t\t};\n\t\t},\n\t\t[ postType, postId ]\n\t);\n\n\tconst { updatePreferredStyleVariations, setIsInserterOpened } = useDispatch(\n\t\teditPostStore\n\t);\n\n\tconst editorSettings = useMemo( () => {\n\t\tconst result = {\n\t\t\t...settings,\n\t\t\t__experimentalPreferredStyleVariations: {\n\t\t\t\tvalue: preferredStyleVariations,\n\t\t\t\tonChange: updatePreferredStyleVariations,\n\t\t\t},\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\thasReducedUI,\n\t\t\t__experimentalLocalAutosaveInterval,\n\n\t\t\t// This is marked as experimental to give time for the quick inserter to mature.\n\t\t\t__experimentalSetIsInserterOpened: setIsInserterOpened,\n\t\t\tkeepCaretInsideBlock,\n\t\t\t// Keep a reference of the `allowedBlockTypes` from the server to handle use cases\n\t\t\t// where we need to differentiate if a block is disabled by the user or some plugin.\n\t\t\tdefaultAllowedBlockTypes: settings.allowedBlockTypes,\n\t\t};\n\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif ( size( hiddenBlockTypes ) > 0 ) {\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes =\n\t\t\t\ttrue === settings.allowedBlockTypes\n\t\t\t\t\t? map( blockTypes, 'name' )\n\t\t\t\t\t: settings.allowedBlockTypes || [];\n\n\t\t\tresult.allowedBlockTypes = without(\n\t\t\t\tdefaultAllowedBlockTypes,\n\t\t\t\t...hiddenBlockTypes\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}, [\n\t\tsettings,\n\t\thasFixedToolbar,\n\t\tfocusMode,\n\t\thasReducedUI,\n\t\thiddenBlockTypes,\n\t\tblockTypes,\n\t\tpreferredStyleVariations,\n\t\t__experimentalLocalAutosaveInterval,\n\t\tsetIsInserterOpened,\n\t\tupdatePreferredStyleVariations,\n\t\tkeepCaretInsideBlock,\n\t] );\n\n\tconst styles = useMemo( () => {\n\t\tconst themeStyles = [];\n\t\tconst presetStyles = [];\n\t\tsettings.styles.forEach( ( style ) => {\n\t\t\tif ( ! style.__unstableType || style.__unstableType === 'theme' ) {\n\t\t\t\tthemeStyles.push( style );\n\t\t\t} else {\n\t\t\t\tpresetStyles.push( style );\n\t\t\t}\n\t\t} );\n\t\tconst defaultEditorStyles = [\n\t\t\t...settings.defaultEditorStyles,\n\t\t\t...presetStyles,\n\t\t];\n\t\treturn hasThemeStyles && themeStyles.length\n\t\t\t? settings.styles\n\t\t\t: defaultEditorStyles;\n\t}, [ settings, hasThemeStyles ] );\n\n\tif ( ! post ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<StrictMode>\n\t\t\t<ShortcutProvider>\n\t\t\t\t<SlotFillProvider>\n\t\t\t\t\t<EditorProvider\n\t\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t\tpost={ post }\n\t\t\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t\t__unstableTemplate={\n\t\t\t\t\t\t\tisTemplateMode ? template : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t>\n\t\t\t\t\t\t<ErrorBoundary onError={ onError }>\n\t\t\t\t\t\t\t<EditorInitialization postId={ postId } />\n\t\t\t\t\t\t\t<Layout styles={ styles } />\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t\t<PostLockedModal />\n\t\t\t\t\t</EditorProvider>\n\t\t\t\t</SlotFillProvider>\n\t\t\t</ShortcutProvider>\n\t\t</StrictMode>\n\t);\n}\n\nexport default Editor;\n","/**\n * External dependencies\n */\nimport { difference } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\nimport { MenuItem } from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\n\nconst isEverySelectedBlockAllowed = ( selected, allowed ) =>\n\tdifference( selected, allowed ).length === 0;\n\n/**\n * Plugins may want to add an item to the menu either for every block\n * or only for the specific ones provided in the `allowedBlocks` component property.\n *\n * If there are multiple blocks selected the item will be rendered if every block\n * is of one allowed type (not necessarily the same).\n *\n * @param {string[]} selectedBlocks Array containing the names of the blocks selected\n * @param {string[]} allowedBlocks  Array containing the names of the blocks allowed\n * @return {boolean} Whether the item will be rendered or not.\n */\nconst shouldRenderItem = ( selectedBlocks, allowedBlocks ) =>\n\t! Array.isArray( allowedBlocks ) ||\n\tisEverySelectedBlockAllowed( selectedBlocks, allowedBlocks );\n\n/**\n * Renders a new item in the block settings menu.\n *\n * @param {Object}                props                 Component props.\n * @param {Array}                 [props.allowedBlocks] An array containing a list of block names for which the item should be shown. If not present, it'll be rendered for any block. If multiple blocks are selected, it'll be shown if and only if all of them are in the allowed list.\n * @param {WPBlockTypeIconRender} [props.icon]          The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element.\n * @param {string}                props.label           The menu item text.\n * @param {Function}              props.onClick         Callback function to be executed when the user click the menu item.\n * @param {boolean}               [props.small]         Whether to render the label or not.\n * @param {string}                [props.role]          The ARIA role for the menu item.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginBlockSettingsMenuItem = wp.editPost.PluginBlockSettingsMenuItem;\n *\n * function doOnClick(){\n * \t// To be called when the user clicks the menu item.\n * }\n *\n * function MyPluginBlockSettingsMenuItem() {\n * \treturn wp.element.createElement(\n * \t\tPluginBlockSettingsMenuItem,\n * \t\t{\n * \t\t\tallowedBlocks: [ 'core/paragraph' ],\n * \t\t\ticon: 'dashicon-name',\n * \t\t\tlabel: __( 'Menu item text' ),\n * \t\t\tonClick: doOnClick,\n * \t\t}\n * \t);\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginBlockSettingsMenuItem } from '@wordpress/edit-post';\n *\n * const doOnClick = ( ) => {\n *     // To be called when the user clicks the menu item.\n * };\n *\n * const MyPluginBlockSettingsMenuItem = () => (\n *     <PluginBlockSettingsMenuItem\n * \t\tallowedBlocks={ [ 'core/paragraph' ] }\n * \t\ticon='dashicon-name'\n * \t\tlabel={ __( 'Menu item text' ) }\n * \t\tonClick={ doOnClick } />\n * );\n * ```\n *\n * @return {WPComponent} The component to be rendered.\n */\nconst PluginBlockSettingsMenuItem = ( {\n\tallowedBlocks,\n\ticon,\n\tlabel,\n\tonClick,\n\tsmall,\n\trole,\n} ) => (\n\t<BlockSettingsMenuControls>\n\t\t{ ( { selectedBlocks, onClose } ) => {\n\t\t\tif ( ! shouldRenderItem( selectedBlocks, allowedBlocks ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ compose( onClick, onClose ) }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t\tlabel={ small ? label : undefined }\n\t\t\t\t\trole={ role }\n\t\t\t\t>\n\t\t\t\t\t{ ! small && label }\n\t\t\t\t</MenuItem>\n\t\t\t);\n\t\t} }\n\t</BlockSettingsMenuControls>\n);\n\nexport default PluginBlockSettingsMenuItem;\n","/**\n * WordPress dependencies\n */\nimport { ActionItem } from '@wordpress/interface';\nimport { compose } from '@wordpress/compose';\nimport { withPluginContext } from '@wordpress/plugins';\n\n/**\n * Renders a menu item in `Plugins` group in `More Menu` drop down, and can be used to as a button or link depending on the props provided.\n * The text within the component appears as the menu item label.\n *\n * @param {Object}                props                                 Component properties.\n * @param {string}                [props.href]                          When `href` is provided then the menu item is represented as an anchor rather than button. It corresponds to the `href` attribute of the anchor.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered to the left of the menu item label.\n * @param {Function}              [props.onClick=noop]                  The callback function to be executed when the user clicks the menu item.\n * @param {...*}                  [props.other]                         Any additional props are passed through to the underlying [MenuItem](https://github.com/WordPress/gutenberg/tree/HEAD/packages/components/src/menu-item/README.md) component.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginMoreMenuItem = wp.editPost.PluginMoreMenuItem;\n * var moreIcon = wp.element.createElement( 'svg' ); //... svg element.\n *\n * function onButtonClick() {\n * \talert( 'Button clicked.' );\n * }\n *\n * function MyButtonMoreMenuItem() {\n * \treturn wp.element.createElement(\n * \t\tPluginMoreMenuItem,\n * \t\t{\n * \t\t\ticon: moreIcon,\n * \t\t\tonClick: onButtonClick,\n * \t\t},\n * \t\t__( 'My button title' )\n * \t);\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginMoreMenuItem } from '@wordpress/edit-post';\n * import { more } from '@wordpress/icons';\n *\n * function onButtonClick() {\n * \talert( 'Button clicked.' );\n * }\n *\n * const MyButtonMoreMenuItem = () => (\n * \t<PluginMoreMenuItem\n * \t\ticon={ more }\n * \t\tonClick={ onButtonClick }\n * \t>\n * \t\t{ __( 'My button title' ) }\n * \t</PluginMoreMenuItem>\n * );\n * ```\n *\n * @return {WPComponent} The component to be rendered.\n */\nexport default compose(\n\twithPluginContext( ( context, ownProps ) => {\n\t\treturn {\n\t\t\ticon: ownProps.icon || context.icon,\n\t\t\tname: 'core/edit-post/plugin-more-menu',\n\t\t};\n\t} )\n)( ActionItem );\n","/**\n * WordPress dependencies\n */\nimport { ComplementaryAreaMoreMenuItem } from '@wordpress/interface';\n\n/**\n * Renders a menu item in `Plugins` group in `More Menu` drop down,\n * and can be used to activate the corresponding `PluginSidebar` component.\n * The text within the component appears as the menu item label.\n *\n * @param {Object}                props                                 Component props.\n * @param {string}                props.target                          A string identifying the target sidebar you wish to be activated by this menu item. Must be the same as the `name` prop you have given to that sidebar.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered to the left of the menu item label.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginSidebarMoreMenuItem = wp.editPost.PluginSidebarMoreMenuItem;\n * var moreIcon = wp.element.createElement( 'svg' ); //... svg element.\n *\n * function MySidebarMoreMenuItem() {\n * \treturn wp.element.createElement(\n * \t\tPluginSidebarMoreMenuItem,\n * \t\t{\n * \t\t\ttarget: 'my-sidebar',\n * \t\t\ticon: moreIcon,\n * \t\t},\n * \t\t__( 'My sidebar title' )\n * \t)\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginSidebarMoreMenuItem } from '@wordpress/edit-post';\n * import { more } from '@wordpress/icons';\n *\n * const MySidebarMoreMenuItem = () => (\n * \t<PluginSidebarMoreMenuItem\n * \t\ttarget=\"my-sidebar\"\n * \t\ticon={ more }\n * \t>\n * \t\t{ __( 'My sidebar title' ) }\n * \t</PluginSidebarMoreMenuItem>\n * );\n * ```\n *\n * @return {WPComponent} The component to be rendered.\n */\n\nexport default function PluginSidebarMoreMenuItem( props ) {\n\treturn (\n\t\t<ComplementaryAreaMoreMenuItem\n\t\t\t// Menu item is marked with unstable prop for backward compatibility.\n\t\t\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t\t\t__unstableExplicitMenuItem\n\t\t\tscope=\"core/edit-post\"\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport {\n\tregisterCoreBlocks,\n\t__experimentalRegisterExperimentalCoreBlocks,\n} from '@wordpress/block-library';\nimport { render, unmountComponentAtNode } from '@wordpress/element';\nimport { dispatch, select } from '@wordpress/data';\nimport { addFilter } from '@wordpress/hooks';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport './hooks';\nimport './plugins';\nimport Editor from './editor';\nimport { store as editPostStore } from './store';\n\n/**\n * Reinitializes the editor after the user chooses to reboot the editor after\n * an unhandled error occurs, replacing previously mounted editor element using\n * an initial state from prior to the crash.\n *\n * @param {Object}  postType     Post type of the post to edit.\n * @param {Object}  postId       ID of the post to edit.\n * @param {Element} target       DOM node in which editor is rendered.\n * @param {?Object} settings     Editor settings object.\n * @param {Object}  initialEdits Programmatic edits to apply initially, to be\n *                               considered as non-user-initiated (bypass for\n *                               unsaved changes prompt).\n */\nexport function reinitializeEditor(\n\tpostType,\n\tpostId,\n\ttarget,\n\tsettings,\n\tinitialEdits\n) {\n\tunmountComponentAtNode( target );\n\tconst reboot = reinitializeEditor.bind(\n\t\tnull,\n\t\tpostType,\n\t\tpostId,\n\t\ttarget,\n\t\tsettings,\n\t\tinitialEdits\n\t);\n\n\trender(\n\t\t<Editor\n\t\t\tsettings={ settings }\n\t\t\tonError={ reboot }\n\t\t\tpostId={ postId }\n\t\t\tpostType={ postType }\n\t\t\tinitialEdits={ initialEdits }\n\t\t\trecovery\n\t\t/>,\n\t\ttarget\n\t);\n}\n\n/**\n * Initializes and returns an instance of Editor.\n *\n * @param {string}  id           Unique identifier for editor instance.\n * @param {string}  postType     Post type of the post to edit.\n * @param {Object}  postId       ID of the post to edit.\n * @param {?Object} settings     Editor settings object.\n * @param {Object}  initialEdits Programmatic edits to apply initially, to be\n *                               considered as non-user-initiated (bypass for\n *                               unsaved changes prompt).\n */\nexport function initializeEditor(\n\tid,\n\tpostType,\n\tpostId,\n\tsettings,\n\tinitialEdits\n) {\n\t// Prevent adding template part in the post editor.\n\t// Only add the filter when the post editor is initialized, not imported.\n\taddFilter(\n\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t'removeTemplatePartsFromInserter',\n\t\t( can, blockType ) => {\n\t\t\tif (\n\t\t\t\t! select( editPostStore ).isEditingTemplate() &&\n\t\t\t\tblockType.name === 'core/template-part'\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn can;\n\t\t}\n\t);\n\n\tconst target = document.getElementById( id );\n\tconst reboot = reinitializeEditor.bind(\n\t\tnull,\n\t\tpostType,\n\t\tpostId,\n\t\ttarget,\n\t\tsettings,\n\t\tinitialEdits\n\t);\n\n\tdispatch( interfaceStore ).setFeatureDefaults( 'core/edit-post', {\n\t\tfixedToolbar: false,\n\t\twelcomeGuide: true,\n\t\tfullscreenMode: true,\n\t\tshowIconLabels: false,\n\t\tthemeStyles: true,\n\t\tshowBlockBreadcrumbs: true,\n\t\twelcomeGuideTemplate: true,\n\t} );\n\n\tdispatch( blocksStore ).__experimentalReapplyBlockTypeFilters();\n\tregisterCoreBlocks();\n\tif ( process.env.IS_GUTENBERG_PLUGIN ) {\n\t\t__experimentalRegisterExperimentalCoreBlocks( {\n\t\t\tenableFSEBlocks: settings.__unstableEnableFullSiteEditingBlocks,\n\t\t} );\n\t}\n\n\t// Show a console log warning if the browser is not in Standards rendering mode.\n\tconst documentMode =\n\t\tdocument.compatMode === 'CSS1Compat' ? 'Standards' : 'Quirks';\n\tif ( documentMode !== 'Standards' ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(\n\t\t\t\"Your browser is using Quirks Mode. \\nThis can cause rendering issues such as blocks overlaying meta boxes in the editor. Quirks Mode can be triggered by PHP errors or HTML code appearing before the opening <!DOCTYPE html>. Try checking the raw page source or your site's PHP error log and resolving errors there, removing any HTML before the doctype, or disabling plugins.\"\n\t\t);\n\t}\n\n\t// This is a temporary fix for a couple of issues specific to Webkit on iOS.\n\t// Without this hack the browser scrolls the mobile toolbar off-screen.\n\t// Once supported in Safari we can replace this in favor of preventScroll.\n\t// For details see issue #18632 and PR #18686\n\t// Specifically, we scroll `interface-interface-skeleton__body` to enable a fixed top toolbar.\n\t// But Mobile Safari forces the `html` element to scroll upwards, hiding the toolbar.\n\n\tconst isIphone = window.navigator.userAgent.indexOf( 'iPhone' ) !== -1;\n\tif ( isIphone ) {\n\t\twindow.addEventListener( 'scroll', ( event ) => {\n\t\t\tconst editorScrollContainer = document.getElementsByClassName(\n\t\t\t\t'interface-interface-skeleton__body'\n\t\t\t)[ 0 ];\n\t\t\tif ( event.target === document ) {\n\t\t\t\t// Scroll element into view by scrolling the editor container by the same amount\n\t\t\t\t// that Mobile Safari tried to scroll the html element upwards.\n\t\t\t\tif ( window.scrollY > 100 ) {\n\t\t\t\t\teditorScrollContainer.scrollTop =\n\t\t\t\t\t\teditorScrollContainer.scrollTop + window.scrollY;\n\t\t\t\t}\n\t\t\t\t// Undo unwanted scroll on html element, but only in the visual editor.\n\t\t\t\tif (\n\t\t\t\t\tdocument.getElementsByClassName( 'is-mode-visual' )[ 0 ]\n\t\t\t\t) {\n\t\t\t\t\twindow.scrollTo( 0, 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\trender(\n\t\t<Editor\n\t\t\tsettings={ settings }\n\t\t\tonError={ reboot }\n\t\t\tpostId={ postId }\n\t\t\tpostType={ postType }\n\t\t\tinitialEdits={ initialEdits }\n\t\t/>,\n\t\ttarget\n\t);\n}\n\nexport { default as PluginBlockSettingsMenuItem } from './components/block-settings-menu/plugin-block-settings-menu-item';\nexport { default as PluginDocumentSettingPanel } from './components/sidebar/plugin-document-setting-panel';\nexport { default as PluginMoreMenuItem } from './components/header/plugin-more-menu-item';\nexport { default as PluginPostPublishPanel } from './components/sidebar/plugin-post-publish-panel';\nexport { default as PluginPostStatusInfo } from './components/sidebar/plugin-post-status-info';\nexport { default as PluginPrePublishPanel } from './components/sidebar/plugin-pre-publish-panel';\nexport { default as PluginSidebar } from './components/sidebar/plugin-sidebar';\nexport { default as PluginSidebarMoreMenuItem } from './components/header/plugin-sidebar-more-menu-item';\nexport { default as __experimentalFullscreenModeClose } from './components/header/fullscreen-mode-close';\nexport { default as __experimentalMainDashboardButton } from './components/header/main-dashboard-button';\nexport { store } from './store';\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","r","Symbol","toStringTag","value","window","_extends","assign","target","source","this","SVG","xmlns","viewBox","Path","fillRule","clipRule","preferenceDefaults","combineReducers","features","state","action","type","scope","defaults","preferences","featureName","enableItems","singleEnableItems","itemType","item","multipleEnableItems","isEnable","currentTypeState","currentScopeState","setSingleEnableItem","enableComplementaryArea","area","disableComplementaryArea","setMultipleEnableItem","pinItem","itemId","unpinItem","toggleFeature","select","dispatch","currentValue","isFeatureActive","setFeatureValue","setFeatureDefaults","getActiveComplementaryArea","getSingleEnableItem","isItemPinned","isMultipleEnabledItemEnabled","featureValue","STORE_NAME","storeConfig","reducer","actions","selectors","persist","store","createReduxStore","registerStore","withPluginContext","context","ownProps","icon","identifier","name","complementaryAreaContext","as","Button","selectedIcon","props","ComponentToUse","isSelected","useSelect","interfaceStore","useDispatch","onClick","omit","smallScreenTitle","children","className","toggleButtonProps","toggleButton","closeSmall","classnames","tabIndex","ActionItem","Component","Fill","fpOnClick","noop","Slot","ButtonGroup","fillProps","bubblesVirtually","fills","isEmpty","Children","initializedByPlugins","__unstableExplicitMenuItem","__unstableTarget","child","includes","PluginsMenuItem","MenuItem","ComplementaryAreaMoreMenuItem","toggleProps","role","check","PinnedItems","ComplementaryAreaFill","ComplementaryAreaWrapped","withComplementaryAreaContext","closeLabel","__","header","headerClassName","isPinnable","panelClassName","title","toggleShortcut","isActiveByDefault","showIconLabels","isActive","isPinned","activeArea","isSmall","isLarge","_activeArea","viewportStore","isViewportMatch","previousIsSmall","useRef","shouldOpenWhenNotSmall","useEffect","current","useAdjustComplementaryListener","isPressed","label","showTooltip","variant","onClose","shortcut","starFilled","starEmpty","Panel","isSticky","document","body","classList","contains","remove","add","forwardRef","ref","footer","sidebar","secondarySidebar","notices","content","drawer","labels","shortcuts","navigateRegionsProps","useNavigateRegions","element","querySelector","toggle","useHTMLClass","mergedLabels","useMergeRefs","MoreMenuDropdown","DropdownComponent","DropdownMenu","popoverProps","moreVertical","position","tooltipPosition","MoreMenuFeatureToggle","info","messageActivated","messageDeactivated","feature","speak","addFilter","MediaUpload","enhance","compose","withSelect","block","hasBlockSupport","blocks","blockEditorStore","getBlocks","firstOfSameType","find","originalBlockClientId","clientId","withDispatch","selectFirst","selectBlock","withMultipleValidation","createHigherOrderComponent","BlockEdit","blockType","getBlockType","outboundType","blockName","transform","findTransform","getBlockTransforms","getOutboundType","style","minHeight","Warning","onReplace","createBlock","attributes","CopyContentMenuItem","createNotice","noticesStore","getText","editorStore","getEditedPostAttribute","useCopyToClipboard","isDismissible","flow","initialState","editorMode","panels","opened","hiddenBlockTypes","preferredStyleVariations","localAutosaveInterval","panelName","enabled","isOpen","mode","without","blockNames","union","blockStyle","interval","metaBoxes","isSaving","locations","metaBoxesPerLocation","initialized","activeModal","publishSidebarActive","removedPanels","deviceType","blockInserterPanel","listViewPanel","isEditingTemplate","openGeneralSidebar","registry","editPostStore","closeGeneralSidebar","openModal","closeModal","openPublishSidebar","closePublishSidebar","togglePublishSidebar","toggleEditorPanelEnabled","toggleEditorPanelOpened","removeEditorPanel","switchEditorMode","clearSelectedBlock","message","togglePinnedPluginItem","pluginName","hideBlockTypes","castArray","updatePreferredStyleVariations","__experimentalUpdateLocalAutosaveInterval","showBlockTypes","setAvailableMetaBoxesPerLocation","requestMetaBoxUpdates","async","tinyMCE","triggerSave","post","getCurrentPost","additionalData","comment_status","ping_status","sticky","author","filter","Boolean","formDataToMerge","FormData","getActiveMetaBoxLocations","map","location","getMetaBoxContainer","formData","reduce","memo","currentFormData","append","forEach","apiFetch","url","_wpMetaBoxUrl","method","parse","metaBoxUpdatesSuccess","metaBoxUpdatesFailure","__experimentalSetPreviewDeviceType","setIsInserterOpened","setIsListViewOpened","setIsEditingTemplate","__unstableSwitchToTemplateMode","newTemplate","createSuccessNotice","__unstableCreateTemplate","template","savedTemplate","coreStore","saveEntityRecord","editEntityRecord","id","slug","metaBoxesInitialized","initializeMetaBoxes","__unstableIsEditorReady","postType","getCurrentPostType","postboxes","page","add_postbox_toggles","wasSavingPost","isSavingPost","wasAutosavingPost","isAutosavingPost","hasMetaBoxes","subscribe","shouldTriggerMetaboxesSave","LEAF_KEY","hasWeakMap","arrayOf","createCache","cache","clear","head","isShallowEqual","b","fromIndex","selector","getDependants","rootCache","getCache","WeakMap","callSelector","node","args","dependants","len","isUniqueByDependants","lastDependants","prev","next","val","dependant","caches","has","set","getEditorMode","getPreference","isEditorSidebarOpened","createRegistrySelector","activeGeneralSidebar","isPluginSidebarOpened","getActiveGeneralSidebarName","getPreferences","preferenceKey","defaultValue","isPublishSidebarOpened","isEditorPanelRemoved","isEditorPanelEnabled","isEditorPanelOpened","isModalActive","modalName","isPluginItemPinned","createSelector","keys","isMetaBoxLocationActive","isMetaBoxLocationVisible","some","getMetaBoxesPerLocation","getAllMetaBoxes","flatten","values","isSavingMetaBoxes","__experimentalGetPreviewDeviceType","isInserterOpened","__experimentalGetInsertionPoint","rootClientId","insertionIndex","filterValue","isListViewOpened","areMetaBoxesInitialized","getEditedPostTemplate","currentTemplate","templateWithSameSlug","getEntityRecords","per_page","getEditedEntityRecord","link","__experimentalGetTemplateForLink","displayShortcut","ToolsMoreMenuGroup","createSlotFill","MenuGroup","WelcomeGuideMenuItem","isTemplateMode","registerPlugin","render","href","addQueryArgs","post_type","onSelect","external","rel","VisuallyHidden","isRichEditingEnabled","getEditorSettings","richEditingEnabled","onExit","TextEditorGlobalKeyboardShortcuts","PostTitle","PostTextEditor","small","areAdvancedSettingsOpened","keyboardShortcutsStore","getShortcutRepresentation","MaybeIframe","contentRef","shouldIframe","styles","assets","useMouseMoveTypingReset","width","height","display","WritingFlow","flex","VisualEditor","wrapperBlockName","wrapperUniqueId","getCurrentPostId","_isTemplateMode","_wrapperBlockName","themeSupportsLayout","_settings","getSettings","supportsLayout","__unstableResolvedAssets","desktopCanvasStyles","margin","flexFlow","background","templateModeStyles","borderRadius","border","borderBottom","resizedCanvasStyles","useResizeCanvas","defaultLayout","useSetting","previewMode","toLowerCase","paddingBottom","animatedStyles","useClipboardHandler","useTypewriter","useTypingObserver","useBlockSelectionClearer","blockSelectionClearerRef","RecursionProvider","useNoRecursiveRenders","layout","useMemo","BlockTools","__unstableContentRef","VisualEditorGlobalKeyboardShortcuts","animate","padding","arrowLeft","initial","BlockList","__experimentalLayout","__unstableBlockSettingsMenuFirstItem","getBlockSelectionStart","isModeToggleDisabled","codeEditingEnabled","registerShortcut","category","description","keyCombination","modifier","character","aliases","useShortcut","isDisabled","event","preventDefault","sidebarToOpen","textFormattingShortcuts","KeyCombination","forceAriaLabel","displayShortcutList","ariaLabel","shortcutAriaLabel","index","Fragment","alias","getShortcutKeyCombination","getShortcutDescription","getShortcutAliases","MODAL_NAME","ShortcutList","isString","ShortcutSection","ShortcutCategorySection","categoryName","additionalShortcuts","categoryShortcuts","getCategoryShortcuts","concat","toggleModal","Modal","onRequestClose","size","cloneElement","help","isChecked","onChange","ToggleControl","checked","CustomFieldsConfirmation","willEnable","isReloading","setIsReloading","useState","isBusy","disabled","getElementById","submit","areCustomFieldsEnabled","enableCustomFields","setIsChecked","isRemoved","ifCondition","BaseOption","EnablePluginDocumentSettingPanelOption","isPublishSidebarEnabled","enablePublishSidebar","disablePublishSidebar","isEnabled","ifViewportMatches","areCustomFieldsRegistered","sectionProps","thirdPartyMetaBoxes","blockTypes","onItemChange","CheckboxControl","BlockIcon","partial","BlockManagerCategory","instanceId","useInstanceId","defaultAllowedBlockTypes","filteredBlockTypes","toggleVisible","useCallback","nextIsChecked","toggleAllVisible","checkedBlockNames","titleId","isAllChecked","ariaChecked","getBlockTypes","getCategories","isMatchingSearchTerm","blocksStore","numberOfHiddenBlocks","categories","debouncedSpeak","useDebounce","search","setSearch","parent","count","resultsFoundMessage","sprintf","_n","SearchControl","placeholder","nextSearch","PREFERENCES_MENU","PreferencesModal","isLargeViewport","useViewportMatch","isViewable","getPostType","showBlockBreadcrumbsOption","sections","tabLabel","PostTaxonomies","taxonomyWrapper","taxonomy","PostFeaturedImageCheck","PostExcerptCheck","PostTypeSupportCheck","supportKeys","PageAttributesCheck","activeMenu","setActiveMenu","tabs","sectionsContentMap","accumulator","getCurrentTab","tab","modalContent","TabPanel","initialTabName","orientation","initialPath","path","Card","isBorderless","CardBody","Item","isAction","justify","FlexItem","isRTL","chevronLeft","chevronRight","section","CardHeader","gap","BrowserURL","constructor","super","historyId","componentDidUpdate","prevProps","postId","postStatus","setBrowserURL","setTrashURL","trashed","ids","getPostTrashedURL","history","replaceState","getPostEditURL","setState","status","wp_id","isRequestingSiteIcon","siteIconUrl","getEntityRecord","isResolving","siteData","site_icon_url","disableMotion","useReducedMotion","buttonIcon","Icon","wordpress","variants","expand","scale","transition","duration","alt","src","whileHover","inserterButton","isInserterEnabled","isTextModeEnabled","isListViewOpen","listViewShortcut","hasInserterItems","getBlockRootClientId","getBlockSelectionEnd","isWideViewport","toolbarAriaLabel","toggleListView","overflowItems","ToolbarItem","TableOfContents","hasOutlineItemsDisabled","repositionDropdown","listView","openInserter","focus","NavigableToolbar","onMouseDown","plus","_x","ToolSelector","EditorHistoryUndo","EditorHistoryRedo","MODES","isCodeEditingEnabled","choices","choice","MenuItemsChoice","PreferencesMenuItem","POPOVER_PROPS","hasPublishAction","isBeingScheduled","isEditedPostBeingScheduled","isPending","isCurrentPostPending","isPublished","isCurrentPostPublished","isScheduled","isCurrentPostScheduled","forceIsDirty","forceIsSaving","setEntitiesSavedStatesCallback","IS_TOGGLE","IS_BUTTON","isSmallerThanMediumViewport","component","PostPublishButton","isToggle","onToggle","DevicePreview","hasActiveMetaboxes","isPostSaveable","isEditedPostSaveable","setPreviewDeviceType","setDeviceType","PostPreviewButton","forceIsAutosaveable","forcePreviewLink","textContent","slotName","MainDashboardButtonSlot","MainDashboardButton","slot","useSlot","DeleteTemplate","updateEditorSettings","editPost","deleteEntityRecord","showConfirmDialog","setShowConfirmDialog","templateTitle","isDestructive","onConfirm","settings","newAvailableTemplates","pickBy","availableTemplates","_title","onCancel","EditTemplateTitle","has_theme_file","TextControl","newTitle","mapValues","existingTitle","TemplateDescription","level","weight","marginTop","isEditing","_isEditing","hasOptions","custom","isLink","Dropdown","contentClassName","renderToggle","chevronDown","renderContent","lineHeight","hasReducedUI","PostSavedState","InserterSidebar","insertionPoint","showMostUsedBlocks","isMobileViewport","TagName","inserterDialogRef","inserterDialogProps","useDialog","focusOnMount","libraryRef","focusSearch","close","showInserterHelpPanel","shouldFocusBlock","__experimentalInsertionIndex","__experimentalFilterValue","ListViewSidebar","focusOnMountRef","useFocusOnMount","headerFocusReturnRef","useFocusReturn","contentFocusReturnRef","labelId","onKeyDown","keyCode","ESCAPE","defaultPrevented","showNestedBlocks","__experimentalFeatures","__experimentalPersistentListViewFeatures","sidebarName","openDocumentSettings","documentLabel","getPostTypeLabel","documentAriaLabel","documentActiveClass","blockAriaLabel","blockActiveClass","templateAriaLabel","templateActiveClass","PostVisibilityCheck","canEdit","PanelRow","PostVisibilityLabel","PostVisibility","PostTrash","PostTrashCheck","anchorRef","PostScheduleCheck","PostScheduleLabel","PostSchedule","PostStickyCheck","PostSticky","PostAuthorCheck","PostAuthor","PostSlugCheck","PostSlug","PostFormatCheck","PostFormat","PostPendingStatusCheck","PostPendingStatus","PluginPostStatusInfo","PANEL_NAME","isOpened","onTogglePanel","PanelBody","PostLastRevisionCheck","PostLastRevision","taxonomyMenuName","PostTaxonomiesCheck","applyWithSelect","applyWithDispatch","PostFeaturedImage","PostExcerpt","isPermalinkEditable","getPermalinkParts","getEditedPostSlug","permalinkParts","postLink","isEditable","postSlug","safeDecodeURIComponent","postTypeLabel","hasPermalinkParts","permalinkPrefix","prefix","permalinkSuffix","suffix","editPermalink","newSlug","forceEmptyField","setForceEmptyField","prefixElement","postNameElement","suffixElement","autoComplete","spellCheck","newValue","onBlur","cleanForSlug","ExternalLink","PostComments","PostPingbacks","PageAttributesParent","PageAttributesOrder","container","formRef","appendChild","Spinner","MetaBoxVisibility","componentDidMount","updateDOM","isVisible","MetaBoxes","useRegistry","isEditorReady","_areMetaBoxesInitialized","PluginDocumentSettingPanel","PluginSidebarEditPost","postTitle","isPostsPage","isModalOpen","setIsModalOpen","setIsBusy","setTitle","supportsTemplateMode","defaultTemplate","viewable","_supportsTemplateMode","defaultBlockTemplate","defaultTitle","overlayClassName","onSubmit","newTemplateContent","serialize","tagName","inherit","kebabCase","Flex","align","expanded","selectedTemplate","fetchedTemplates","canUserCreate","canUser","currentPostId","currentPostType","_isViewable","templateRecords","page_for_posts","templates","fromPairs","rendered","panelTitle","Notice","SelectControl","hideLabelFromVision","templateSlug","options","templateName","FlexBlock","SIDEBAR_ACTIVE_BY_DEFAULT","Platform","web","native","keyboardShortcut","cog","BlockInspector","WelcomeGuideImage","nonAnimatedSrc","animatedSrc","srcSet","media","WelcomeGuideDefault","Guide","contentLabel","finishButtonText","onFinish","pages","image","createInterpolateElement","InserterIconImage","WelcomeGuideTemplate","WelcomeGuide","PluginPostPublishPanel","initialOpen","PluginPrePublishPanel","ActionsPanel","closeEntitiesSavedStates","isEntitiesSavedStatesOpen","publishSidebarOpened","hasNonPostEntityChanges","openEntitiesSavedStates","unmountableContent","PostPublishPanel","PrePublishExtension","PostPublishExtension","EntitiesSavedStates","interfaceLabels","isHugeViewport","createErrorNotice","isFullscreenActive","sidebarIsOpened","hasFixedToolbar","previousShortcut","nextShortcut","hasBlockSelected","showBlockBreadcrumbs","editorSettings","getAllShortcutKeyCombinations","entitiesSavedStatesCallback","UnsavedChangesWarning","AutosaveMonitor","LocalAutosaveMonitor","EditorKeyboardShortcutsRegister","EditorSnackbars","EditorNotices","ScrollLock","BlockStyles","BlockBreadcrumb","rootLabelText","previous","Popover","PluginArea","onError","EditorInitialization","hasBlockSelection","useBlockSelectionListener","newPermalink","nodeToUpdate","setAttribute","useUpdatePostLinkListener","initialEdits","focusMode","hasThemeStyles","__experimentalLocalAutosaveInterval","keepCaretInsideBlock","postObject","posts","result","__experimentalPreferredStyleVariations","__experimentalSetIsInserterOpened","allowedBlockTypes","themeStyles","presetStyles","__unstableType","defaultEditorStyles","StrictMode","ShortcutProvider","SlotFillProvider","EditorProvider","useSubRegistry","__unstableTemplate","ErrorBoundary","PostLockedModal","allowedBlocks","BlockSettingsMenuControls","selectedBlocks","selected","allowed","difference","shouldRenderItem","PluginSidebarMoreMenuItem","reinitializeEditor","unmountComponentAtNode","reboot","bind","recovery","initializeEditor","can","fixedToolbar","welcomeGuide","fullscreenMode","welcomeGuideTemplate","__experimentalReapplyBlockTypeFilters","registerCoreBlocks","__experimentalRegisterExperimentalCoreBlocks","enableFSEBlocks","__unstableEnableFullSiteEditingBlocks","compatMode","console","warn","navigator","userAgent","indexOf","addEventListener","editorScrollContainer","getElementsByClassName","scrollY","scrollTop","scrollTo"],"sourceRoot":""}